{"version":3,"sources":["containers/App/App.jsx","containers/App/ScrollToTop.jsx","containers/Layout/topbar/TopbarSidebarButton.jsx","redux/actions/fetch.js","redux/actions/endpoints.js","containers/Layout/topbar/TopbarMenuLink.jsx","redux/actions/loginActions.js","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarCategory.jsx","constants/strings.js","containers/Layout/sidebar/SidebarContent.jsx","constants/routes.js","shared/prop-types/ReducerProps.js","containers/Layout/sidebar/Sidebar.jsx","containers/Layout/index.jsx","containers/App/MainWrapper.jsx","containers/LogIn/components/LogInForm.jsx","containers/LogIn/index.jsx","components/containers/Tables/MaterialTable/components/MatTableHead.jsx","constants/utils.js","components/containers/Tables/MaterialTable/components/MatTable.jsx","components/containers/Tables/MaterialTable/index.jsx","components/user/userBlockToggle.js","redux/actions/userActions.js","containers/UserManagement/ViewUsers/container/ViewUsersContainer.jsx","containers/UserManagement/ViewUsers/index.jsx","redux/actions/doctorActions.js","components/Form/FormValidation/components/validate.js","containers/DoctorManagement/CreateDoctor/constants/doctorForm.js","components/shared/components/form/Select.jsx","components/shared/components/form/DatePicker.jsx","components/shared/components/form/DropZone.jsx","containers/DoctorManagement/CreateDoctor/components/ProfileImageUploadForm.jsx","containers/DoctorManagement/CreateDoctor/components/CreateDoctorCard.jsx","containers/DoctorManagement/CreateDoctor/index.jsx","containers/DoctorManagement/CreateDoctor/editDoctor.jsx","containers/DoctorManagement/ViewDoctors/container/ViewDoctorsContainer.jsx","containers/DoctorManagement/ViewDoctors/index.jsx","containers/HospitalManagement/CreateHospital/constants/hospitalForm.js","containers/HospitalManagement/CreateHospital/components/CreateHospitalCard.jsx","redux/actions/hospitalActions.js","containers/HospitalManagement/CreateHospital/index.jsx","containers/HospitalManagement/CreateHospital/editHospital.js","containers/HospitalManagement/ViewHospitals/container/ViewHospitalsContainer.jsx","containers/HospitalManagement/ViewHospitals/index.jsx","containers/ScheduleManagement/CreateSchedule/constants/AddScheduleConfig.js","redux/actions/scheduleActions.js","components/shared/components/form/TimePicker.jsx","components/shared/components/form/ToggleButton.jsx","containers/ScheduleManagement/CreateSchedule/components/CreateScheduleCard.jsx","containers/ScheduleManagement/CreateSchedule/index.jsx","containers/ScheduleManagement/CreateSchedule/editSchedule.jsx","containers/ScheduleManagement/ViewSchedule/container/ViewSchedulesContainer.jsx","containers/ScheduleManagement/ViewSchedule/index.jsx","containers/Announcement/components/commons.js","containers/Announcement/components/AnnouncementForm.jsx","containers/Announcement/components/AnnouncementsTable.jsx","containers/Announcement/index.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/components/CreateFrontdeskUserForm.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/components/LinkFrontdeskUserForm.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/index.jsx","containers/FrontdeskUsers/ViewFrontdeskUser/components/FrontdeskUsersTable.jsx","redux/actions/frontdeskActions.js","containers/FrontdeskUsers/ViewFrontdeskUser/index.jsx","containers/Bookings/ViewBookings/components/ViewBookingsTable.jsx","containers/Bookings/ViewBookings/index.jsx","components/custom/TextInputDisabled.jsx","containers/Bookings/ViewBookingDetail/components/BookingDetailCard.jsx","containers/Bookings/ViewBookingDetail/components/UserDetailsCard.jsx","containers/Bookings/ViewBookingDetail/components/DoctorDetailsCard.jsx","containers/Bookings/ViewBookingDetail/components/HospitalDetailsCard.jsx","containers/Bookings/ViewBookingDetail/index.jsx","containers/CustomerCare/components/CustomerCareForm.jsx","containers/CustomerCare/index.jsx","containers/SettingsManagement/components/ChangePasswordCard.jsx","containers/SettingsManagement/index.jsx","containers/App/Router.jsx","redux/reducers/themeReducer.js","redux/reducers/sidebarReducer.js","containers/App/store.js","redux/reducers/doctorReducer.js","redux/reducers/hospitalReducers.js","redux/reducers/userReducer.js","redux/reducers/scheduleReducers.js","redux/reducers/fdUserReducer.js","index.jsx","redux/actions/themeActions.js","redux/actions/sidebarActions.js"],"names":["App","_this","Object","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","loading","loaded","_this2","window","addEventListener","setState","setTimeout","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_redux__WEBPACK_IMPORTED_MODULE_7__","store","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_ScrollToTop__WEBPACK_IMPORTED_MODULE_13__","react__WEBPACK_IMPORTED_MODULE_5__","className","concat","fill","d","_Router__WEBPACK_IMPORTED_MODULE_11__","Component","hot","module","ScrollToTop","prevProps","props","location","pathname","scrollTo","children","PureComponent","withRouter","icon","process","TopbarSidebarButton","_this$props","changeMobileSidebarVisibility","changeSidebarVisibility","react_default","type","onClick","src","alt","post","url","body","fetch","headers","Accept","Content-Type","method","JSON","stringify","put","get","endpoints","login","loginStatus","logout","sendOTP","doctorList","createDoctor","updateDoctor","uploadProfileImage","deleteProfileImage","getSpecializations","createHospital","updateHospital","createSchedule","getDoctorMasterList","getHospitalMasterList","getFrontdeskUsersMasterList","createFrontdeskUser","getDoctorFrontdeskUser","linkFrontdeskUser","getFrontDeskUsers","getCustomerList","getScheduleList","getScheduleDetail","blockUser","unblockUser","getHospitalList","getHospitalDetail","getDoctorDetail","getScheduleDoctors","getScheduleHospitals","sendAnnouncement","getAnnouncements","getBookings","getBookingDetail","getSupportDetails","setSupportDetails","changePassword","updateSchedule","deleteSchedule","TopbarMenuLinks","_handleLogout","Endpoint","then","response","json","data","console","log","title","path","Link","to","Ava","TopbarProfile","classCallCheck","possibleConstructorReturn","getPrototypeOf","toggle","prevState","collapse","ChevronDownIcon_default","Collapse","isOpen","TopbarMenuLink_TopbarMenuLinks","Topbar","topbar_TopbarSidebarButton","style","alignSelf","TopbarProfile_TopbarProfile","SidebarLink","_ref","newLink","route","NavLink","activeClassName","Badge","defaultProps","SidebarCategory","isNew","categoryClass","classNames","sidebar__category-wrap","sidebar__category-wrap--open","SidebarContent","hideSidebar","SidebarCategory_SidebarCategory","sidebar_SidebarLink","position","bottom","string","PropTypes","shape","Sidebar","show","bool","changeToDark","changeToLight","sidebar","sidebarClass","sidebar--show","sidebar--collapse","react_smooth_scrollbar_default","sidebar_SidebarContent","Layout","dispatch","changeThemeToDark","changeThemeToLight","layoutClass","layout","layout--collapse","topbar_Topbar","sidebar_Sidebar","connect","materialTheme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","MainWrapper","theme","styles","LogInForm","showPassword","e","preventDefault","_handleSubmit","saveData","username","password","res","alert","context","router","history","push","status","_this3","handleSubmit","onSubmit","AccountOutlineIcon_default","Field","name","component","placeholder","KeyVariantIcon_default","EyeIcon_default","href","Button","contextTypes","func","isRequired","reduxForm","form","LogIn","components_LogInForm","MatTableHead","createSortHandler","property","event","onRequestSort","onSelectAllClick","order","orderBy","numSelected","rowCount","columns","showCheckbox","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","onChange","map","row","key","id","align","numeric","sortDirection","TableSortLabel_default","active","direction","whiteSpace","label","UNDERSCORE","require","tableBody","overflow","height","MatTable","selected","page","rowsPerPage","handleRequestSort","stateOrderBy","stateOrder","handleSelectAllClick","n","handleClick","selectedIndex","indexOf","newSelected","slice","length","handleChangePage","handleChangeRowsPerPage","target","value","handleDeleteSelected","copyData","toConsumableArray","_loop","i","filter","obj","isSelected","_this$state2","_data","sortBy","chain","reverse","getSort","Table_default","MatTableHead_MatTableHead","TableBody_default","classes","_id","role","aria-checked","tabIndex","scope","render","TableFooter_default","TablePagination_default","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","MaterialTable","MatTable_MatTable","React","UserBlockToggle","_handleToggle","userId","loadData","toolText","color","Tooltip_default","Switch_default","Action","ViewUsersContainer","_onLoad","getUserList","_handleNotification","objectSpread","_renderToggle","userBlockToggle","afterToggle","userDataList","disablePadding","text","Col","md","Card","CardBody","Tables_MaterialTable","object","userState","user","customerList","isEmpty","users","totalCount","totalRecords","endpoint","ViewUsersPage","Container","Row","container_ViewUsersContainer","getSpecialization","validate","values","errors","email","test","select","emptyField","addDoctor","fullName","errorText","degree","mobile","latitude","longitude","yearsOfExperience","profileContent","SelectField","handleChange","selectedOption","setIdWithValue","list","forEach","options","optionList","renderId","react_select_esm","clearable","classNamePrefix","RenderSelectField","input","meta","width","Select_SelectField","assign","touched","error","DatePickerField","build_default","dateFormat","date","renderDatePickerField","DatePicker_DatePickerField","DropZoneField","onDrop","bind","assertThisInitialized","file","fl","preview","URL","createObjectURL","index","val","_this$props2","customHeight","files","react_dropzone_dist_es","accept","multiple","fileToUpload","getRootProps","getInputProps","Array","isArray","removeFile","renderDropZoneField","DropZone_DropZoneField","ProfileImageUploadForm","profileImage","formData","FormData","append","doctorPdNumber","EndPoints","reset","onUploadComplete","catch","err","onRef","undefined","ReactDOM","findDOMNode","dispatchEvent","Event","ref","element","withTranslation","renderField","disabled","_ref$meta","CreateDoctorCard","_handleChange","_ref2","_ref2$fullName","_ref2$mobile","_ref2$yearsOfExperien","_ref2$degree","_ref2$dateOfBirth","dateOfBirth","_ref2$specialization","specialization","_ref2$gender","gender","_ref2$profileContent","editValue","initialValues","keys","validateTextData","validateOtherFields","_mobileNumberValidate","SubmissionError","isUpdate","doctorId","pdNumber","toastMessage","message","displayToast","disableButtonActions","profileImageUploader","upload","toString","_parseList","dataList","handleDOBChange","_handleClose","doProfileImageUpload","showProfileImageUploader","pathName","includes","split","clearDoctorDetail","pristine","submitting","specializations","sm","renderDatePicker","renderSelectField","float","ButtonToolbar","flexDirection","justifyContent","paddingLeft","resizeMode","Endpoints","marginTop","components_ProfileImageUploadForm","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","open","ContentProps","aria-describedby","onClose","enableReinitialize","destroyOnUnmount","doctorState","doctor","defaultData","doctorDetail","CreateDoctorPage","components_CreateDoctorCard","EditDoctor","ViewDoctorsContainer","getDoctorList","renderDoctorNameCell","display","doctorDetails","_handleEditHospital","class","doctors","ExamplePage","container_ViewDoctorsContainer","addHospital","streetName","building","address","landmark","pincode","CreateHospitalCard","_ref2$name","_ref2$streetName","_ref2$building","_ref2$location","_ref2$landmark","_ref2$pincode","_ref2$latitude","_ref2$longitude","_validatePincode","latLng","hospitalPdNumber","update","save","hospitalId","clearHospitalDetail","snapshot","size","ContentSaveIcon_default","hospitalState","hospital","hospitalDetail","parse","CreateHospitalPage","components_CreateHospitalCard","EditHospitalPage","ViewHospitalsContainer","_renderOperation","hospitalList","hospitals","ViewHospitalPage","container_ViewHospitalsContainer","addSchedule","weekday","fromTime","dbKey","toTime","scheduleId","TimePickerField","setOpen","toggleOpen","enableTime","noCalendar","renderTimePickerField","timeMode","TimePicker_TimePickerField","ToggleButtonField","defaultChecked","renderToggleButtonField","ToggleButton_ToggleButtonField","moment","weekDays","TokenType","fastrack","number","time","emptyToken","startTime","endTime","showSnackBar","snackBarMessage","CreateScheduleCard","_decodeTokenList","tokenList","isFastrack","isEqual","_ref2$doctor","_ref2$hospital","_ref2$weekday","_ref2$isFastrack","_ref2$fromTime","_ref2$toTime","_updateSchedule","_addSchedule","deleteTokens","token","addTokens","_parseToken","_validateScheduleFields","_validateTokens","tokens","errorToken","format","findIdInList","parseInt","_handleAddToken","tokenNo","tokenType","tokenTime","_handleDelete","result","_handleDeleteToken","updatedToken","_handleTokenChange","_handleExistDeleteToken","existTokens","_handleFastrack","renderTokenList","_this$state3","outline","setEmptyData","column","_handleSnackBarClose","updated","clearScheduleDetail","_this$_decodeTokenLis","renderTimeField","nextProps","scheduleState","schedule","scheduleDetail","doctorMasterList","hospitalMasterList","scheduleList","CreateSchedulePage","components_CreateScheduleCard","EditSchedulePage","ViewSchedulesContainer","tooltext","handleToggle","handleSelect","clearScheduleList","Select","ViewSchedulesPage","container_ViewSchedulesContainer","sendPushMessage","callback","_renderTitleInput","_renderMessageInput","_ref2$meta","AnnouncementForm","_ref3","httpStatus","afterPush","displayMessage","lg","AnnouncementsTable","onResendClick","SendIcon_default","AnnouncementPage","announcements","_fetchAnnouncements","_","announcementsData","announcement","Moment","tz","components_AnnouncementForm","_displayToast","components_AnnouncementsTable","renderTextInput","CreateFrontdeskUserCard","onResponse","MODE","VIEW","PREEDIT","EDIT","doctorsListPromise","Promise","resolve","reject","hospitalListPromise","LinkFrontdeskUserForm","_handleViewSubmit","isNull","showFrontdeskUserField","mode","initialize","frontdeskUser","_handlePreEditSubmit","_handleEditSubmit","frontdeskUserId","_resetForm","doctorsList","hospitalsList","frontdeskUsersList","_fetchData","all","_this4","frontdeskUsersPromise","CreateFrontdeskUsersPage","frontdeskUsers","_fetchFrontdeskUsers","fdu","CreateFrontdeskUserForm","components_LinkFrontdeskUserForm","FrontdeskUsersTable","getColumns","refreshTable","onActionComplete","getFdUserList","fdUserList","fduserState","fduser","ViewFrontdeskUsersPage","getFrontdeskList","components_FrontdeskUsersTable","_onActionComplete","ViewBookingsTable","CloseCircleIcon_default","TicketPercentIcon_default","CheckIcon_default","bookingId","ViewBookingsTablePage","bookings","destructedBookings","booking","hospitalDetails","userDetails","tokenDate","doctorName","hospitalName","components_ViewBookingsTable","TextInputDisabled","BookingDetailCard","_props$data","bookedTimeStamp","statusColor","textAlign","UserDetailCard","DoctorDetailCard","HospitalDetailCard","ViewBookingDetailPage","bookingDetail","components_BookingDetailCard","UserDetailsCard","DoctorDetailsCard","HospitalDetailsCard","CustomerCareForm","contactNumber","contactEmail","_updateSupportDetails","_handleEdit","isEditMode","_fetchSupportDetails","minLength","maxLength","CustomerCarePage","components_CustomerCareForm","ChangePassword","currentPassword","newPassword","SettingsPage","ChangePasswordCard","Pages","Switch","Route","ViewUsers","CreateDoctor","ViewDoctors","CreateHospital","ViewHospitals","CreateSchedule","ViewSchedules","Announcement","CreateFrontdeskUser","ViewFrontdeskUser","ViewBookings","ViewBookingDetail","CustomerCare","Settings","wrappedRoutes","containers_Layout","Router","App_MainWrapper","exact","initialState","reducer","combineReducers","reduxFormReducer","arguments","CHANGE_THEME_TO_DARK","CHANGE_THEME_TO_LIGHT","CHANGE_SIDEBAR_VISIBILITY","CHANGE_MOBILE_SIDEBAR_VISIBILITY","action","createStore","applyMiddleware","thunk","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_dom__WEBPACK_IMPORTED_MODULE_1__","_containers_App_App__WEBPACK_IMPORTED_MODULE_2__","document","getElementById"],"mappings":"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","file":"static/js/main.3f6b2513.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { hot } from 'react-hot-loader';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../scss/app.scss';\r\nimport Router from './Router';\r\nimport store from './store';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', () => {\r\n      this.setState({ loading: false });\r\n      setTimeout(() => this.setState({ loaded: true }), 500);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loaded, loading } = this.state;\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <ScrollToTop>\r\n            <Fragment>\r\n              {!loaded\r\n              && (\r\n              <div className={`load${loading ? '' : ' loaded'}`}>\r\n                <div className=\"load__icon-wrap\">\r\n                  <svg className=\"load__icon\">\r\n                    <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              )\r\n              }\r\n              <div>\r\n                <Router />\r\n              </div>\r\n            </Fragment>\r\n          </ScrollToTop>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ScrollToTop extends PureComponent {\r\n  static propTypes = {\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }).isRequired,\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    if (location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\r\n\r\nclass TopbarSidebarButton extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" className=\"topbar__button topbar__button--desktop\" onClick={changeSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n        <button type=\"button\" className=\"topbar__button topbar__button--mobile\" onClick={changeMobileSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopbarSidebarButton;\r\n","export function post (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}\nexport function put (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}\nexport function get (url) {\n\treturn fetch(url);\n}\nexport function del (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"DELETE\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}","const endpoints = {\n  login: \"/api/v1/auth/admin\",\n  loginStatus: \"/api/v1/auth/admin/loginstatus\",\n  logout: \"/api/v1/admin/logout\",\n  sendOTP: \"/api/v1/sendOTP\",\n\n  doctorList: \"/api/v1/admin/getDoctors/\",\n  createDoctor: \"/api/v1/admin/createDoctor\",\n  updateDoctor: \"/api/v1/admin/updateDoctor\",\n  uploadProfileImage: \"/api/v1/admin/uploadDoctorProfileImage\",\n  deleteProfileImage: \"/api/v1/admin/deleteDoctorProfileImage/\",\n  getSpecializations: \"/api/v1/admin/getSpecializations\",\n\n  createHospital: \"/api/v1/admin/createHospital\",\n  updateHospital: \"/api/v1/admin/updateHospital\",\n\n  createSchedule: \"/api/v1/admin/createSchedule\",\n  getDoctorMasterList: \"/api/v1/admin/getMasterDoctors\",\n  getHospitalMasterList: \"/api/v1/admin/getMasterHospitals\",\n\n  getFrontdeskUsersMasterList: \"/api/v1/admin/getMasterFrontdeskUsers\",\n  createFrontdeskUser: \"/api/v1/admin/createFrontdeskUser/\",\n  getDoctorFrontdeskUser: \"/api/v1/admin/getDoctorFrontdeskUser/\",\n  linkFrontdeskUser: \"/api/v1/admin/linkFrontdeskUser\",\n  getFrontDeskUsers: \"/api/v1/admin/getFrontdeskUsers\",\n\n  getCustomerList: \"/api/v1/admin/getCustomers/\",\n  getScheduleList: \"/api/v1/admin/getSchedules/\",\n  getScheduleDetail: \"/api/v1/admin/getScheduleDetails/\",\n\n  blockUser: \"/api/v1/admin/blockUser\",\n  unblockUser: \"/api/v1/admin/unblockUser\",\n\n  getHospitalList: \"/api/v1/admin/getHospitals/\",\n  getHospitalDetail: \"/api/v1/admin/getHospitalDetails/\",\n\n  getDoctorDetail: \"/api/v1/admin/getDoctorDetails/\",\n\n  getScheduleDoctors: \"/api/v1/admin/getScheduleDoctors/\",\n  getScheduleHospitals: \"/api/v1/admin/getScheduleHospitals\",\n\n  sendAnnouncement: \"/api/v1/messages/push\",\n  getAnnouncements: \"/api/v1/admin/getAnnouncements\",\n\n  getBookings: \"/api/v1/admin/getBookingHistory\",\n  getBookingDetail: \"/api/v1/admin/getBookingHistoryDetail\",\n\n  getSupportDetails: \"/api/v1/user/getSupportDetails\",\n  setSupportDetails: \"/api/v1/admin/setSupportDetails\",\n\n  changePassword: \"/api/v1/admin/changePassword\",\n\n  updateSchedule: `/api/v1/admin/updateSchedule/`,\n  deleteSchedule: `/api/v1/admin/deleteSchedule/`\n};\n\nexport default endpoints;\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Action from '../../../redux/actions/loginActions';\r\n\r\nexport default class TopbarMenuLinks extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n  };\r\n\r\n\t_handleLogout = () => {\r\n\t\treturn Action.logout()\r\n\t\t.then ((response) => response.json())\r\n\t\t.then(data=> console.log('logout success'))\r\n\t}\r\n\r\n  render() {\r\n    const { title, icon, path } = this.props;\r\n\r\n    return (\r\n      <Link className=\"topbar__link\" onClick={() => this._handleLogout()} to={path}>\r\n        <span className={`topbar__link-icon lnr lnr-${icon}`} />\r\n        <p className=\"topbar__link-title\">{title}</p>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import { post, get } from './fetch';\nimport Endpoint from './endpoints';\n\nexport function login(saveData){\n\treturn post(Endpoint.login, saveData);\n}\nexport  function loginSatus () {\n\treturn get(Endpoint.loginStatus);\n};\nexport function logout(){\n\treturn get(Endpoint.logout);\n}","import React, { PureComponent } from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { Collapse } from 'reactstrap';\r\nimport TopbarMenuLink from './TopbarMenuLink';\r\n\r\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\r\n\r\nexport default class TopbarProfile extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\r\n  };\r\n\r\n  render() {\r\n    const { collapse } = this.state;\r\n\r\n    return (\r\n      <div className=\"topbar__profile\">\r\n        <button type=\"button\" className=\"topbar__avatar\" onClick={this.toggle}>\r\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\r\n          <DownIcon className=\"topbar__icon\" />\r\n        </button>\r\n        {collapse && <button type=\"button\" className=\"topbar__back\" onClick={this.toggle} />}\r\n        <Collapse isOpen={collapse} className=\"topbar__menu-wrap\">\r\n          <div className=\"topbar__menu\">\r\n            <TopbarMenuLink title=\"Log Out\" icon=\"exit\" path=\"/\" />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TopbarSidebarButton from './TopbarSidebarButton';\r\nimport TopbarProfile from './TopbarProfile';\r\n\r\nclass Topbar extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div className=\"topbar\">\r\n        <div className=\"topbar__wrapper\">\r\n          <div className=\"topbar__left\">\r\n            <TopbarSidebarButton\r\n              changeMobileSidebarVisibility={changeMobileSidebarVisibility}\r\n              changeSidebarVisibility={changeSidebarVisibility}\r\n            />\r\n            <h4 style={{ alignSelf: 'center' }}>Popular Doctor</h4>\r\n          </div>\r\n          <div className=\"topbar__right\">\r\n            <TopbarProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidebarLink = ({\r\n  title, icon, newLink, route, onClick,\r\n}) => (\r\n  <NavLink\r\n    to={route}\r\n    onClick={onClick}\r\n    activeClassName=\"sidebar__link-active\"\r\n  >\r\n    <li className=\"sidebar__link\">\r\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n      <p className=\"sidebar__link-title\">\r\n        {title}\r\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\r\n      </p>\r\n    </li>\r\n  </NavLink>\r\n);\r\n\r\nSidebarLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  newLink: PropTypes.bool,\r\n  route: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nSidebarLink.defaultProps = {\r\n  icon: '',\r\n  newLink: false,\r\n  route: '/',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SidebarLink;\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class SidebarCategory extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string,\r\n    isNew: PropTypes.bool,\r\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    icon: '',\r\n    isNew: false,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title, icon, isNew, children,\r\n    } = this.props;\r\n    const { collapse } = this.state;\r\n    const categoryClass = classNames({\r\n      'sidebar__category-wrap': true,\r\n      'sidebar__category-wrap--open': collapse,\r\n    });\r\n\r\n    return (\r\n      <div className={categoryClass}>\r\n        <button type=\"button\" className=\"sidebar__link sidebar__category\" onClick={this.toggle}>\r\n          {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n          <p className=\"sidebar__link-title\">{title}\r\n            {isNew && <span className=\"sidebar__category-new\" />}\r\n          </p>\r\n          <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\r\n        </button>\r\n        <Collapse isOpen={collapse} className=\"sidebar__submenu-wrap\">\r\n          <ul className=\"sidebar__submenu\">\r\n            <div>\r\n              {children}\r\n            </div>\r\n          </ul>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const USER_MANAGEMENT = 'Users';\nexport const VIEW_USERS = 'View Users';\nexport const DOCTOR_MANAGEMENT = 'Doctors';\nexport const CREATE_DOCTOR = 'Create Doctor';\nexport const EDIT_DOCTOR = 'Edit Doctor';\nexport const VIEW_DOCTORS = 'View Doctors';\nexport const HOSPITAL_MANAGEMENT = 'Hospitals';\nexport const CREATE_HOSPITAL = 'Create Hospital';\nexport const EDIT_HOSPITAL = 'Edit Hospital';\nexport const VIEW_HOSPITALS = 'View Hospitals';\nexport const SCHEDULE_MANAGEMENT = 'Schedules';\nexport const CREATE_SCHEDULE = 'Create Schedule';\nexport const EDIT_SCHEDULE = 'Edit Schedule';\nexport const VIEW_SCHDULES = 'View Schedules';\nexport const SETTINGS = 'Settings';\nexport const ANNOUNCEMENT = 'Announcement';\nexport const FRONTDESK_USERS = 'Front-Desk Users';\nexport const CREATE_USER = 'Create User';\nexport const LINK_USER = 'Link User';\nexport const BOOKINGS = 'Bookings';\nexport const BOOKING_DETAIL = 'Booking Detail';\nexport const CUSTOMER_CARE = 'Customer Care';\nexport const CHANGE_PASSWORD = 'Change Password';\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarLink from './SidebarLink';\r\nimport SidebarCategory from './SidebarCategory';\r\nimport {\r\n  CREATE_DOCTOR,\r\n  VIEW_DOCTORS,\r\n  DOCTOR_MANAGEMENT,\r\n  HOSPITAL_MANAGEMENT,\r\n  USER_MANAGEMENT,\r\n  VIEW_USERS,\r\n  CREATE_HOSPITAL,\r\n  VIEW_HOSPITALS,\r\n  SCHEDULE_MANAGEMENT,\r\n  CREATE_SCHEDULE,\r\n  VIEW_SCHDULES,\r\n  SETTINGS,\r\n  FRONTDESK_USERS,\r\n  CREATE_USER,\r\n  ANNOUNCEMENT,\r\n  BOOKINGS,\r\n  CUSTOMER_CARE\r\n} from '../../../constants/strings';\r\nimport {\r\n  ROUTE_CREATE_DOCTOR,\r\n  ROUTE_VIEW_DOCTORS,\r\n  ROUTE_CREATE_HOSPITAL,\r\n  ROUTE_VIEW_HOSPITALS,\r\n  ROUTE_CREATE_SCHEDULE,\r\n  ROUTE_VIEW_SCHEDULES,\r\n  ROUTE_VIEW_USERS,\r\n  ROUTE_CREATE_FRONTDESK_USER,\r\n  ROUTE_VIEW_FRONTDESK_USER,\r\n  ROUTE_ANNOUNCEMENT,\r\n  ROUTE_VIEW_BOOKINGS,\r\n  ROUTE_CUSTOMER_CARE,\r\n  ROUTE_SETTINGS\r\n} from '../../../constants/routes';\r\n\r\nclass SidebarContent extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n  };\r\n\r\n  hideSidebar = () => {\r\n    const { onClick } = this.props;\r\n    onClick();\r\n  };\r\n\r\n  render() {\r\n\t\t\r\n\t\treturn (\r\n      <div className='sidebar__content'>\r\n        <ul className='sidebar__block'>\r\n          <SidebarCategory title={USER_MANAGEMENT} icon='users'>\r\n            <SidebarLink\r\n              title={VIEW_USERS}\r\n              route={ROUTE_VIEW_USERS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={DOCTOR_MANAGEMENT} icon='heart-pulse'>\r\n            <SidebarLink\r\n              title={CREATE_DOCTOR}\r\n              route={ROUTE_CREATE_DOCTOR}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_DOCTORS}\r\n              route={ROUTE_VIEW_DOCTORS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={HOSPITAL_MANAGEMENT} icon='apartment'>\r\n            <SidebarLink\r\n              title={CREATE_HOSPITAL}\r\n              route={ROUTE_CREATE_HOSPITAL}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_HOSPITALS}\r\n              route={ROUTE_VIEW_HOSPITALS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={SCHEDULE_MANAGEMENT} icon='clock'>\r\n            <SidebarLink\r\n              title={CREATE_SCHEDULE}\r\n              route={ROUTE_CREATE_SCHEDULE}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_SCHDULES}\r\n              route={ROUTE_VIEW_SCHEDULES}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={FRONTDESK_USERS} icon='screen'>\r\n            <SidebarLink\r\n              title={CREATE_USER}\r\n              route={ROUTE_CREATE_FRONTDESK_USER}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_USERS}\r\n              route={ROUTE_VIEW_FRONTDESK_USER}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarLink\r\n            title={ANNOUNCEMENT}\r\n            route={ROUTE_ANNOUNCEMENT}\r\n            onClick={this.hideSidebar}\r\n            icon='bullhorn'\r\n          />\r\n          <SidebarLink\r\n            title={BOOKINGS}\r\n            route={ROUTE_VIEW_BOOKINGS}\r\n            onClick={this.hideSidebar}\r\n            icon='tag'\r\n          />\r\n          <SidebarLink\r\n            title={CUSTOMER_CARE}\r\n            route={ROUTE_CUSTOMER_CARE}\r\n            onClick={this.hideSidebar}\r\n            icon='phone-handset'\r\n          />\r\n          <div style={{ position: 'absolute', bottom: 8 }}>\r\n            <SidebarLink\r\n              title={SETTINGS}\r\n              route={ROUTE_SETTINGS}\r\n              onClick={this.hideSidebar}\r\n              icon='cog'\r\n            />\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarContent;\r\n","export const ROUTE_VIEW_USERS = '/pages/userManagement/viewUsers';\nexport const ROUTE_CREATE_DOCTOR = '/pages/doctorManagement/createDoctor';\nexport const ROUTE_EDIT_DOCTOR = '/pages/doctorManagement/editDoctor/:doctorId';\nexport const ROUTE_VIEW_DOCTORS = '/pages/doctorManagement/viewDoctors';\nexport const ROUTE_CREATE_HOSPITAL = '/pages/hospitalManagement/createHospital';\nexport const ROUTE_EDIT_HOSPITAL = '/pages/hospitalManagement/editHospital/:hospitalId';\nexport const ROUTE_VIEW_HOSPITALS = '/pages/hospitalManagement/viewHospitals';\nexport const ROUTE_CREATE_SCHEDULE = '/pages/scheduleManagement/createSchedule';\nexport const ROUTE_EDIT_SCHEDULE = '/pages/scheduleManagement/editSchedule';\nexport const ROUTE_VIEW_SCHEDULES = '/pages/scheduleManagement/viewSchedules';\nexport const ROUTE_ANNOUNCEMENT = '/pages/announcement';\nexport const ROUTE_CREATE_FRONTDESK_USER =\n  '/pages/frontdeskUsers/createFrontdeskUser';\nexport const ROUTE_VIEW_FRONTDESK_USER =\n  '/pages/frontdeskUsers/viewFrontdeskUsers';\nexport const ROUTE_VIEW_BOOKINGS = '/pages/bookings/viewBookings';\nexport const ROUTE_VIEW_BOOKING_DETAIL = '/pages/bookings/viewBookingDetail';\nexport const ROUTE_CUSTOMER_CARE = '/pages/customerCare';\nexport const ROUTE_SETTINGS = '/pages/settings';\n","import PropTypes from 'prop-types';\r\n\r\nconst {\r\n  string, shape,\r\n} = PropTypes;\r\n\r\nexport const SidebarProps = shape({\r\n  show: PropTypes.bool,\r\n  collapse: PropTypes.bool,\r\n});\r\n\r\nexport const ThemeProps = shape({\r\n  className: string,\r\n});\r\n","import React from 'react';\r\nimport Scrollbar from 'react-smooth-scrollbar';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarContent from './SidebarContent';\r\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\r\n\r\nconst Sidebar = ({\r\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\r\n}) => {\r\n  const sidebarClass = classNames({\r\n    sidebar: true,\r\n    'sidebar--show': sidebar.show,\r\n    'sidebar--collapse': sidebar.collapse,\r\n  });\r\n\r\n  return (\r\n    <div className={sidebarClass}>\r\n      <button type=\"button\" className=\"sidebar__back\" onClick={changeMobileSidebarVisibility} />\r\n      <Scrollbar className=\"sidebar__scroll scroll\">\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\r\n          <SidebarContent\r\n            onClick={() => {}}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\r\n          <SidebarContent\r\n            onClick={changeMobileSidebarVisibility}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n      </Scrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  sidebar: SidebarProps.isRequired,\r\n  changeToDark: PropTypes.func.isRequired,\r\n  changeToLight: PropTypes.func.isRequired,\r\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Topbar from './topbar/Topbar';\r\nimport Sidebar from './sidebar/Sidebar';\r\n\r\nimport { changeThemeToDark, changeThemeToLight } from '../../redux/actions/themeActions';\r\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\r\nimport { SidebarProps } from '../../shared/prop-types/ReducerProps';\r\n\r\nclass Layout extends Component {\r\n  static propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    sidebar: SidebarProps.isRequired,\r\n  };\r\n\r\n  changeSidebarVisibility = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeSidebarVisibility());\r\n  };\r\n\r\n  changeMobileSidebarVisibility = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeMobileSidebarVisibility());\r\n  };\r\n\r\n  changeToDark = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeThemeToDark());\r\n  };\r\n\r\n  changeToLight = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeThemeToLight());\r\n  };\r\n\r\n  render() {\r\n    const { sidebar } = this.props;\r\n\r\n    const layoutClass = classNames({\r\n      layout: true,\r\n      'layout--collapse': sidebar.collapse,\r\n    });\r\n\r\n    return (\r\n      <div className={layoutClass}>\r\n        <Topbar\r\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n          changeSidebarVisibility={this.changeSidebarVisibility}\r\n        />\r\n        <Sidebar\r\n          sidebar={sidebar}\r\n          changeToDark={this.changeToDark}\r\n          changeToLight={this.changeToLight}\r\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(state => ({\r\n  sidebar: state.sidebar,\r\n}))(Layout));\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeProps } from \"../../shared/prop-types/ReducerProps\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst materialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#fff\",\r\n      main: \"rgb(23, 105, 170)\",\r\n      dark: \"#000\"\r\n    },\r\n    secondary: {\r\n      main: \"#f44336\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nclass MainWrapper extends PureComponent {\r\n  static propTypes = {\r\n    theme: ThemeProps.isRequired,\r\n    children: PropTypes.element.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { theme, children } = this.props;\r\n\r\n    return (\r\n      <div className={theme.className}>\r\n        <MuiThemeProvider theme={materialTheme}>\r\n          <div className=\"wrapper\">{children}</div>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  theme: state.theme\r\n}))(MainWrapper);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport EyeIcon from \"mdi-react/EyeIcon\";\r\nimport KeyVariantIcon from \"mdi-react/KeyVariantIcon\";\r\nimport AccountOutlineIcon from \"mdi-react/AccountOutlineIcon\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Actions from \"../../../redux/actions/loginActions\";\r\n\r\nclass LogInForm extends PureComponent {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPassword: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Actions.loginSatus()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.status === \"SUCCESS\") {\r\n          this.context.router.history.push(\"/pages/userManagement/viewUsers\");\r\n        } else {\r\n          this.context.router.history.push(\"/\");\r\n        }\r\n      });\r\n  }\r\n\r\n  showPassword = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  };\r\n\r\n  _handleSubmit = ({ username, password }) => {\r\n    Actions.login({ username, password })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        alert(data);\r\n        this.context.router.history.push(\"/pages/userManagement/viewUsers\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    const { showPassword } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={handleSubmit(this._handleSubmit)}>\r\n        <div className=\"form__form-group\">\r\n          <span className=\"form__form-group-label\">Username</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\">\r\n              <AccountOutlineIcon />\r\n            </div>\r\n            <Field\r\n              name=\"username\"\r\n              component=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form__form-group\">\r\n          <span className=\"form__form-group-label\">Password</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\">\r\n              <KeyVariantIcon />\r\n            </div>\r\n            <Field\r\n              name=\"password\"\r\n              component=\"input\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              placeholder=\"Password\"\r\n            />\r\n            <button\r\n              className={`form__form-group-button${\r\n                showPassword ? \" active\" : \"\"\r\n              }`}\r\n              onClick={e => this.showPassword(e)}\r\n              type=\"button\"\r\n            >\r\n              <EyeIcon />\r\n            </button>\r\n          </div>\r\n          <div className=\"account__forgot-password\">\r\n            <a href=\"/\">Forgot a password?</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"form__form-group\">\r\n          {/* <div className=\"form__form-group-field\">\r\n            <Field\r\n              name=\"remember_me\"\r\n              component={renderCheckBoxField}\r\n              label=\"Remember me\"\r\n            />\r\n          </div> */}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary account__btn account__btn--small\"\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nLogInForm.contextTypes = {\r\n  router: PropTypes.func.isRequired\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"log_in_form\"\r\n})(LogInForm);\r\n","import React from 'react';\r\nimport LogInForm from './components/LogInForm';\r\n\r\nconst LogIn = () => (\r\n  <div className=\"account\">\r\n    <div className=\"account__wrapper\">\r\n      <div className=\"account__card\">\r\n        {/* <div className=\"account__head\">\r\n          <h3 className=\"account__title\">Welcome to\r\n            <span className=\"account__logo\"> Easy\r\n              <span className=\"account__logo-accent\">DEV</span>\r\n            </span>\r\n          </h3>\r\n        </div> */}\r\n        <LogInForm onSubmit />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LogIn;\r\n\r\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\r\n// four lines in /scss/components/form.scss to add styles\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\n\r\nexport default class MatTableHead extends PureComponent {\r\n  static propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  createSortHandler = property => (event) => {\r\n    const { onRequestSort } = this.props;\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSelectAllClick, order, orderBy, numSelected, rowCount, columns, showCheckbox\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n\t\t\t\t\t{ showCheckbox && <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              className={`material-table__checkbox ${numSelected === rowCount && 'material-table__checkbox--checked'}`}\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>}\r\n          {columns.map(row => (\r\n            <TableCell\r\n              className=\"material-table__cell material-table__cell--sort\"\r\n              key={row.id}\r\n\t\t\t\t\t\t\talign={row.numeric ? 'rigth' : 'left'}\r\n\t\t\t\t\t\t\tpadding={'default'}\r\n              sortDirection={orderBy === row.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === row.id}\r\n                direction={order}\r\n                onClick={this.createSortHandler(row.id)}\r\n                className=\"material-table__sort-label\"\r\n              >\r\n                <div style={{ whiteSpace: 'nowrap'}}>{row.label}</div>\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ), this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n","const underscore = require('underscore');\n\nexport const UNDERSCORE = underscore;","import React, { PureComponent } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MatTableHead from './MatTableHead';\r\nimport { UNDERSCORE } from '../../../../../constants/utils';\r\n\r\nfunction getSort(value, order, orderBy) {\r\n  return order === 'desc'\r\n    ? UNDERSCORE.sortBy(value, orderBy)\r\n    : UNDERSCORE.chain(value)\r\n        .sortBy('user.age')\r\n        .reverse()\r\n        .value();\r\n}\r\n\r\nconst style = {\r\n  tableBody: {\r\n    overflow: 'scroll',\r\n    height: '100%'\r\n  }\r\n};\r\nexport default class MatTable extends PureComponent {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: '_id',\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n    const { orderBy: stateOrderBy, order: stateOrder } = this.state;\r\n\r\n    if (stateOrderBy === property && stateOrder === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = (event, checked) => {\r\n    if (checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleDeleteSelected = () => {\r\n    const { data } = this.state;\r\n    let copyData = [...data];\r\n    const { selected } = this.state;\r\n\r\n    for (let i = 0; i < selected.length; i += 1) {\r\n      copyData = copyData.filter(obj => obj.id !== selected[i]);\r\n    }\r\n\r\n    this.setState({ data: copyData, selected: [] });\r\n  };\r\n\r\n  isSelected = id => {\r\n    const { selected } = this.state;\r\n    return selected.indexOf(id) !== -1;\r\n  };\r\n\r\n  render() {\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const { columns, showCheckbox, data } = this.props;\r\n    let _data = [];\r\n    if (data && data.length !== 0) {\r\n      _data = getSort(data, order, orderBy).slice(\r\n        page * rowsPerPage,\r\n        page * rowsPerPage + rowsPerPage\r\n      );\r\n    }\r\n\r\n    return (\r\n        <div className='material-table__wrap' >\r\n          <Table className='material-table'>\r\n            <MatTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              columns={this.props.columns}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody classes={style.tableBody}>\r\n              {_data.map(d => {\r\n                const isSelected = this.isSelected(d._id);\r\n                return (\r\n                  <TableRow\r\n                    className='material-table__row'\r\n                    role='checkbox'\r\n                    onClick={event => this.handleClick(event, d._id)}\r\n                    aria-checked={isSelected}\r\n                    tabIndex={-1}\r\n                    key={d._id}\r\n                    selected={isSelected}\r\n                  >\r\n                    {showCheckbox && (\r\n                      <TableCell\r\n                        className='material-table__cell'\r\n                        padding='checkbox'\r\n                      >\r\n                        <Checkbox\r\n                          checked={isSelected}\r\n                          className='material-table__checkbox'\r\n                        />\r\n                      </TableCell>\r\n                    )}\r\n                    {columns.map(key => {\r\n                      return (\r\n                        <TableCell component='th' scope='row' padding='default'>\r\n                          {key.render ? key.render(d) : d[key.id]}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n\t\t\t\t\t\t<TableFooter>\r\n            <TableRow>\r\n\t\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\tclassName='material-table__pagination'\r\n\t\t\t\t\t\t\t\tcount={data.length}\r\n\t\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\tbackIconButtonProps={{ 'aria-label': 'Previous Page' }}\r\n\t\t\t\t\t\t\t\tnextIconButtonProps={{ 'aria-label': 'Next Page' }}\r\n\t\t\t\t\t\t\t\tonChangePage={this.handleChangePage}\r\n\t\t\t\t\t\t\t\tonChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\t\trowsPerPageOptions={[100, 75, 50, 25, 5]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableFooter>\r\n          </Table>\r\n        </div>\r\n    );\t\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MatTable from './components/MatTable';\r\n\r\nclass  MaterialTable extends React.Component {\r\n\t\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t\t\t\t<MatTable {...this.props}/>\r\n\t\t);\r\n\t}\r\n\r\n};\r\n\r\nexport default MaterialTable;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as Action from '../../redux/actions/userActions';\n\nclass UserBlockToggle extends React.Component{\n\n\t_handleToggle = (status) => {\n\t\tconst { id } = this.props;\n\t\tif(status === 'ACTIVE') {\n\t\t\treturn this.props.blockUser({userId: id})\n\t\t\t.then(() => {\n\t\t\t\tthis.props.loadData();\n\t\t\t});\n\t\t}else{\n\t\t\treturn this.props.unblockUser({userId: id})\n\t\t\t.then(() => {\n\t\t\t\tthis.props.loadData();\n\t\t\t});\n\t\t}\n\t}\n\n\trender(){\n\t\tconst { status } = this.props;\n\t\tconst toolText = status === 'ACTIVE' ? 'block' : 'unblock';\n\t\tconst color = status === 'ACTIVE' ? true: false;\n\t\treturn (\n\t\t\t<Tooltip title={toolText}>\n\t\t\t\t<Switch\n\t\t\t\t\tchecked={color}\n\t\t\t\t\tonChange={()=> this._handleToggle(status)}\n\t\t\t\t\tvalue=\"checkedB\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\nfunction mapStateToProps(state){\n\treturn {\n\t};\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    blockUser: (userId) => {\n      return Action.blockUser(userId);\n\t\t},\n\t\tunblockUser: (userId) => {\n      return Action.unblockUser(userId);\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBlockToggle);\n","import { post, get } from './fetch';\nimport Endpoint from './endpoints';\n\nexport  function getCustomerList (pageNo, size) {\n\tconst endpoint = `${Endpoint.getCustomerList}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_CUSTOMERLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\n\n\nexport function blockUser(userId){\n\treturn post(Endpoint.blockUser, userId);\n}\nexport function unblockUser(userId){\n\treturn post(Endpoint.unblockUser, userId);\n}\n","import React from \"react\";\r\nimport { Card, CardBody, Col } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/userActions\";\r\nimport UserBlockToggle from \"../../../../components/user/userBlockToggle\";\r\n\r\nclass ViewUsersContainer extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this._onLoad();\r\n  }\r\n\r\n\t_onLoad = () => {\r\n\t\tthis.props.getUserList();\r\n\t} \r\n\r\n\t_handleNotification = (value) =>{\r\n\t\tthis.setState({...value});\r\n\t}\r\n\r\n\t_renderToggle = (row) => {\r\n\t\treturn (\r\n\t\t\t<UserBlockToggle\r\n\t\t\t\tdata={row}\r\n\t\t\t\tstatus={row.status}\r\n\t\t\t\tid={row._id}\r\n\t\t\t\tloadData={this._onLoad}\r\n\t\t\t\tafterToggle={(value) => this._handleNotification(value)}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n  render() {\r\n    const { userDataList } = this.props;\r\n    const columns = [\r\n      { id: 'fullName', numeric: false, disablePadding: true, label: 'Name' },\r\n      { id: 'username', numeric: false, disablePadding: true, label: 'Contact' },\r\n      { id: 'gender', numeric: false, disablePadding: true, label: 'Gender' },\r\n      { id: 'action', label: 'Block/Unblock', render : (text) => this._renderToggle(text)},\r\n\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={userDataList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state){\r\n\tconst userState = state.user ? state.user.customerList : [];\r\n\treturn {\r\n\t\tuserDataList: !UNDERSCORE.isEmpty(userState) ? userState.users : [],\r\n\t\ttotalCount: !UNDERSCORE.isEmpty(userState) ? userState.totalRecords : 0,\r\n\t};\r\n}\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    getUserList: () => {\r\n      dispatch(Action.getCustomerList());\r\n    }\r\n  }\r\n}\r\n\r\n\r\nViewUsersContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewUsersContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewUsersContainer from './container/ViewUsersContainer';\r\nimport { VIEW_USERS } from '../../../constants/strings';\r\n\r\nconst ViewUsersPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_USERS}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewUsersContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewUsersPage;\r\n","import { post, get, put } from './fetch';\nimport Endpoint from './endpoints';\n\nexport  function getDoctorList () {\n\tconst doctor =  `${Endpoint.doctorList}`;\n\treturn function (dispatch){\n\t\treturn get(doctor)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_DOCTORLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\nexport  function getSpecialization() {\n\treturn function (dispatch){\n\t\treturn get(Endpoint.getSpecializations)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_SPECIALIZATIONLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\nexport function getDoctorDetail(pdNumber){\n\tconst endpoint = `${Endpoint.getDoctorDetail}${pdNumber}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_DOCTORDETAIL',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n}\n\nexport function clearDoctorDetail(){\n\treturn {\n\t\ttype: 'RESPONSE_DOCTORDETAIL',\n\t\tdata:[]\n\t}\n}\nexport function save(saveData){\n\treturn post(Endpoint.createDoctor, saveData);\n}\nexport function update(saveData, id){\n\treturn put(`${Endpoint.updateDoctor}/${id}`, saveData);\n}","const validate = (values) => {\r\n  const errors = {};\r\n  if (!values.username) {\r\n    errors.username = 'Username field shouldn’t be empty';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Email field shouldn’t be empty';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Password field shouldn’t be empty';\r\n  } else if (values.password !== 'dragon') {\r\n    errors.password = 'The password is incorrect';\r\n  }\r\n  if (!values.select) {\r\n    errors.select = 'Please select the option';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","export const emptyField = 'Please select the above value';\n\nexport const addDoctor = {\n\tfullName: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tdegree: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tmobile: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tlatitude: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tlongitude: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tyearsOfExperience: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 2,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tprofileContent: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 300,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t}\n}\n","import React, { PureComponent } from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        value: PropTypes.string,\r\n        label: PropTypes.string\r\n      })\r\n    ),\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        value: PropTypes.string,\r\n        label: PropTypes.string\r\n      })\r\n    ]).isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: \"\",\r\n    options: []\r\n  };\r\n\r\n  handleChange = selectedOption => {\r\n\t\tconst { onChange } = this.props;\r\n    onChange(selectedOption);\r\n  };\r\n\r\n\tsetIdWithValue = (list) =>{\r\n\t\tlist.forEach(data => {data.label = `${data.label} (${data.value}) `})\r\n\t\treturn list;\r\n\t}\r\n\r\n  render() {\r\n\t\tconst { value, name, placeholder, options, renderId } = this.props;\r\n\t\tlet optionList = [];\r\n\t\tif(renderId){\r\n\t\t\toptionList = this.setIdWithValue(options);\r\n\t\t}else{\r\n\t\t\toptionList = options; \r\n\t\t}\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={value}\r\n        onChange={e => this.handleChange(e)}\r\n        options={optionList}\r\n        clearable={false}\r\n        className=\"react-select\"\r\n        placeholder={placeholder}\r\n        classNamePrefix=\"react-select\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderSelectField = props => {\r\n  const { input, meta, options, placeholder, width, renderId, filter, onChange } = props;\r\n  if (filter) {\r\n    return (\r\n      <div style={{ width: width }}>\r\n        <SelectField\r\n          {...input}\r\n          options={options}\r\n          placeholder={placeholder}\r\n\t\t\t\t\trenderId={renderId}\r\n\t\t\t\t\tonChange={onChange}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form__form-group-input-wrap\">\r\n        <div style={{ width: width }}>\r\n          <SelectField\r\n            {...input}\r\n            options={options}\r\n            placeholder={placeholder}\r\n            renderId={renderId}\r\n          />\r\n        </div>\r\n        {meta.touched && meta.error && (\r\n          <span style={{ width: width }} className=\"form__form-group-error\">\r\n            {meta.error}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nRenderSelectField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  }),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string,\r\n      label: PropTypes.string\r\n    })\r\n  ),\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nRenderSelectField.defaultProps = {\r\n  meta: null,\r\n  options: [],\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default RenderSelectField;\r\n","import React, { PureComponent } from 'react';\r\nimport 'flatpickr/dist/themes/material_green.css'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DatePickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n\t\tconst { value, onChange } = this.props;\r\n    return (\r\n      <Flatpickr\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder=\"Date of Birth\"\r\n\t\t\t\tdateFormat= \"Y-m-d\"\r\n        onChange={date => {onChange(date) }} />\r\n    )\r\n  }\r\n}\r\n\r\nconst renderDatePickerField = (props) => {\r\n\tconst {  input, meta, width } = props;\r\n\treturn (<div>\r\n     \t<DatePickerField {...input}  width={width}/>\r\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\r\n    </div>\r\n  );\r\n   \r\n};\r\n\r\nrenderDatePickerField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default renderDatePickerField;\r\n","import React, { PureComponent } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DropZoneField extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    customHeight: PropTypes.bool,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string,\r\n      })),\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    customHeight: false,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  onDrop(file) {\r\n    const { onChange } = this.props;\r\n    onChange(file.map(fl => Object.assign(fl, {\r\n      preview: URL.createObjectURL(fl),\r\n    })));\r\n  }\r\n\r\n  removeFile(index, e) {\r\n    const { onChange, value } = this.props;\r\n    e.preventDefault();\r\n    onChange(value.filter((val, i) => i !== index));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value, customHeight, name,\r\n    } = this.props;\r\n\r\n    const files = value;\r\n\r\n    return (\r\n      <div className={`dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`}>\r\n        <Dropzone\r\n          accept=\"image/jpeg, image/png\"\r\n          name={name}\r\n          multiple={false}\r\n          onDrop={(fileToUpload) => {\r\n            this.onDrop(fileToUpload);\r\n          }}\r\n        >\r\n          {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className=\"dropzone__input\">\r\n              {(!files || files.length === 0)\r\n              && (\r\n              <div className=\"dropzone__drop-here\">\r\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\r\n              </div>\r\n              )}\r\n              <input {...getInputProps()} />\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        {files && Array.isArray(files) && files.length > 0\r\n        && (\r\n        <aside className=\"dropzone__img\">\r\n          <img src={files[0].preview} alt=\"drop-img\" />\r\n          <p className=\"dropzone__img-name\">{files[0].name}</p>\r\n          <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => this.removeFile(0, e)}>\r\n            Remove\r\n          </button>\r\n        </aside>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderDropZoneField = (props) => {\r\n  const { input, customHeight } = props;\r\n  return (\r\n    <DropZoneField\r\n      {...input}\r\n      customHeight={customHeight}\r\n    />\r\n  );\r\n};\r\n\r\nrenderDropZoneField.propTypes = {\r\n  input: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n  }).isRequired,\r\n  customHeight: PropTypes.bool,\r\n};\r\n\r\nrenderDropZoneField.defaultProps = {\r\n  customHeight: false,\r\n};\r\n\r\nexport default renderDropZoneField;\r\n","import React, { PureComponent } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport ReactDOM from 'react-dom';\nimport { Card, CardBody } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport renderDropZoneField from '../../../../components/shared/components/form/DropZone';\nimport EndPoints from '../../../../redux/actions/endpoints';\nimport { UNDERSCORE } from '../../../../constants/utils';\n\nclass ProfileImageUploadForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctorPdNumber: null\n    };\n    this.form = null;\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  upload(doctorPdNumber) {\n    console.log('upload called');\n    this.setState({ doctorPdNumber }, () =>\n      ReactDOM.findDOMNode(this.form).dispatchEvent(new Event('submit'))\n    );\n  }\n\n  _handleSubmit = ({ profileImage }) => {\n\t\tif(UNDERSCORE.isEmpty(profileImage)){\n\t\t\treturn;\n\t\t}\n    const formData = new FormData();\n    formData.append(\n      'profileImage',\n      profileImage[0],\n      this.state.doctorPdNumber + '.png'\n    );\n\n    fetch(EndPoints.uploadProfileImage + '/' + this.state.doctorPdNumber, {\n      method: 'POST',\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.props.reset();\n        this.props.onUploadComplete(res.status);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <Card style={{ height: 150 }}>\n        <CardBody>\n          <div className='card__title'>\n            <h5 className='subhead'>Profile Image</h5>\n          </div>\n          <form\n            ref={element => (this.form = element)}\n            className='form'\n            onSubmit={handleSubmit(this._handleSubmit)}\n          >\n            <Field name='profileImage' component={renderDropZoneField} />\n          </form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'doctorPofileImageUpload'\n})(withTranslation('common')(ProfileImageUploadForm));\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  ButtonToolbar,\r\n  Row,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport { withRouter } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport * as Action from \"../../../../redux/actions/doctorActions\";\r\nimport { CREATE_DOCTOR, EDIT_DOCTOR } from \"../../../../constants/strings\";\r\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\r\nimport { addDoctor, emptyField } from \"../constants/doctorForm\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport renderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport renderDatePicker from \"../../../../components/shared/components/form/DatePicker\";\r\nimport ProfileImageUploadForm from \"./ProfileImageUploadForm\";\r\nimport Endpoints from \"../../../../redux/actions/endpoints\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  placeholder,\r\n  type,\r\n  disabled,\r\n  meta: { touched, error }\r\n}) => (\r\n  <div className=\"form__form-group-input-wrap \">\r\n    <input\r\n      {...input}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      disabled={disabled}\r\n    />\r\n    {touched && error && (\r\n      <span className=\"form__form-group-error\">{error}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nrenderField.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  })\r\n};\r\n\r\nrenderField.defaultProps = {\r\n  placeholder: \"\",\r\n  meta: null,\r\n  type: \"text\"\r\n};\r\n\r\nclass CreateDoctorCard extends PureComponent {\r\n  static propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    pristine: PropTypes.bool.isRequired,\r\n    submitting: PropTypes.bool.isRequired\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPassword: false,\r\n      displayToast: false,\r\n      dateOfBirth: \"\",\r\n      toastMessage: \"\",\r\n      errorText: {},\r\n      doProfileImageUpload: false,\r\n      doctorPdNumber: null,\r\n      disableButtonActions: false,\r\n      showProfileImageUploader: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    if (pathName.includes(\"edit\")) {\r\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n      this.props.getDoctorDetail(pdNumber);\r\n    } else {\r\n      this.props.clearDoctorDetail();\r\n    }\r\n    this.props.getSpecialization();\r\n    if (UNDERSCORE.isEmpty(this.props.initialValues.profileImage)) {\r\n      this.setState({ showProfileImageUploader: true });\r\n    }\r\n  }\r\n  _handleChange = (key, event) => {\r\n    const { saveData } = this.state;\r\n    saveData[key] = event.target.value;\r\n    this.setState({ saveData });\r\n  };\r\n\r\n  _handleSubmit = ({\r\n    fullName = \"\",\r\n    mobile = \"\",\r\n    yearsOfExperience = 0,\r\n    degree = \"\",\r\n    dateOfBirth = \"\",\r\n    specialization = \"\",\r\n    gender = \"\",\r\n    profileContent = \"\"\r\n  }) => {\r\n    const editValue = {\r\n      fullName,\r\n      mobile,\r\n      yearsOfExperience,\r\n      degree,\r\n      dateOfBirth: !UNDERSCORE.isEmpty(dateOfBirth) ? dateOfBirth : \"\",\r\n      specialization: specialization.label,\r\n      gender: gender.label,\r\n      profileContent\r\n    };\r\n    const errorText = {};\r\n    editValue.password = editValue.mobile;\r\n    editValue.profileImage = this.props.initialValues.profileImage;\r\n    Object.keys(editValue).forEach(key =>\r\n      this.validateTextData(editValue[key], key, editValue, errorText)\r\n    );\r\n    this.validateOtherFields(editValue, errorText);\r\n    this._mobileNumberValidate(editValue.mobile, errorText);\r\n    this.setState({ errorText });\r\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\r\n    if (error === 0) {\r\n      this.setState({ active: true });\r\n      if (this.props.isUpdate) {\r\n        const id = this.props.initialValues.doctorId;\r\n        const pdNumber = this.props.initialValues.doctorPdNumber;\r\n        Action.update(editValue, id)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.status) {\r\n              this.setState({\r\n                toastMessage: res.message\r\n                // displayToast: true\r\n                // disableButtonActions: true\r\n              });\r\n              this.props.getDoctorDetail(pdNumber);\r\n            } else {\r\n              //else display a toast with the returned message\r\n              this.setState({\r\n                displayToast: true,\r\n                toastMessage: res.message\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        Action.save(editValue)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.status) {\r\n              //if data saved successfully, upload the profile image with the returned doctorPdNumber\r\n              this.setState(\r\n                { toastMessage: res.message, disableButtonActions: true },\r\n                () => this.profileImageUploader.upload(res.doctorPdNumber)\r\n              );\r\n            } else {\r\n              //else display a toast with the returned message\r\n              this.setState({\r\n                displayToast: true,\r\n                toastMessage: res.message\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      throw new SubmissionError(errorText);\r\n    }\r\n  };\r\n\r\n  validateTextData = (value, key, editValue, errorText) => {\r\n    const type = addDoctor[key] ? addDoctor[key].type : \"other\";\r\n    switch (type) {\r\n      case \"number\":\r\n        if (UNDERSCORE.isEmpty(value.toString())) {\r\n          editValue[key] = value;\r\n          errorText[key] = addDoctor[key].emptyField;\r\n          return;\r\n        }\r\n        errorText[key] = null;\r\n        editValue[key] = value;\r\n        break;\r\n      case \"text\":\r\n        if (UNDERSCORE.isEmpty(value)) {\r\n          editValue[key] = value;\r\n          errorText[key] = addDoctor[key].emptyField;\r\n          return;\r\n        }\r\n        if (value.length <= addDoctor[key].length) {\r\n          errorText[key] = null;\r\n          editValue[key] = value;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  validateOtherFields = (editValue, errorText) => {\r\n    if (!editValue[\"dateOfBirth\"] && UNDERSCORE.isEmpty(editValue[\"dateOfBirth\"])) {\r\n      errorText[\"dateOfBirth\"] = emptyField;\r\n    }\r\n    if (UNDERSCORE.isEmpty(editValue[\"gender\"])) {\r\n      errorText[\"gender\"] = emptyField;\r\n    }\r\n    if (UNDERSCORE.isEmpty(editValue[\"specialization\"])) {\r\n      errorText[\"specialization\"] = emptyField;\r\n    }\r\n  };\r\n\r\n  _mobileNumberValidate = (value, errorText) => {\r\n    if (value && value.length !== 0 && value.length !== 10) {\r\n      errorText[\"mobile\"] = addDoctor[\"mobile\"].errorText;\r\n    }\r\n  };\r\n\r\n  _parseList = dataList => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data.name,\r\n          label: data.name\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  handleDOBChange = date => {\r\n    this.setState({ dateOfBirth: date });\r\n  };\r\n  _handleClose = () => {\r\n    this.setState({ displayToast: false });\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit, isUpdate } = this.props;\r\n    const specializations = this._parseList(this.props.specializations);\r\n    const title = isUpdate ? EDIT_DOCTOR : CREATE_DOCTOR;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={6} sm={12}>\r\n                <form\r\n                  className=\"form form--horizontal\"\r\n                  onSubmit={handleSubmit(this._handleSubmit)}\r\n                >\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Full Name</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"fullName\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        placeholder=\"Full Name\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Mobile</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"mobile\"\r\n                        component={renderField}\r\n                        type=\"number\"\r\n                        placeholder=\"Mobile\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Date of Birth\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"dateOfBirth\"\r\n                        component={renderDatePicker}\r\n                        placeholder=\"Date of Birth\"\r\n                        onChange={this.handleDOBChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Gender</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"gender\"\r\n                        component={renderSelectField}\r\n                        type=\"text\"\r\n                        placeholder=\"Gender\"\r\n                        width={150}\r\n                        options={[\r\n                          { value: \"male\", label: \"MALE\" },\r\n                          { value: \"female\", label: \"FEMALE\" }\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Specialization\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"specialization\"\r\n                        component={renderSelectField}\r\n                        type=\"text\"\r\n                        placeholder=\"Specialization\"\r\n                        width={200}\r\n                        options={specializations}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Degree</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"degree\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        placeholder=\"Degree\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Years Of Experience\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"yearsOfExperience\"\r\n                        component={renderField}\r\n                        type=\"number\"\r\n                        placeholder=\"Years Of Experience\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Description</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"profileContent\"\r\n                        component=\"textarea\"\r\n                        placeholder=\"Description\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <ButtonToolbar className=\"form__button-toolbar\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={\r\n                          pristine ||\r\n                          submitting ||\r\n                          this.state.disableButtonActions\r\n                        }\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={reset}\r\n                        disabled={\r\n                          pristine ||\r\n                          submitting ||\r\n                          this.state.disableButtonActions\r\n                        }\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </ButtonToolbar>\r\n                  </div>\r\n                </form>\r\n              </Col>\r\n              <Col md={6} sm={12}>\r\n                <Row\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                    paddingLeft: \"5%\"\r\n                  }}\r\n                >\r\n                  {!UNDERSCORE.isEmpty(this.props.initialValues.profileImage) &&\r\n                    !this.state.showProfileImageUploader && (\r\n                      <div>\r\n                        <Row>\r\n                          <img\r\n                            src={this.props.initialValues.profileImage}\r\n                            style={{\r\n                              height: \"40%\",\r\n                              width: \"40%\",\r\n                              resizeMode: \"contain\"\r\n                            }}\r\n                          />\r\n                        </Row>\r\n                        <Row>\r\n                          <Button\r\n                            onClick={() => {\r\n                              fetch(\r\n                                Endpoints.deleteProfileImage +\r\n                                  this.props.initialValues.doctorPdNumber,\r\n                                {\r\n                                  method: \"DELETE\"\r\n                                }\r\n                              )\r\n                                .then(res => res.json())\r\n                                .then(res => {\r\n                                  alert(res);\r\n                                });\r\n                            }}\r\n                            color=\"danger\"\r\n                            type=\"button\"\r\n                            // disabled={pristine || submitting}\r\n                            style={{ marginTop: \"2%\" }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Row>\r\n                      </div>\r\n                    )}\r\n                </Row>\r\n                {this.state.showProfileImageUploader && (\r\n                  <div>\r\n                    <Row>\r\n                      <Button\r\n                        onClick={() =>\r\n                          this.profileImageUploader.upload(\r\n                            this.props.initialValues.doctorPdNumber\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        // disabled={pristine || submitting}\r\n                      >\r\n                        Change\r\n                      </Button>\r\n                    </Row>\r\n                    <Row>\r\n                      <ProfileImageUploadForm\r\n                        onRef={ref => (this.profileImageUploader = ref)}\r\n                        onUploadComplete={status =>\r\n                          this.setState(\r\n                            {\r\n                              displayToast: true,\r\n                              toastMessage:\r\n                                \"Profile image updated successfully.\",\r\n                              disableButtonActions: false\r\n                            },\r\n                            () => this.props.reset()\r\n                          )\r\n                        }\r\n                      />\r\n                    </Row>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            onClose={this._handleClose}\r\n            message={<span id=\"message-id\">{this.state.toastMessage}</span>}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getSpecialization: () => {\r\n      dispatch(Action.getSpecialization());\r\n    },\r\n    getDoctorDetail: pdNumber => {\r\n      dispatch(Action.getDoctorDetail(pdNumber));\r\n    },\r\n    clearDoctorDetail: () => {\r\n      dispatch(Action.clearDoctorDetail());\r\n    }\r\n  };\r\n}\r\nfunction mapStateToProps(state) {\r\n  const doctorState = state.doctor;\r\n  const defaultData =\r\n    !UNDERSCORE.isEmpty(doctorState) &&\r\n    !UNDERSCORE.isEmpty(doctorState.doctorDetail)\r\n      ? doctorState.doctorDetail\r\n      : {};\r\n  return {\r\n    specializations: !UNDERSCORE.isEmpty(doctorState)\r\n      ? doctorState.specialization\r\n      : [],\r\n    initialValues: {\r\n      ...defaultData\r\n    },\r\n    isUpdate: !UNDERSCORE.isEmpty(defaultData)\r\n  };\r\n}\r\nCreateDoctorCard.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nCreateDoctorCard = reduxForm({\r\n  form: \"doctor\",\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: true,\r\n  validate\r\n})(withTranslation(\"common\")(CreateDoctorCard));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateDoctorCard));\r\n","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport CreateDoctorCard from './components/CreateDoctorCard';\r\n\r\nconst CreateDoctorPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <CreateDoctorCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateDoctorPage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateDoctorCard from './components/CreateDoctorCard';\n\nconst EditDoctor = () => (\n  <Container className=\"dashboard\">\n    <Row>\n      <CreateDoctorCard />\n    </Row>\n  </Container>\n);\n\nexport default EditDoctor;\n","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/doctorActions\";\r\nimport UserBlockToggle from \"../../../../components/user/userBlockToggle\";\r\n\r\nclass ViewDoctorsContainer extends React.Component {\r\n  componentWillMount() {\r\n    this._onLoad();\r\n    this.props.getSpecialization();\r\n  }\r\n\r\n  _onLoad = () => {\r\n    this.props.getDoctorList();\r\n  };\r\n\r\n  renderDoctorNameCell = text => (\r\n    <div style={{ display: \"flex\", width: 200 }}>\r\n      <strong>{text.doctorDetails.fullName}</strong>\r\n    </div>\r\n  );\r\n\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/doctorManagement/editDoctor/${data.doctorPdNumber}`\r\n    );\r\n  };\r\n\r\n  _renderToggle = row => {\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button\r\n          className=\"icon\"\r\n          id=\"TooltipBottom\"\r\n          color=\"primary\"\r\n          onClick={() => this._handleEditHospital(row)}\r\n        >\r\n          <span class=\"lnr lnr-pencil\" />\r\n        </Button>\r\n        <UserBlockToggle\r\n          data={row}\r\n          status={row.doctorDetails.status}\r\n          id={row.userId}\r\n          loadData={this._onLoad}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { doctorList } = this.props;\r\n    const columns = [\r\n      {\r\n        id: \"name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Name\",\r\n        render: text => this.renderDoctorNameCell(text)\r\n      },\r\n      {\r\n        id: \"doctorPdNumber\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Doctor Id\",\r\n        render: text => text.doctorPdNumber\r\n      },\r\n      {\r\n        id: \"specialization\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Specialization\"\r\n      },\r\n      {\r\n        id: \"phone\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Contact\",\r\n        render: text => text.doctorDetails.username\r\n      },\r\n      {\r\n        id: \"degree\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Education\",\r\n        render: text => text.degree\r\n      },\r\n      {\r\n        id: \"action\",\r\n        label: \"Operation\",\r\n        render: text => this._renderToggle(text)\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={doctorList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const doctorState = state.doctor;\r\n  return {\r\n    specializations: !UNDERSCORE.isEmpty(doctorState)\r\n      ? doctorState.specialization\r\n      : [],\r\n    doctorList:\r\n      !UNDERSCORE.isEmpty(doctorState) &&\r\n      !UNDERSCORE.isEmpty(doctorState.doctorList)\r\n        ? doctorState.doctorList.doctors\r\n        : [],\r\n    totalCount:\r\n      !UNDERSCORE.isEmpty(doctorState) &&\r\n      !UNDERSCORE.isEmpty(doctorState.doctorList)\r\n        ? doctorState.doctorList.totalRecords\r\n        : 0\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getSpecialization: () => {\r\n      dispatch(Action.getSpecialization());\r\n    },\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    }\r\n  };\r\n}\r\n\r\nViewDoctorsContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewDoctorsContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewDoctorsContainer from './container/ViewDoctorsContainer';\r\n\r\nconst ExamplePage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Doctor Management</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewDoctorsContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ExamplePage;\r\n","export const emptyField = 'Please select the above value';\n\nexport const addHospital = {\n\tname: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tlocation: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tstreetName: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tbuilding: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\taddress: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 240,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tlandmark: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tpincode: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 6,\n\t\terrorText: 'Enter valid mobile number it should be 6 digit'\n\t},\n}\n","import React, { PureComponent } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Button,\n  ButtonToolbar,\n  Container\n} from \"reactstrap\";\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SaveIcon from 'mdi-react/ContentSaveIcon'\nimport { save, update } from \"../../../../redux/actions/hospitalActions\";\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\nimport { addHospital } from \"../constants/hospitalForm\";\nimport { UNDERSCORE } from \"../../../../constants/utils\";\nimport * as Action from \"../../../../redux/actions/hospitalActions\";\n\nconst renderField = ({\n  input,\n  placeholder,\n  type,\n  meta: { touched, error }\n}) => (\n  <div className=\"form__form-group-input-wrap form__form-group-input-wrap--error-above\">\n    <input {...input} placeholder={placeholder} type={type} />\n    {touched && error && (\n      <span className=\"form__form-group-error\">{error}</span>\n    )}\n  </div>\n);\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\n\nrenderField.defaultProps = {\n  placeholder: \"\",\n  meta: null,\n  type: \"text\"\n};\n\nclass CreateHospitalCard extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      showPassword: false,\n      saveData: {\n        name: \"\",\n        address: \"\",\n        location: \"\",\n        pincode: \"\",\n        landmark: \"\"\n      },\n      hospitalId: \"\",\n      displayToast: false,\n      toastMessage: \"\",\n      errorText: {}\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const pathName = location.pathname;\n    if (pathName.includes(\"edit\")) {\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\n      this.props.getHospitalDetail(pdNumber);\n    } else {\n      this.props.clearHospitalDetail();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, initialValues } = prevProps;\n    const pathName = location.pathname;\n    if (!pathName.includes(\"edit\") && !UNDERSCORE.isEmpty(initialValues)) {\n      this.props.clearHospitalDetail();\n    }\n  }\n  _handleChange = (key, event) => {\n    const { saveData } = this.state;\n    saveData[key] = event.target.value;\n    this.setState({ saveData });\n  };\n\n  _handleSubmit = ({\n    name = \"\",\n    streetName = \"\",\n    building = \"\",\n    location = \"\",\n    landmark = \"\",\n    pincode = 0,\n    latitude = 0,\n    longitude = 0\n  }) => {\n    const saveData = {\n      name,\n      streetName,\n      building,\n      location,\n      landmark,\n      pincode,\n      latitude,\n      longitude\n    };\n    const errorText = {};\n    Object.keys(saveData).forEach(key =>\n      this.validateTextData(saveData[key], key, saveData, errorText)\n    );\n    this._validatePincode(saveData.pincode, errorText);\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\n    if (error !== 0) {\n      throw new SubmissionError(errorText);\n    }\n    const data = {\n      name: saveData.name,\n      address: JSON.stringify({\n        streetName: saveData.streetName,\n        building: saveData.building\n      }),\n      location: saveData.location,\n      landmark: saveData.landmark,\n      pincode: saveData.pincode,\n      latLng: [latitude, longitude]\n    };\n    if (this.props.isUpdate) {\n      const id = this.props.initialValues._id;\n      const pdNumber = this.props.initialValues.hospitalPdNumber;\n      update(data, id)\n        .then(res => res.json())\n        .then(res => {\n          this.setState(\n            { displayToast: true, toastMessage: res.message },\n            () => {\n              if (res.status) {\n                this.props.getHospitalDetail(pdNumber);\n              }\n            }\n          );\n        });\n    } else {\n      save(data)\n        .then(res => res.json())\n        .then(res => {\n          this.setState(\n            { displayToast: true, toastMessage: res.message },\n            () => {\n              if (res.status) {\n                this.props.reset();\n              }\n            }\n          );\n        });\n    }\n  };\n\n  validateTextData = (value, key, editValue, errorText) => {\n    const type = addHospital[key] ? addHospital[key].type : \"other\";\n    if (type !== \"other\") {\n      if (UNDERSCORE.isEmpty(value)) {\n        editValue[key] = value;\n        errorText[key] = addHospital[key].emptyField;\n        return;\n      }\n      if (value.length <= addHospital[key].length) {\n        errorText[key] = null;\n        editValue[key] = value;\n      }\n    }\n  };\n  _validatePincode = (value, errorText) => {\n    if (\n      value &&\n      value.length !== 0 &&\n      value.length !== addHospital[\"pincode\"].length\n    ) {\n      errorText[\"pincode\"] = addHospital[\"pincode\"].errorText;\n    }\n  };\n  _handleClose = () => {\n    this.setState({ displayToast: false });\n  };\n\n  render() {\n    const { reset, handleSubmit } = this.props;\n\n    return (\n      <Container>\n        <Card>\n          <CardBody>\n            <form\n              className=\"form form--horizontal\"\n              onSubmit={handleSubmit(this._handleSubmit)}\n            >\n              <Col>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Hospital Name</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"name\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Hospital Name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Street name</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"streetName\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Street name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Building</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"building\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Building\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Location</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"location\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Location\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Latitude</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"latitude\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"latitude\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Longitude</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"longitude\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"Longitude\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Pincode</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"pincode\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"Pincode\"\n                      onChange={value => this._handleChange(\"pincode\", value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Landmark</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"landmark\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Landmark\"\n                    />\n                  </div>\n                </div>\n              </Col>\n              <Col >\n                <ButtonToolbar className=\"form__button-toolbar\">\n                  <Button className=\"icon\" size=\"sm\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t<SaveIcon/>\n                    Save\n                  </Button>\n                  <Button type=\"button\" size=\"sm\" onClick={reset}>\n                    Cancel\n                  </Button>\n                </ButtonToolbar>\n              </Col>\n            </form>\n          </CardBody>\n        </Card>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          autoHideDuration={3000}\n          open={this.state.displayToast}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          onClose={this._handleClose}\n          message={<span id=\"message-id\">{this.state.toastMessage}</span>}\n        />\n      </Container>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const hospitalState = state.hospital;\n  let isUpdate = false;\n  const defaultData =\n    !UNDERSCORE.isEmpty(hospitalState) &&\n    !UNDERSCORE.isEmpty(hospitalState.hospitalDetail)\n      ? hospitalState.hospitalDetail\n      : {};\n  if (!UNDERSCORE.isEmpty(defaultData)) {\n    isUpdate = true;\n    const address = JSON.parse(defaultData.address);\n    defaultData.latitude = defaultData.latLng[0];\n    defaultData.longitude = defaultData.latLng[1];\n    defaultData.streetName = address.streetName;\n    defaultData.building = address.building;\n  }\n  return {\n    initialValues: { ...defaultData },\n    isUpdate\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getHospitalDetail: pdNumber => {\n      dispatch(Action.getHospitalDetail(pdNumber));\n    },\n    clearHospitalDetail: () => {\n      dispatch(Action.clearHospitalDetail());\n    }\n  };\n}\nCreateHospitalCard = reduxForm({\n  form: \"hospital\", // a unique identifier for this form\n  enableReinitialize: true,\n  validate\n})(withTranslation(\"common\")(CreateHospitalCard));\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(CreateHospitalCard));\n","import { post, get, put } from './fetch';\nimport Endpoint from './endpoints';\n\nexport function save(saveData){\n\treturn post(Endpoint.createHospital, saveData);\n}\nexport function update(saveData, id){\n\treturn put(`${Endpoint.updateHospital}/${id}`, saveData);\n}\nexport  function getHospitalList (location) {\n\tconst endpoint = `${Endpoint.getHospitalList}${location}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_HOSPITALLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\nexport function getHospitalDetail(pdNumber){\n\tconst endpoint = `${Endpoint.getHospitalDetail}${pdNumber}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_HOSPITALDETAIL',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n}\nexport function clearHospitalDetail () {\n\treturn{\n\t\ttype: 'RESPONSE_HOSPITALDETAIL',\n\t\tdata:[],\n\t}\n}","import React from \"react\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport CreateHospitalCard from \"./components/CreateHospitalCard\";\r\n\r\nconst CreateHospitalPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Create Hospital</h3>\r\n      </Col>\r\n\t\t\t<CreateHospitalCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateHospitalPage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateHospitalCard from './components/CreateHospitalCard';\n\n\nconst EditHospitalPage = () => (\n  <Container className='dashboard'>\n    <Row>\n      <CreateHospitalCard />\n    </Row>\n  </Container>\n);\n\nexport default EditHospitalPage;\n","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/hospitalActions\";\r\n\r\nclass ViewHospitalsContainer extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getHospitalList(\"all\");\r\n  }\r\n\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/hospitalManagement/editHospital/${data.hospitalPdNumber}`\r\n    );\r\n  };\r\n\r\n  _renderOperation = data => {\r\n    return (\r\n      <Button className=\"icon\" color=\"primary\" onClick={() => this._handleEditHospital(data)}>\r\n        <span class=\"lnr lnr-pencil\" />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { hospitalList } = this.props;\r\n    const columns = [\r\n      {\r\n        id: \"hospitalPdNumber\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Hospital Id\",\r\n        render: text => text.hospitalPdNumber\r\n      },\r\n      {\r\n        id: \"name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Hospital Name\"\r\n      },\r\n      {\r\n        id: \"location\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Location\"\r\n      },\r\n      {\r\n        id: \"pincode\",\r\n        label: \"Pincode\",\r\n        numeric: false,\r\n        disablePadding: true\r\n      },\r\n      {\r\n        id: \"landmark\",\r\n        label: \"Landmark\",\r\n        numeric: false,\r\n        disablePadding: true\r\n      },\r\n      { label: \"Action\", render: text => this._renderOperation(text) }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={hospitalList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const hospitalState = state.hospital;\r\n  return {\r\n    hospitalList:\r\n      !UNDERSCORE.isEmpty(hospitalState) &&\r\n      !UNDERSCORE.isEmpty(hospitalState.hospitalList)\r\n        ? hospitalState.hospitalList.hospitals\r\n        : [],\r\n    totalCount:\r\n      !UNDERSCORE.isEmpty(hospitalState) &&\r\n      !UNDERSCORE.isEmpty(hospitalState.hospitalList)\r\n        ? hospitalState.hospitalList.totalRecords\r\n        : 0\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getHospitalList: location => {\r\n      dispatch(Action.getHospitalList(location));\r\n    }\r\n  };\r\n}\r\n\r\nViewHospitalsContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewHospitalsContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewHospitalsContainer from './container/ViewHospitalsContainer';\r\nimport { VIEW_HOSPITALS } from '../../../constants/strings';\r\n\r\nconst ViewHospitalPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_HOSPITALS}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewHospitalsContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewHospitalPage;\r\n","export const emptyField = 'Atleast add one token for the schedule';\n\nexport const addSchedule = {\n\thospital: {\n\t\ttype: 'select',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tdoctor: {\n\t\ttype: 'select',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tweekday: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\tfromTime: {\n\t\ttype: 'date',\n\t\tdbKey: 'startTime',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\ttoTime: {\n\t\ttype: 'date',\n\t\tdbKey: 'endTime',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t}\n}\n\nexport const addToken = {\n\tstartTime: {\n\t\ttype: 'date',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\tendTime: {\n\t\ttype: 'date',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\ttype: {\n\t\ttype: 'select',\n\t\tdbKey: 'tokenType',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\ttokenNo: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t}\n}","import {\n\tpost,\n\tget,\n\tput,\n\tdel\n} from './fetch';\nimport Endpoint from './endpoints';\n\nexport function getDoctorList() {\n\treturn function (dispatch) {\n\t\treturn get(Endpoint.getDoctorMasterList)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_DOCTOR_MASTERLIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function getHospitalList() {\n\treturn function (dispatch) {\n\t\treturn get(Endpoint.getHospitalMasterList)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_HOSPITAL_MASTERLIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function getScheduleList(doctorId) {\n\tconst endpoint = `${Endpoint.getScheduleList}${doctorId}`;\n\treturn function (dispatch) {\n\t\treturn get(endpoint)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_SCHEDULE_LIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function clearScheduleList() {\n\treturn {\n\t\ttype: 'RESPONSE_SCHEDULE_LIST',\n\t\tdata: [],\n\t};\n};\n\nexport function getScheduleDetail(id) {\n\tconst endpoint = `${Endpoint.getScheduleDetail}${id}`;\n\treturn function (dispatch) {\n\t\treturn get(endpoint)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport function clearScheduleDetail(dispatch) {\n\t// return () => {\n\t// \treturn new Promise((resolve) => { \n\t// \t\t\tdispatch({\n\t// \t\t\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t// \t\t\t\tdata: [],\n\t// \t\t\t});\n\t// \t\t\tresolve();\n\t// \t});\n\t// }\n\treturn {\n\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t\tdata: [],\n\t}\n};\n\nexport function save(saveData) {\n\treturn post(Endpoint.createSchedule, saveData);\n}\n\nexport function updateSchedule(data, scheduleId) {\n\tconst endpoint = `${Endpoint.updateSchedule}${scheduleId}`;\n\treturn put(endpoint, data);\n}\nexport function deleteSchedule(scheduleId) {\n\tconst endpoint = `${Endpoint.deleteSchedule}${scheduleId}`;\n\treturn del(endpoint);\n}","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\n\r\nclass TimePickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    timeMode: PropTypes.bool.isRequired\r\n  };\r\n\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  setOpen = ({ open }) => {\r\n    this.setState({ open });\r\n  };\r\n\r\n  toggleOpen = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ open: !prevState.open }));\r\n  };\r\n\r\n  render() {\r\n\t\tconst { value, onChange, placeholder } = this.props;\r\n\t\tconst data = UNDERSCORE.isEmpty(value) ? { value : UNDERSCORE.isEmpty(value)} : {};\r\n    return (\r\n      <Flatpickr\r\n\t\t\t\toptions={{enableTime: true, noCalendar: true, dateFormat: \"H:i\"}}\r\n\t\t\t\tplaceholder={placeholder}\r\n        onChange={date => {\r\n          onChange(date);\r\n\t\t\t\t}}\r\n\t\t\t\t{...data}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst renderTimePickerField = props => {\r\n  const { input, meta, timeMode, width } = props;\r\n  return (\r\n    <div className=\"form__form-group-input-wrap\">\r\n      <div style={{ width: width }}>\r\n        <TimePickerField {...input} timeMode={timeMode} />\r\n      </div>\r\n      {meta.touched && meta.error && (\r\n        <span className=\"form__form-group-error\" style={{ width: width }}>\r\n          {meta.error}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTimePickerField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  timeMode: PropTypes.bool\r\n};\r\n\r\nrenderTimePickerField.defaultProps = {\r\n  timeMode: false\r\n};\r\n\r\nexport default renderTimePickerField;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ToggleButtonField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    defaultChecked: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.bool,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultChecked: false,\r\n\t\tdisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { onChange, defaultChecked } = this.props;\r\n    onChange(defaultChecked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name, disabled, value, onChange,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"toggle-btn\">\r\n        <input\r\n          className=\"toggle-btn__input\"\r\n          type=\"checkbox\"\r\n          name={name}\r\n          onChange={onChange}\r\n          checked={value}\r\n          disabled={disabled}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"toggle-btn__input-label\"\r\n          onClick={() => onChange(!value)}\r\n        >Toggle\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderToggleButtonField = (props) => {\r\n\tconst { input, defaultChecked, disabled } = props;\r\n  return (\r\n    <ToggleButtonField\r\n      {...input}\r\n      defaultChecked={defaultChecked}\r\n\t\t\tdisabled={disabled}\r\n    />\r\n  );\r\n};\r\n\r\nrenderToggleButtonField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n\t\tname: PropTypes.string,\r\n\t\tvalue: PropTypes.bool,\r\n  }).isRequired,\r\n  defaultChecked: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nrenderToggleButtonField.defaultProps = {\r\n  defaultChecked: false,\r\n  disabled: false,\r\n};\r\n\r\nexport default renderToggleButtonField;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  ButtonToolbar\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { addSchedule, emptyField } from \"../constants/AddScheduleConfig\";\r\nimport { CREATE_SCHEDULE, EDIT_SCHEDULE } from \"../../../../constants/strings\";\r\nimport * as Action from \"../../../../redux/actions/scheduleActions\";\r\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\r\nimport RenderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport renderTimePickerField from \"../../../../components/shared/components/form/TimePicker\";\r\nimport renderToggleButtonField from \"../../../../components/shared/components/form/ToggleButton\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst moment = require(\"moment\");\r\nconst weekDays = [\r\n  {\r\n    value: \"Mon\",\r\n    label: \"MON\"\r\n  },\r\n  {\r\n    value: \"Tue\",\r\n    label: \"TUE\"\r\n  },\r\n  {\r\n    value: \"Wed\",\r\n    label: \"WED\"\r\n  },\r\n  {\r\n    value: \"Thu\",\r\n    label: \"THU\"\r\n  },\r\n  {\r\n    value: \"Fri\",\r\n    label: \"FRI\"\r\n  },\r\n  {\r\n    value: \"Sat\",\r\n    label: \"SAT\"\r\n  },\r\n  {\r\n    value: \"Sun\",\r\n    label: \"SUN\"\r\n  }\r\n];\r\nconst TokenType = [\r\n  {\r\n    label: \"PREMIUM\",\r\n    value: \"PREMIUM\"\r\n  },\r\n  {\r\n    label: \"REGULAR\",\r\n    value: \"REGULAR\"\r\n  }\r\n];\r\n\r\nconst fastrack = {\r\n  number: 0,\r\n  type: \"FASTTRACK\",\r\n  time: \"Can visit on your arival\"\r\n};\r\n\r\nconst emptyToken = {\r\n  id: 0,\r\n  number: \"\",\r\n  type: {},\r\n  time: \"\",\r\n  startTime: null,\r\n  endTime: null,\r\n  showSnackBar: false,\r\n  snackBarMessage: \"\"\r\n};\r\n\r\nconst renderField = ({\r\n  input,\r\n  placeholder,\r\n  type,\r\n  width,\r\n  disabled,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <div className=\"form__form-group-input-wrap form__form-group-input-wrap--error-above\">\r\n      <div style={{ width: width }}>\r\n        <input\r\n          {...input}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          disabled={disabled}\r\n        />\r\n        {touched && error && (\r\n          <span className=\"form__form-group-error\">{error}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass CreateScheduleCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tokenList: [emptyToken],\r\n      isFastrack: false,\r\n      existTokens: [],\r\n      updated: false,\r\n      deleteTokens: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    this.props.getDoctorList();\r\n    this.props.getHospitalList();\r\n    if (pathName.includes(\"edit\")) {\r\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n      this.props.getScheduleDetail(pdNumber);\r\n    } else {\r\n      this.props.clearScheduleDetail();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.isUpdate &&\r\n      UNDERSCORE.isEmpty(prevState.existTokens) &&\r\n      !prevState.updated\r\n    ) {\r\n      return { existTokens: nextProps.initialValues.tokens };\r\n    } else return null;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isUpdate && !prevState.updated) {\r\n      const { isFastrack, dataList } = this._decodeTokenList(\r\n        this.props.initialValues.tokens\r\n\t\t\t);\r\n\t\t\tthis._handleFastrack(isFastrack);\r\n      this.setState({ isFastrack, existTokens: dataList, updated: true });\r\n\t\t}\r\n  }\r\n  _decodeTokenList = tokenList => {\r\n    let isFastrack = false;\r\n    const dataList = [];\r\n    tokenList &&\r\n      tokenList.forEach((map, index) => {\r\n        if (UNDERSCORE.isEqual(map, fastrack)) {\r\n          isFastrack = true;\r\n        }\r\n        if (!UNDERSCORE.isEqual(map, fastrack)) {\r\n          dataList.push({\r\n            id: index,\r\n            number: map.number,\r\n            type: map.type,\r\n            startTime: map.time.split(\" - \")[0],\r\n            endTime: map.time.split(\" - \")[1]\r\n          });\r\n        }\r\n      });\r\n    return {\r\n      isFastrack,\r\n      dataList\r\n    };\r\n  };\r\n  _handleSubmit = ({\r\n    doctor = \"\",\r\n    hospital = \"\",\r\n    weekday = \"\",\r\n    isFastrack = false,\r\n    fromTime = \"\",\r\n    toTime = \"\"\r\n  }) => {\r\n    const editValue = {\r\n      doctor,\r\n      hospital,\r\n      weekday,\r\n      fromTime,\r\n      toTime\r\n    };\r\n    if (this.props.isUpdate) {\r\n      return this._updateSchedule();\r\n    } else {\r\n      return this._addSchedule(editValue, isFastrack);\r\n    }\r\n  };\r\n  _updateSchedule = () => {\r\n    const { deleteTokens, tokenList, isFastrack } = this.state;\r\n    // const errorText = {};\r\n    const addTokens = this._parseToken(tokenList, false);\r\n    const token = {\r\n      deleteTokens,\r\n      addTokens\r\n    };\r\n    if (this.props.initialValues.isFastrack !== isFastrack) {\r\n      if (isFastrack) {\r\n        // const addTokenList = addTokens.push(fastrack)\r\n        token.addTokens.push(fastrack);\r\n      } else {\r\n        deleteTokens.push(0);\r\n      }\r\n    }\r\n\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    const scheduleId = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n    if (\r\n      UNDERSCORE.isEmpty(token.addTokens) &&\r\n      UNDERSCORE.isEmpty(token.deleteTokens)\r\n    ) {\r\n      return;\r\n    }\r\n    Action.updateSchedule(token, scheduleId)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.props.getScheduleDetail(scheduleId);\r\n        this.setState({\r\n          showSnackBar: true,\r\n          snackBarMessage: response.message\r\n        });\r\n      });\r\n  };\r\n  _addSchedule = (editValue, isFastrack) => {\r\n    const { tokenList } = this.state;\r\n    const errorText = {};\r\n    Object.keys(editValue).forEach(key =>\r\n      this._validateScheduleFields(key, editValue[key], errorText)\r\n    );\r\n    this._validateTokens(this._parseToken(tokenList, isFastrack), errorText);\r\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\r\n    if (error !== 0) {\r\n      if (!UNDERSCORE.isEmpty(errorText.tokens)) {\r\n        this.setState({ errorToken: errorText.tokens });\r\n      } else {\r\n        this.setState({ errorToken: \"\" });\r\n      }\r\n      throw new SubmissionError(errorText);\r\n    }\r\n    // this._validateTokens(this._parseToken(tokenList, fastrack));\r\n    editValue.tokens = this._parseToken(tokenList, fastrack);\r\n    editValue.startTime = moment(editValue.fromTime[0]).format(\"hh:mm A\");\r\n    editValue.endTime = moment(editValue.toTime[0]).format(\"hh:mm A\");\r\n    editValue.hospitalId = this.findIdInList(\r\n      editValue.hospital.value,\r\n      this.props.hospitalList,\r\n      \"hospitalId\"\r\n    );\r\n    editValue.doctorId = this.findIdInList(\r\n      editValue.doctor.value,\r\n      this.props.doctorList,\r\n      \"doctorId\"\r\n    );\r\n    editValue.weekday = editValue.weekday.value;\r\n    this.setState({ active: true });\r\n    Action.save(editValue)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.setState({\r\n          showSnackBar: true,\r\n          snackBarMessage: response.message\r\n        });\r\n      });\r\n  };\r\n  findIdInList = (value, list, key) => {\r\n    return list.filter(data => data.pdNumber === value)[0][key];\r\n  };\r\n  _parseList = (dataList, key, id) => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data[key],\r\n          label: data.name,\r\n          id: data[id]\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  _parseToken = (tokenList, fastrack) => {\r\n    const dataList = [];\r\n    tokenList.forEach(token => {\r\n      if (\r\n        !UNDERSCORE.isEmpty(token.number) &&\r\n        !UNDERSCORE.isEmpty(token.type) &&\r\n        !UNDERSCORE.isEmpty(token.startTime) &&\r\n        !UNDERSCORE.isEmpty(token.endTime)\r\n      ) {\r\n        const startTime = moment(token.startTime).format(\"hh:mm A\");\r\n        const endTime = moment(token.endTime).format(\"hh:mm A\");\r\n        const data = {\r\n          number: parseInt(token.number),\r\n          type: token.type,\r\n          time: `${startTime} - ${endTime}`\r\n        };\r\n        dataList.push(data);\r\n      }\r\n    });\r\n    if (fastrack) {\r\n      dataList.push({\r\n        number: 0,\r\n        type: \"FASTTRACK\",\r\n        time: \"Can visit on your arival\"\r\n      });\r\n    }\r\n    return dataList;\r\n  };\r\n\r\n  _validateScheduleFields = (key, value, errorText) => {\r\n    if (UNDERSCORE.isEmpty(value)) {\r\n      errorText[key] = addSchedule[key].emptyField;\r\n      if (addSchedule[key].type === \"date\" && !!value) {\r\n        errorText[key] = \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  _validateTokens = (tokenList, errorText) => {\r\n    if (tokenList.length === 0) {\r\n      errorText.tokens = emptyField;\r\n    }\r\n  };\r\n\r\n  _handleAddToken = index => {\r\n    const { tokenList } = this.state;\r\n    tokenList.push({\r\n      id: index,\r\n      tokenNo: \"\",\r\n      tokenType: \"\",\r\n      tokenTime: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    this.setState({\r\n      tokenList\r\n    });\r\n  };\r\n\r\n  _handleDelete = () => {\r\n    const id = this.props.initialValues.id;\r\n    Action.deleteSchedule(id).then(result => {\r\n      if (result) {\r\n        this.context.router.history.push(\r\n          `/pages/scheduleManagement/viewSchedules`\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  _handleDeleteToken = value => {\r\n    const { tokenList } = this.state;\r\n    if (tokenList.length === 1) {\r\n      return;\r\n    }\r\n    const updatedToken = tokenList.filter(\r\n      data => !UNDERSCORE.isEqual(data, value)\r\n    );\r\n    this.setState({ tokenList: updatedToken });\r\n  };\r\n\r\n  _handleTokenChange = (index, key, event) => {\r\n    const { tokenList } = this.state;\r\n    tokenList.forEach(token => {\r\n      if (token.id === index) {\r\n        token[key] = event;\r\n      }\r\n    });\r\n  };\r\n  _handleExistDeleteToken = data => {\r\n    const { existTokens, deleteTokens } = this.state;\r\n    deleteTokens.push(data.number);\r\n    const dataList = existTokens.filter(map => !UNDERSCORE.isEqual(data, map));\r\n    this.setState({\r\n      deleteTokens,\r\n      existTokens: dataList\r\n    });\r\n  };\r\n\r\n  _handleFastrack = value => {\r\n    this.setState({\r\n      isFastrack: value\r\n    });\r\n  };\r\n\r\n  renderTokenList = () => {\r\n\t\tconst { tokenList, existTokens } = this.state;\r\n\t\tconsole.log('tokenList')\r\n\t\tconsole.log(tokenList)\r\n\t\tconsole.log(existTokens)\r\n    return (\r\n      <div>\r\n        {existTokens &&\r\n          existTokens.map(\r\n            data =>\r\n              data.number !== 0 && (\r\n                <div>\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.type}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 100, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.number}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.startTime}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.endTime}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n\r\n                    <Button\r\n                      className=\"icon btn-danger\"\r\n                      onClick={() => this._handleExistDeleteToken(data)}\r\n                    >\r\n                      <span class=\"lnr lnr-trash text-white\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )\r\n          )}\r\n        {tokenList &&\r\n          tokenList.map((data, index) => (\r\n            <div>\r\n              <div>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name={\"type\" + index}\r\n                      component={RenderSelectField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(index, \"type\", event.value)\r\n                      }\r\n                      type=\"text\"\r\n                      placeholder=\"Type\"\r\n                      width={100}\r\n                      options={TokenType}\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 100, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name={\"number\" + index}\r\n                      component={renderField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"number\",\r\n                          event.target.value\r\n                        )\r\n                      }\r\n                      type=\"number\"\r\n                      value={data.number}\r\n                      placeholder=\"Token No\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name=\"startTime\"\r\n                      placeholder=\"Start Time\"\r\n                      component={renderTimePickerField}\r\n                      value={data.startTime}\r\n                      onChange={event => {\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"startTime\",\r\n                          moment(event[0])\r\n                        );\r\n                      }}\r\n                      width={100}\r\n                      timeMode\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name=\"endTime\"\r\n                      component={renderTimePickerField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"endTime\",\r\n                          moment(event[0])\r\n                        )\r\n                      }\r\n                      placeholder=\"End time\"\r\n                      width={100}\r\n                      timeMode\r\n                    />\r\n                  </div>\r\n\r\n                  <Button\r\n                    className=\"icon btn-danger\"\r\n                    onClick={() => this._handleDeleteToken(data)}\r\n                  >\r\n                    <span class=\"lnr lnr-trash text-white\" />\r\n                  </Button>\r\n                  {tokenList.length - 1 === index && (\r\n                    <Button\r\n                      className=\"icon btn-primary\"\r\n                      outline\r\n                      onClick={() => this._handleAddToken(index + 1)}\r\n                    >\r\n                      <span class=\"lnr lnr-plus-circle text-white\" />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  setEmptyData = columns => {\r\n    const data = [];\r\n    const obj = {};\r\n    columns.forEach(column => (obj[column.id] = \"\"));\r\n    data.push(obj);\r\n    return data;\r\n  };\r\n\r\n  _handleSnackBarClose = () => {\r\n    this.setState({ showSnackBar: false });\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit, isUpdate } = this.props;\r\n    const { errorToken } = this.state;\r\n    const doctorList = this._parseList(\r\n      this.props.doctorList,\r\n      \"pdNumber\",\r\n      \"doctorId\"\r\n    );\r\n    const hospitalList = this._parseList(\r\n      this.props.hospitalList,\r\n      \"pdNumber\",\r\n      \"hospitalid\"\r\n    );\r\n    const renderTimeField = isUpdate ? renderField : renderTimePickerField;\r\n    const renderSelectField = isUpdate ? renderField : RenderSelectField;\r\n    const title = isUpdate ? EDIT_SCHEDULE : CREATE_SCHEDULE;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n          </Col>\r\n        </Row>\r\n        <form\r\n          className=\"form form--horizontal\"\r\n          onSubmit={handleSubmit(this._handleSubmit)}\r\n        >\r\n          <Card>\r\n            <CardBody>\r\n              {!isUpdate && (\r\n                <div className=\"form__form-group\">\r\n                  <h5 className=\"bold-text\">Add Schedule</h5>\r\n                </div>\r\n              )}\r\n              <Row>\r\n                <Col md={12} sm={12}>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <ButtonToolbar className=\"form__button-toolbar\">\r\n                      {isUpdate && (\r\n                        <Button\r\n                          className=\"icon\"\r\n                          onClick={() => this._handleDelete()}\r\n                        >\r\n                          <span class=\"lnr lnr-trash\" /> Delete\r\n                        </Button>\r\n                      )}\r\n                      <Button color=\"primary\" type=\"submit\" size=\"sm\">\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        onClick={reset}\r\n                        disabled={pristine || submitting}\r\n                      >\r\n                        Clear\r\n                      </Button>\r\n                    </ButtonToolbar>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <div>\r\n                  <Col md={6} sm={12}>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Doctor</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"doctor\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          placeholder=\"Doctor\"\r\n                          width={240}\r\n                          options={doctorList}\r\n                          disabled={this.props.isUpdate}\r\n                          renderId={true}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Hospital</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"hospital\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          renderId={true}\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"Hospital\"\r\n                          width={240}\r\n                          options={hospitalList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Weekday</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"weekday\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"Weekday\"\r\n                          width={120}\r\n                          options={weekDays}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Start time</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"fromTime\"\r\n                          component={renderTimeField}\r\n                          placeholder=\"Start time\"\r\n                          disabled={this.props.isUpdate}\r\n                          timeMode\r\n                          width={120}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">End time</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"toTime\"\r\n                          component={renderTimeField}\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"End time\"\r\n                          timeMode\r\n                          width={120}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </div>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div>\r\n                    <div className=\"form__form-group\">\r\n                      <h5 className=\"bold-text\">Add Token</h5>\r\n                      {errorToken && (\r\n                        <span className=\"form__form-group-error\">\r\n                          {errorToken}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Fastrack</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"isFastrack\"\r\n                          component={renderToggleButtonField}\r\n                          placeholder=\"Fastrack\"\r\n                          value={this.state.isFastrack}\r\n                          onChange={this._handleFastrack}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {this.renderTokenList()}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              autoHideDuration={3000}\r\n              open={this.state.showSnackBar}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              onClose={this._handleSnackBarClose}\r\n              message={\r\n                <span id=\"message-id\">{this.state.snackBarMessage}</span>\r\n              }\r\n            />\r\n          </Card>\r\n        </form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const scheduleState = state.schedule;\r\n  const defaultData =\r\n    !UNDERSCORE.isEmpty(scheduleState) &&\r\n    !UNDERSCORE.isEmpty(scheduleState.scheduleDetail)\r\n      ? scheduleState.scheduleDetail\r\n      : {};\r\n\r\n  return {\r\n    doctorList: scheduleState.doctorMasterList,\r\n    hospitalList: scheduleState.hospitalMasterList,\r\n    scheduleList:\r\n      !UNDERSCORE.isEmpty(scheduleState) &&\r\n      !UNDERSCORE.isEmpty(scheduleState.scheduleList)\r\n        ? scheduleState.scheduleList\r\n        : [],\r\n    initialValues: { ...defaultData },\r\n    isUpdate: !UNDERSCORE.isEmpty(defaultData)\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    },\r\n    getHospitalList: () => {\r\n      dispatch(Action.getHospitalList());\r\n    },\r\n    getScheduleList: doctorId => {\r\n      dispatch(Action.getScheduleList(doctorId));\r\n    },\r\n    getScheduleDetail: doctorId => {\r\n      dispatch(Action.getScheduleDetail(doctorId));\r\n    },\r\n    clearScheduleDetail: () => {\r\n      dispatch(Action.clearScheduleDetail());\r\n    }\r\n  };\r\n}\r\nCreateScheduleCard.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\nCreateScheduleCard = reduxForm({\r\n  form: \"doctor\",\r\n  validate,\r\n  enableReinitialize: true\r\n})(withTranslation(\"common\")(CreateScheduleCard));\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateScheduleCard));\r\n","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport CreateScheduleCard from './components/CreateScheduleCard';\r\n\r\n\r\nconst CreateSchedulePage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <CreateScheduleCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateSchedulePage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateScheduleCard from './components/CreateScheduleCard';\n\n\nconst EditSchedulePage = () => (\n  <Container className='dashboard'>\n    <Row>\n      <CreateScheduleCard />\n    </Row>\n  </Container>\n);\n\nexport default EditSchedulePage;","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport RenderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/scheduleActions\";\r\n\r\nclass ViewSchedulesContainer extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getDoctorList();\r\n    this.props.getHospitalList();\r\n    this.props.clearScheduleList();\r\n  }\r\n\r\n  _renderToggle = text => {\r\n    const color = text.status === \"ACTIVE\" ? false : true;\r\n    const tooltext = text.status === \"ACTIVE\" ? \"Block\" : \"Unblock\";\r\n    return (\r\n      <Tooltip title={tooltext}>\r\n        <Switch\r\n          checked={color}\r\n          onChange={() => this.handleToggle(text)}\r\n          value=\"checkedB\"\r\n          color=\"primary\"\r\n        />\r\n      </Tooltip>\r\n    );\r\n  };\r\n  _parseList = (dataList, key, id) => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data[key],\r\n          label: data.name,\r\n          id: data[id]\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  handleSelect = value => {\r\n    this.setState({ doctorId: value.id });\r\n    this.props.getScheduleList(value.id);\r\n  };\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/scheduleManagement/editSchedule/${data._id}`\r\n    );\r\n  };\r\n\r\n  _renderOperation = data => {\r\n    return (\r\n      <Button\r\n        className=\"icon\"\r\n        color=\"primary\"\r\n        onClick={() => this._handleEditHospital(data)}\r\n      >\r\n        <span class=\"lnr lnr-pencil\" />\r\n      </Button>\r\n    );\r\n  };\r\n  render() {\r\n    const { scheduleList } = this.props;\r\n    const doctorList = this._parseList(\r\n      this.props.doctorList,\r\n      \"pdNumber\",\r\n      \"doctorId\"\r\n    );\r\n    const columns = [\r\n      {\r\n        label: \"Hospital Name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        render: text => text.hospital.name\r\n      },\r\n      { label: \"Weekday\", numeric: false, disablePadding: true, id: \"weekday\" },\r\n      {\r\n        label: \"Starttime\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        id: \"startTime\"\r\n      },\r\n      { label: \"Endtime\", numeric: false, disablePadding: true, id: \"endTime\" },\r\n      { label: \"Action\", render: text => this._renderOperation(text) }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <div style={{ width: 200 }}>\r\n                <RenderSelectField\r\n                  name=\"doctor\"\r\n                  type=\"text\"\r\n                  placeholder=\"Doctor\"\r\n                  width={240}\r\n                  options={doctorList}\r\n                  renderId={true}\r\n                  onChange={value => this.handleSelect(value)}\r\n                  filter={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <MaterialTable columns={columns} data={scheduleList} />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const scheduleState = state.schedule;\r\n  return {\r\n    doctorList: scheduleState.doctorMasterList,\r\n    scheduleList:\r\n      !UNDERSCORE.isEmpty(scheduleState) &&\r\n      !UNDERSCORE.isEmpty(scheduleState.scheduleList)\r\n        ? scheduleState.scheduleList\r\n        : []\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    },\r\n    getHospitalList: () => {\r\n      dispatch(Action.getHospitalList());\r\n    },\r\n    getScheduleList: doctorId => {\r\n      dispatch(Action.getScheduleList(doctorId));\r\n    },\r\n    clearScheduleList: () => {\r\n      dispatch(Action.clearScheduleList());\r\n    }\r\n  };\r\n}\r\n\r\nViewSchedulesContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewSchedulesContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewSchedulesContainer from './container/ViewSchedulesContainer';\r\nimport { VIEW_SCHDULES } from '../../../constants/strings';\r\n\r\nconst ViewSchedulesPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_SCHDULES}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewSchedulesContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewSchedulesPage;\r\n","import Endpoints from '../../../redux/actions/endpoints'\n\nexport const sendPushMessage = (title, body, callback) => {\n  fetch(Endpoints.sendAnnouncement, {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify({ title, body })\n  }).then(res => callback(res.status));\n};\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { ButtonToolbar, Button } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { withTranslation } from 'react-i18next';\nimport { sendPushMessage } from './commons';\nimport PropTypes from 'prop-types';\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Title shouldn't be empty\";\n  }\n  if (!values.message) {\n    errors.message = \"Message shouldn't be empty\";\n  }\n  return errors;\n};\n\nconst _renderTitleInput = ({ input, meta: { touched, error }, label }) => (\n  <div className='form__form-group'>\n    <span className='form__form-group-label'>{label}</span>\n    <div className='form__form-group-field'>\n      <div className='form__form-group-input-wrap'>\n        <input {...input} />\n        {error && touched && (\n          <span className='form__form-group-error'>{error}</span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\n_renderTitleInput.propTypes = {\n  input: PropTypes.shape().isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  label: PropTypes.string.isRequired\n};\n\nconst _renderMessageInput = ({ input, meta: { touched, error }, label }) => (\n  <div className='form__form-group'>\n    <span className='form__form-group-label'>{label}</span>\n    <div className='form__form-group-field'>\n      <div className='form__form-group-input-wrap'>\n        <textarea {...input} />\n        {error && touched && (\n          <span className='form__form-group-error'>{error}</span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\n_renderMessageInput.propTypes = {\n  input: PropTypes.shape().isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  label: PropTypes.string.isRequired\n};\n\nclass AnnouncementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayToast: false,\n      displayMessage: ''\n    };\n  }\n\n  _handleSubmit = ({ title, message }) => {\n    sendPushMessage(title, message, httpStatus => {\n      this.props.reset();\n      this.props.afterPush(httpStatus);\n    });\n  };\n\n  render() {\n    const { pristine, reset, submitting, handleSubmit } = this.props;\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <form\n              className='form form--horizontal'\n              onSubmit={handleSubmit(this._handleSubmit)}\n            >\n              <Field name='title' label='Title' component={_renderTitleInput} />\n              <Field\n                name='message'\n                label='Message'\n                component={_renderMessageInput}\n              />\n              <ButtonToolbar className='form__button-toolbar'>\n                <Button\n                  color='primary'\n                  type='submit'\n                  disabled={pristine || submitting}\n                >\n                  Send\n                </Button>\n                <Button\n                  type='button'\n                  onClick={reset}\n                  disabled={pristine || submitting}\n                >\n                  Clear\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({ form: 'announcement_form', validate })(\n  withTranslation('common')(AnnouncementForm)\n);\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport MaterialTable from '../../../components/containers/Tables/MaterialTable';\nimport SendIcon from 'mdi-react/SendIcon';\n\nconst AnnouncementsTable = props => {\n  const columns = [\n    {\n      id: 'date',\n      label: 'Date'\n    },\n    {\n      id: 'title',\n      label: 'Title'\n    },\n    {\n      id: 'body',\n      label: 'Message'\n    },\n    {\n      id: 'action',\n      label: 'Action',\n      render: row => {\n        return (\n          <a onClick={() => props.onResendClick(row.title, row.body)}>\n            <SendIcon color=\"#304ffe\" />\n          </a>\n        );\n      }\n    }\n  ];\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Previous Announcements</h5>\n          </div>\n          <MaterialTable columns={columns} data={props.data} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default AnnouncementsTable;\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport AnnouncementForm from './components/AnnouncementForm';\r\nimport { ANNOUNCEMENT } from '../../constants/strings';\r\nimport AnnouncementsTable from './components/AnnouncementsTable';\r\nimport Endpoint from '../../redux/actions/endpoints';\r\nimport Moment from 'moment-timezone';\r\nimport { sendPushMessage } from './components/commons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport _ from 'underscore';\r\n\r\nclass AnnouncementPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this._fetchAnnouncements();\r\n  }\r\n\r\n  _displayToast(httpStatus) {\r\n    if (_.isEqual(httpStatus, 200)) {\r\n      this.setState({\r\n        displayToast: true,\r\n        displayMessage: 'Message sent successfully'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        displayToast: true,\r\n        displayMessage: 'Error sending message!'\r\n      });\r\n    }\r\n  }\r\n\r\n  _fetchAnnouncements() {\r\n    fetch(Endpoint.getAnnouncements)\r\n      .then(res => res.json())\r\n      .then(announcementsData => {\r\n        const announcements = announcementsData.map(announcement => {\r\n          const date = Moment.tz(announcement.date, 'Asia/Calcutta').format(\r\n            'DD-MMM-YYYY HH:mm:ss'\r\n          );\r\n          return {\r\n            ...announcement,\r\n            date\r\n          };\r\n        });\r\n        this.setState({ announcements });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{ANNOUNCEMENT}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <AnnouncementForm\r\n            afterPush={httpStatus => {\r\n              this._displayToast(httpStatus);\r\n            }}\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <AnnouncementsTable\r\n            data={this.state.announcements}\r\n            onResendClick={(title, body) => {\r\n              sendPushMessage(title, body, httpStatus => {\r\n                this._displayToast(httpStatus);\r\n              });\r\n            }}\r\n          />\r\n        </Row>\r\n        {this.state.displayToast && (\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id'\r\n            }}\r\n            onClose={() => this.setState({ displayToast: false })}\r\n            message={<span id=\"message-id\">{this.state.displayMessage}</span>}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementPage;\r\n","import React from 'react';\r\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Endpoints from '../../../../redux/actions/endpoints';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst renderTextInput = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  type,\r\n  placeholder\r\n}) => (\r\n  <div className='form__form-group'>\r\n    <span className='form__form-group-label'>{label}</span>\r\n    <div className='form__form-group-field'>\r\n      <div className='form__form-group-input-wrap'>\r\n        <input {...input} type={type} placeholder={placeholder} />\r\n        {error && touched && (\r\n          <span className='form__form-group-error'>{error}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nrenderTextInput.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  }),\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired\r\n};\r\n\r\nconst _validateForm = values => {\r\n  const errors = {};\r\n  if (!values.mobile) {\r\n    errors.mobile = \"Mobile number can't be empty\";\r\n  }\r\n  if (!values.fullName) {\r\n    errors.fullName = \"Name can't be empty\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nclass CreateFrontdeskUserCard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  _handleSubmit = ({ mobile, fullName }) => {\r\n    const password = mobile;\r\n    fetch(Endpoints.createFrontdeskUser, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({ mobile, password, fullName })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const { reset, onResponse } = this.props;\r\n        if (res.status) {\r\n          reset();\r\n        }\r\n        onResponse(res);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit } = this.props;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>Create Front-Desk User</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={handleSubmit(this._handleSubmit)}\r\n            >\r\n              <Field\r\n                name='mobile'\r\n                type='text'\r\n                placeholder='Mobile'\r\n                label='Mobile'\r\n                component={renderTextInput}\r\n              />\r\n              <Field\r\n                name='fullName'\r\n                type='text'\r\n                placeholder='Full Name'\r\n                label='Full Name'\r\n                component={renderTextInput}\r\n              />\r\n\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button\r\n                  color='primary'\r\n                  type='submit'\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Create\r\n                </Button>\r\n                <Button\r\n                  type='button'\r\n                  onClick={reset}\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </ButtonToolbar>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'create_frontdeskuser_form',\r\n  validate: _validateForm\r\n})(withTranslation('common')(CreateFrontdeskUserCard));\r\n","import React from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { withTranslation } from 'react-i18next';\nimport renderSelectField from '../../../../components/shared/components/form/Select';\nimport Endpoints from '../../../../redux/actions/endpoints';\nimport _ from 'underscore';\n\nconst MODE = {\n  VIEW: 1,\n  PREEDIT: 2,\n  EDIT: 3\n};\n\nconst _validateForm = values => {\n  const errors = {};\n  if (!values.doctorId) {\n    errors.doctorId = 'Select a doctor';\n  }\n  if (!values.hospitalId) {\n    errors.hospitalId = 'Select a hospital';\n  }\n  if (!values.frontdeskUserId) {\n    errors.frontdeskUserId = 'Select a front-desk user';\n  }\n  return errors;\n};\n\nconst doctorsListPromise = new Promise((resolve, reject) => {\n  fetch(Endpoints.getDoctorMasterList)\n    .then(res => res.json())\n    .then(res => resolve(res))\n    .catch(err => reject(err));\n});\n\nconst hospitalListPromise = new Promise((resolve, reject) => {\n  fetch(Endpoints.getHospitalMasterList)\n    .then(res => res.json())\n    .then(res => resolve(res))\n    .catch(err => reject(err));\n});\n\nclass LinkFrontdeskUserForm extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctorsList: [],\n      hospitalsList: [],\n      frontdeskUsersList: [],\n      mode: MODE.VIEW,\n      showFrontdeskUserField: false\n    };\n  }\n\n  componentDidMount() {\n    this._fetchData();\n  }\n\n  _fetchData() {\n    Promise.all([doctorsListPromise, hospitalListPromise])\n      .then(data => {\n        const doctorsList = data[0].map(doctor => {\n          const { pdNumber, doctorId, name } = doctor;\n          return { label: `${name}(${pdNumber})`, value: doctorId };\n        });\n        const hospitalsList = data[1].map(hospital => {\n          const { pdNumber, name, hospitalId } = hospital;\n          return { label: ` ${name}(${pdNumber})`, value: hospitalId };\n        });\n        this.setState({ doctorsList, hospitalsList });\n      })\n      .catch(err => console.error(err));\n  }\n\n  _handleViewSubmit = ({ doctor, hospital }) => {\n    const doctorId = doctor.value;\n    const hospitalId = hospital.value;\n    fetch(Endpoints.getDoctorFrontdeskUser + `/${doctorId}/${hospitalId}`)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        if (!_.isNull(res) && !_.isEmpty(res)) {\n          //set mode to pre edit\n          const frontdeskUser = `${res.fullName}(${res.mobile})`;\n          // const frontdeskUser = res.userId  ;\n          this.setState(\n            { showFrontdeskUserField: true, mode: MODE.PREEDIT },\n            () =>\n              this.props.initialize({\n                doctor,\n                hospital,\n                frontdeskUser\n              })\n          );\n        } else {\n          //no frontdeskuser available for the selected combination\n          //set mode to edit\n          this.setState({ showFrontdeskUserField: true, mode: MODE.EDIT }, () =>\n            this.props.initialize({\n              doctor,\n              hospital\n            })\n          );\n        }\n      })\n      .catch(err => console.error(err));\n  };\n\n  _handlePreEditSubmit = ({ doctor, hospital, frontdeskUser }) => {\n    this.setState({ mode: MODE.EDIT }, () => {\n      this.props.initialize({ doctor, hospital, frontdeskUser });\n    });\n  };\n\n  _handleEditSubmit = ({ doctor, hospital, frontdeskUser }) => {\n    const doctorId = doctor.value;\n    const hospitalId = hospital.value;\n    const frontdeskUserId = frontdeskUser.value;\n    fetch(Endpoints.linkFrontdeskUser, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ doctorId, hospitalId, frontdeskUserId })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status) {\n          this._resetForm();\n        }\n        this.props.onResponse(res);\n      })\n      .catch(err => console.error(err));\n  };\n\n  _resetForm() {\n    this.setState({ mode: MODE.VIEW, showFrontdeskUserField: false }, () =>\n      this.props.initialize({ doctor: '', hospital: '' })\n    );\n  }\n\n  render() {\n    const { mode } = this.state;\n    const { pristine, submitting, handleSubmit } = this.props;\n    let _handleSubmit = undefined;\n    if (_.isEqual(mode, MODE.VIEW)) {\n      _handleSubmit = this._handleViewSubmit;\n    } else if (_.isEqual(mode, MODE.PREEDIT)) {\n      _handleSubmit = this._handlePreEditSubmit;\n    } else if (_.isEqual(mode, MODE.EDIT)) {\n      _handleSubmit = this._handleEditSubmit;\n    }\n    return (\n      <Col md={6}>\n        <Card>\n          <CardBody>\n            <div className='card__title'>\n              <h5 className='bold-text'>Link Front-Desk User</h5>\n            </div>\n            <form\n              className='form form--horizontal'\n              onSubmit={handleSubmit(_handleSubmit)}\n            >\n              <div className='form__form-group'>\n                <span className='form__form-group-label'>Doctor</span>\n                <div className='form__form-group-field'>\n                  <Field\n                    name='doctor'\n                    component={renderSelectField}\n                    options={this.state.doctorsList}\n                  />\n                </div>\n              </div>\n              <div className='form__form-group'>\n                <span className='form__form-group-label'>Hospital</span>\n                <div className='form__form-group-field'>\n                  <Field\n                    name='hospital'\n                    component={renderSelectField}\n                    options={this.state.hospitalsList}\n                  />\n                </div>\n              </div>\n              {this.state.showFrontdeskUserField && (\n                <div className='form__form-group'>\n                  <span className='form__form-group-label'>\n                    Front-desk User\n                  </span>\n                  <div className='form__form-group-field'>\n                    {_.isEqual(mode, MODE.EDIT) && (\n                      <Field\n                        name='frontdeskUser'\n                        component={renderSelectField}\n                        options={this.props.frontdeskUsersList}\n                      />\n                    )}\n                    {_.isEqual(mode, MODE.VIEW) ||\n                      (_.isEqual(mode, MODE.PREEDIT) && (\n                        <Field\n                          name='frontdeskUser'\n                          component='input'\n                          type='text'\n                          disabled={true}\n                        />\n                      ))}\n                  </div>\n                </div>\n              )}\n\n              <ButtonToolbar className='form__button-toolbar'>\n                <Button\n                  color='primary'\n                  type='submit'\n                  disabled={\n                    (!_.isEqual(mode, MODE.PREEDIT) && pristine) || submitting\n                  }\n                >\n                  {_.isEqual(mode, MODE.VIEW) && 'Check'}\n                  {_.isEqual(mode, MODE.PREEDIT) && 'Edit'}\n                  {_.isEqual(mode, MODE.EDIT) && 'Link'}\n                </Button>\n                <Button\n                  type='button'\n                  onClick={() => this._resetForm()}\n                  disabled={\n                    (!_.isEqual(mode, MODE.PREEDIT) &&\n                      (!_.isEqual(mode, MODE.EDIT) && pristine)) ||\n                    submitting\n                  }\n                >\n                  Clear\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'link_frontdeskuser_form',\n  validate: _validateForm\n})(withTranslation('common')(LinkFrontdeskUserForm));\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CreateFrontdeskUserForm from './components/CreateFrontdeskUserForm';\r\nimport LinkFrontdeskUserForm from './components/LinkFrontdeskUserForm';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\n\r\nconst frontdeskUsersPromise = new Promise((resolve, reject) => {\r\n  fetch(Endpoints.getFrontdeskUsersMasterList)\r\n    .then(res => res.json())\r\n    .then(res => resolve(res))\r\n    .catch(err => reject(err));\r\n});\r\n\r\nclass CreateFrontdeskUsersPage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayToast: false,\r\n      toastMessage: '',\r\n      frontdeskUsers: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchFrontdeskUsers();\r\n  }\r\n\r\n  _fetchFrontdeskUsers() {\r\n    Promise.all([frontdeskUsersPromise])\r\n      .then(data => {\r\n        const frontdeskUsers = data[0].map(fdu => {\r\n          const { frontdeskUserId, name, mobile } = fdu;\r\n          return { label: `${mobile} - ${name}`, value: frontdeskUserId };\r\n        });\r\n        this.setState({ frontdeskUsers });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  _displayToast = toastMessage => {\r\n    this.setState({\r\n      displayToast: true,\r\n      toastMessage\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className='dashboard'>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className='page-title'>Front-Desk User</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <CreateFrontdeskUserForm\r\n            onResponse={res => {\r\n              this._displayToast(res.message);\r\n              //refresh frontdesk users\r\n              if (res.status) {\r\n                //for populating the select field in LinkFrontdeskUser form\r\n                const frontdeskUsers = res.frontdeskUsers.map(fdu => {\r\n                  const { frontdeskUserId, name, mobile } = fdu;\r\n                  return {\r\n                    label: `${name}(${mobile})`,\r\n                    value: frontdeskUserId\r\n                  };\r\n                });\r\n                this.setState({ frontdeskUsers });\r\n              }\r\n            }}\r\n          />\r\n          <LinkFrontdeskUserForm\r\n            frontdeskUsersList={this.state.frontdeskUsers}\r\n            onResponse={res => {\r\n              if (res.status) {\r\n                this._displayToast('Linked successfully');\r\n              }\r\n            }}\r\n          />\r\n        </Row>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          autoHideDuration={3000}\r\n          open={this.state.displayToast}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id'\r\n          }}\r\n          onClose={() => this.setState({ displayToast: false })}\r\n          message={<span id='message-id'>{this.state.toastMessage}</span>}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateFrontdeskUsersPage;\r\n","import React, { Component } from \"react\";\nimport { Card, CardBody, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\nimport UserBlockToggle from \"../../../../components/user/userBlockToggle\";\nimport * as Action from \"../../../../redux/actions/frontdeskActions\";\n\nclass FrontdeskUsersTable extends Component {\n  componentWillMount() {\n    this.props.getFdUserList();\n  }\n  getColumns = props => {\n    return [\n      { id: \"fullName\", numeric: false, disablePadding: true, label: \"Name\" },\n      {\n        id: \"username\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Contact\"\n      },\n      {\n        id: \"action\",\n        label: \"Block/Unblock\",\n        render: row => (\n          <UserBlockToggle\n            data={row}\n            status={row.status}\n            id={row._id}\n            loadData={() => props.refreshTable()}\n            afterToggle={value => props.onActionComplete(value)}\n          />\n        )\n      }\n    ];\n  };\n  render() {\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            {/* <div className=\"card__title\">\n            <h5 className=\"bold-text\">Previous Announcements</h5>\n          </div> */}\n            <MaterialTable\n              columns={this.getColumns(this.props)}\n              data={this.props.fdUserList}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const fduserState = state.fduser;\n  console.log();\n  return {\n    fdUserList:\n      fduserState.fdUserList && fduserState.fdUserList.users\n        ? fduserState.fdUserList.users\n        : []\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getFdUserList: () => {\n      dispatch(Action.getFdUserList());\n    }\n  };\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FrontdeskUsersTable);\n","import { get } from \"./fetch\";\nimport Endpoint from \"./endpoints\";\n\nexport function getFdUserList() {\n  const endpoint = Endpoint.getFrontDeskUsers;\n  return function(dispatch) {\n    return get(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        dispatch({\n          type: \"RESPONSE_FRONTDESK_USER_LIST\",\n          data\n        });\n      });\n  };\n}\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport FrontdeskUsersTable from './components/FrontdeskUsersTable';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass ViewFrontdeskUsersPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      frontdeskUsersList: [],\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchData();\r\n  }\r\n\r\n  _fetchData() {\r\n    fetch(Endpoints.getFrontdeskList)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({ frontdeskUsersList: res.users });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  _onActionComplete(displayMessage) {\r\n    console.log(displayMessage)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">Front-Desk Users</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <FrontdeskUsersTable\r\n            data={this.state.frontdeskUsersList}\r\n            refreshTable={() => this._fetchData()}\r\n            onActionComplete={value => this._onActionComplete(value)}\r\n          />\r\n        </Row>\r\n        {this.state.displayToast && (\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id'\r\n            }}\r\n            onClose={() => this.setState({ displayToast: false })}\r\n            message={<span id=\"message-id\">{this.state.displayMessage}</span>}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewFrontdeskUsersPage;\r\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport MaterialTable from '../../../../components/containers/Tables/MaterialTable';\nimport CloseCircleIcon from 'mdi-react/CloseCircleIcon';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport TicketConfirmation from 'mdi-react/TicketPercentIcon';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport { Link } from 'react-router-dom';\nimport { ROUTE_VIEW_BOOKING_DETAIL } from '../../../../constants/routes';\n\nconst ViewBookingsTable = props => {\n  const columns = [\n    {\n      id: 'bookingId',\n      label: 'Booking ID'\n    },\n    {\n      id: 'tokenDate',\n      label: 'Date'\n    },\n\n    {\n      id: 'status',\n      label: 'Status',\n      render: row => {\n        let icon = null;\n        switch (row.status) {\n          case 'CANCELLED':\n            icon = <CloseCircleIcon color=\"#ff1744\" />;\n            break;\n          case 'BOOKED':\n            icon = <TicketConfirmation color=\"#f57f17\" />;\n            break;\n          case 'VISITED':\n            icon = <CheckIcon color=\"#2e7d32\" />;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\tbreak;\n        }\n        return icon;\n      }\n    },\n    {\n      id: 'username',\n      label: 'Username'\n    },\n    {\n      id: 'doctorName',\n      label: 'Doctor Name'\n    },\n    {\n      id: 'location',\n      label: 'Location'\n    },\n    {\n      id: 'bookingId',\n      label: 'View',\n      render: row => {\n        return (\n          <Link\n            to={{\n              pathname: ROUTE_VIEW_BOOKING_DETAIL,\n              state: { bookingId: row.bookingId }\n            }}\n          >\n            <EyeIcon color=\"#304ffe\" />\n          </Link>\n        );\n      }\n    }\n  ];\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <MaterialTable columns={columns} data={props.data} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default ViewBookingsTable;\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewBookingsTable from './components/ViewBookingsTable';\r\nimport { BOOKINGS } from '../../../constants/strings';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Moment from 'moment-timezone';\r\n\r\nclass ViewBookingsTablePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookings: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchData();\r\n  }\r\n\r\n  _fetchData() {\r\n    fetch(Endpoints.getBookings)\r\n      .then(res => res.json())\r\n      .then(bookings => {\r\n        const destructedBookings = bookings.map(booking => {\r\n          const {\r\n            doctorDetails,\r\n            hospitalDetails,\r\n            userDetails,\r\n            tokenDate\r\n          } = booking;\r\n          return {\r\n            ...booking,\r\n            doctorName: doctorDetails.fullName,\r\n            specialization: doctorDetails.specialization,\r\n            hospitalName: hospitalDetails.name,\r\n            location: hospitalDetails.location,\r\n            username: userDetails.fullName,\r\n            tokenDate: Moment(tokenDate)\r\n              .tz('Asia/Calcutta')\r\n              .format('DD-MM-YYYY')\r\n          };\r\n        });\r\n        this.setState({ bookings: destructedBookings });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.bookings);\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{BOOKINGS}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <ViewBookingsTable\r\n            data={this.state.bookings}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewBookingsTablePage\r\n","import React from 'react';\n\nexport default props => (\n  <div className=\"form__form-group\">\n    <span className=\"form__form-group-label\">{props.label}</span>\n    <div className=\"form__form-group-field\">\n      <input type=\"text\" value={props.value} disabled />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\nimport Moment from 'moment-timezone';\nimport _ from 'underscore';\n\nconst BookingDetailCard = props => {\n  const { tokenDate, token, bookedTimeStamp, status } = props.data;\n  let statusColor = 'green';\n  switch (status) {\n    case 'CANCELLED':\n      statusColor = 'red';\n      break;\n    case 'BOOKED':\n      statusColor = 'orange';\n      break;\n    case 'VISITED':\n      statusColor = 'green';\n\t\t\tbreak;\n\t\tdefault: \n\t\t\tbreak;\n  }\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Booking Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled\n                label=\"Token Date\"\n                value={Moment(tokenDate).format('DD-MM-YYYY')}\n              />\n              {!_.isEqual(token.number, 0) && (\n                <TextInputDisabled label=\"Token Number\" value={token.number} />\n              )}\n              <TextInputDisabled label=\"Token Type\" value={token.type} />\n              {!_.isEqual(token.number, 0) && (\n                <TextInputDisabled label=\"Token Time\" value={token.time} />\n              )}\n              <TextInputDisabled\n                label=\"Booked Time\"\n                value={Moment(bookedTimeStamp)\n                  .tz('Asia/Calcutta')\n                  .format('DD-MM-YYYY HH:mm:ss')}\n              />\n              <div style={{ width: '100%', textAlign: 'center' }}>\n                <h3 className=\"bold-text\" style={{ color: statusColor }}>\n                  {status}\n                </h3>\n              </div>\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default BookingDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\nimport Moment from 'moment';\n\nconst UserDetailCard = props => {\n  const { fullName, username, dateOfBirth, gender } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">User Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Username\" value={fullName} />\n              <TextInputDisabled label=\"Mobile\" value={username} />\n              <TextInputDisabled\n                label=\"DOB\"\n                value={Moment(dateOfBirth).format('DD-MM-YYYY')}\n              />\n              <TextInputDisabled label=\"Gender\" value={gender} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default UserDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\n\nconst DoctorDetailCard = props => {\n  const {\n    fullName,\n    specialization,\n    yearsOfExperience,\n    degree,\n    username,\n    gender\n  } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Doctor Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Doctor Name\" value={fullName} />\n              <TextInputDisabled\n                label=\"Specialization\"\n                value={specialization}\n              />\n              <TextInputDisabled\n                label=\"Years of Experience\"\n                value={yearsOfExperience}\n              />\n              <TextInputDisabled label=\"Degree\" value={degree} />\n              <TextInputDisabled label=\"Mobile\" value={username} />\n              <TextInputDisabled label=\"Gender\" value={gender} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default DoctorDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\n\nconst HospitalDetailCard = props => {\n  const { name, address, location, pincode } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Hospital Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Hospital Name\" value={name} />\n              <TextInputDisabled label=\"Address\" value={address} />\n              <TextInputDisabled label=\"Location\" value={location} />\n              <TextInputDisabled label=\"Pin Code\" value={pincode} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default HospitalDetailCard;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport BookingDetailCard from './components/BookingDetailCard';\nimport UserDetailCard from './components/UserDetailsCard';\nimport DoctorDetailCard from './components/DoctorDetailsCard';\nimport HospitalDetailCard from './components/HospitalDetailsCard';\nimport Endpoints from '../../../redux/actions/endpoints';\nimport _ from 'underscore';\n\nclass ViewBookingDetailPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookingDetail: null\n    };\n  }\n\n  componentDidMount() {\n    this._fetchData();\n  }\n\n  _fetchData() {\n    fetch(\n      Endpoints.getBookingDetail + '/' + this.props.location.state.bookingId\n    )\n      .then(res => res.json())\n      .then(bookingDetail => {\n        console.log(bookingDetail);\n        this.setState({ bookingDetail });\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    const { bookingDetail } = this.state;\n    return (\n      <Container className=\"dashboard\">\n        <Row>\n          <Col md={12}>\n            <h3 className=\"page-title\">\n              {'Booking ID: ' + this.props.location.state.bookingId}\n            </h3>\n          </Col>\n        </Row>\n        {!_.isNull(this.state.bookingDetail) && (\n          <div>\n            <Row>\n              <BookingDetailCard data={bookingDetail} />\n              <UserDetailCard data={bookingDetail.userDetails} />\n            </Row>\n            <Row>\n              <DoctorDetailCard data={bookingDetail.doctorDetails} />\n              <HospitalDetailCard data={bookingDetail.hospitalDetails} />\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default ViewBookingDetailPage;\n","import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { ButtonToolbar, Button } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass CustomerCareForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditMode: false,\r\n      contactNumber: '',\r\n      contactEmail: '',\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchSupportDetails();\r\n  }\r\n\r\n  _fetchSupportDetails() {\r\n    fetch(Endpoints.getSupportDetails)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const { contactNumber, contactEmail } = res;\r\n        this.setState({ contactNumber, contactEmail }, () =>\r\n          this.props.initialize({\r\n            contactNumber,\r\n            contactEmail\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  _handleSubmit = ({ contactNumber, contactEmail }) => {\r\n    this._updateSupportDetails(contactNumber, contactEmail);\r\n  };\r\n\r\n  _handleEdit = () => this.setState({ isEditMode: true });\r\n\r\n  _updateSupportDetails(contactNumber, contactEmail) {\r\n    fetch(Endpoints.setSupportDetails, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT',\r\n      body: JSON.stringify({ contactNumber, contactEmail })\r\n    }).then(res => {\r\n      if (res.status) {\r\n        this.setState({\r\n          displayToast: true,\r\n          displayMessage: 'Customer Care details updated successfully',\r\n          isEditMode: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          displayToast: false,\r\n          displayMessage: 'Customer Care details updation failure.'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    const { isEditMode } = this.state;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>Contact Details</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={\r\n                this.state.isEditMode\r\n                  ? handleSubmit(this._handleSubmit)\r\n                  : handleSubmit(this._handleEdit)\r\n              }\r\n            >\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Contact Number</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='contactNumber'\r\n                    component='input'\r\n                    type='text'\r\n                    placeholder='Contact Number'\r\n                    disabled={!isEditMode}\r\n                    minLength={10}\r\n                    maxLength={10}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Contact Email</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='contactEmail'\r\n                    component='input'\r\n                    type='email'\r\n                    placeholder='Contact Email'\r\n                    disabled={!isEditMode}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button color='primary'>\r\n                  {this.state.isEditMode ? 'Save' : 'Edit'}\r\n                </Button>\r\n              </ButtonToolbar>\r\n              {this.state.displayToast && (\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                  autoHideDuration={3000}\r\n                  open={this.state.displayToast}\r\n                  ContentProps={{\r\n                    'aria-describedby': 'message-id'\r\n                  }}\r\n                  onClose={() => this.setState({ displayToast: false })}\r\n                  message={\r\n                    <span id='message-id'>{this.state.displayMessage}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({ form: 'customercare_form' })(\r\n  withTranslation('common')(CustomerCareForm)\r\n);\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport CustomerCareForm from './components/CustomerCareForm';\r\nimport { CUSTOMER_CARE } from '../../constants/strings';\r\n\r\nconst CustomerCarePage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{CUSTOMER_CARE}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <CustomerCareForm />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CustomerCarePage;\r\n","import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { ButtonToolbar, Button } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { CHANGE_PASSWORD } from '../../../constants/strings';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport EyeIcon from 'mdi-react/EyeIcon';\r\n\r\nclass ChangePassword extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayToast: false,\r\n      displayMessage: '',\r\n      showPassword: false\r\n    };\r\n  }\r\n\r\n  _handleSubmit = ({ currentPassword, newPassword }) => {\r\n    fetch(Endpoints.changePassword, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT',\r\n      body: JSON.stringify({ currentPassword, newPassword })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState(\r\n          { displayToast: true, displayMessage: res.message },\r\n          () => {\r\n            if (res.status) {\r\n              this.props.reset();\r\n            }\r\n          }\r\n        )\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  showPassword = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit } = this.props;\r\n    const { showPassword } = this.state;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>{CHANGE_PASSWORD}</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={handleSubmit(this._handleSubmit)}\r\n            >\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Current Password</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='currentPassword'\r\n                    component='input'\r\n                    type='password'\r\n                    placeholder='Current Password'\r\n                    minLength={6}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>New Passoword</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='newPassword'\r\n                    component='input'\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder='New password'\r\n                    minLength={6}\r\n                  />\r\n                  <button\r\n                    className={`form__form-group-button${\r\n                      showPassword ? ' active' : ''\r\n                    }`}\r\n                    onClick={e => this.showPassword(e)}\r\n                    type='button'\r\n                  >\r\n                    <EyeIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button color='primary' type='submit'>\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  type='button'\r\n                  onClick={reset}\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </ButtonToolbar>\r\n              {this.state.displayToast && (\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                  autoHideDuration={3000}\r\n                  open={this.state.displayToast}\r\n                  ContentProps={{\r\n                    'aria-describedby': 'message-id'\r\n                  }}\r\n                  onClose={() => this.setState({ displayToast: false })}\r\n                  message={\r\n                    <span id='message-id'>{this.state.displayMessage}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({ form: 'change_password_form' })(\r\n  withTranslation('common')(ChangePassword)\r\n);\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ChangePasswordCard from './components/ChangePasswordCard';\r\n\r\nconst SettingsPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Settings</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ChangePasswordCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Layout from '../Layout/index';\r\nimport MainWrapper from './MainWrapper';\r\n\r\nimport LogIn from '../LogIn/index';\r\nimport ViewUsers from '../UserManagement/ViewUsers/index';\r\nimport CreateDoctor from '../DoctorManagement/CreateDoctor/index';\r\nimport EditDoctor from '../DoctorManagement/CreateDoctor/editDoctor';\r\nimport ViewDoctors from '../DoctorManagement/ViewDoctors/index';\r\nimport CreateHospital from '../HospitalManagement/CreateHospital/index';\r\nimport EditHospitalPage from '../HospitalManagement/CreateHospital/editHospital';\r\nimport ViewHospitals from '../HospitalManagement/ViewHospitals/index';\r\nimport CreateSchedule from '../ScheduleManagement/CreateSchedule/index';\r\nimport EditSchedulePage from '../ScheduleManagement/CreateSchedule/editSchedule';\r\nimport ViewSchedules from '../ScheduleManagement/ViewSchedule/index';\r\nimport Announcement from '../Announcement';\r\nimport CreateFrontdeskUser from '../FrontdeskUsers/CreateFrontdeskUser';\r\nimport ViewFrontdeskUser from '../FrontdeskUsers/ViewFrontdeskUser';\r\nimport ViewBookings from '../Bookings/ViewBookings';\r\nimport ViewBookingDetail from '../Bookings/ViewBookingDetail';\r\nimport CustomerCare from '../CustomerCare';\r\nimport Settings from '../SettingsManagement'\r\n\r\nimport {\r\n\tROUTE_CREATE_DOCTOR,\r\n\tROUTE_EDIT_DOCTOR,\r\n  ROUTE_VIEW_DOCTORS,\r\n\tROUTE_CREATE_HOSPITAL,\r\n\tROUTE_EDIT_HOSPITAL,\r\n  ROUTE_VIEW_HOSPITALS,\r\n  ROUTE_CREATE_SCHEDULE,\r\n  ROUTE_VIEW_SCHEDULES,\r\n  ROUTE_VIEW_USERS,\r\n  ROUTE_ANNOUNCEMENT,\r\n  ROUTE_CREATE_FRONTDESK_USER,\r\n  ROUTE_VIEW_FRONTDESK_USER,\r\n  ROUTE_VIEW_BOOKINGS,\r\n  ROUTE_VIEW_BOOKING_DETAIL,\r\n\tROUTE_CUSTOMER_CARE,\r\n\tROUTE_EDIT_SCHEDULE,\r\n  ROUTE_SETTINGS\r\n} from '../../constants/routes';\r\n\r\nconst Pages = () => (\r\n  <Switch>\r\n    <Route path={ROUTE_VIEW_USERS} component={ViewUsers} />\r\n    <Route path={ROUTE_CREATE_DOCTOR} component={CreateDoctor} />\r\n\t\t<Route path={ROUTE_EDIT_DOCTOR} component={EditDoctor} />\r\n    <Route path={ROUTE_VIEW_DOCTORS} component={ViewDoctors} />\r\n    <Route path={ROUTE_CREATE_HOSPITAL} component={CreateHospital} />\r\n\t\t<Route path={ROUTE_EDIT_HOSPITAL} component={EditHospitalPage} />\r\n    <Route path={ROUTE_VIEW_HOSPITALS} component={ViewHospitals} />\r\n    <Route path={ROUTE_CREATE_SCHEDULE} component={CreateSchedule} />\r\n\t\t<Route path={ROUTE_EDIT_SCHEDULE} component={EditSchedulePage} />\r\n    <Route path={ROUTE_VIEW_SCHEDULES} component={ViewSchedules} />\r\n    <Route path={ROUTE_ANNOUNCEMENT} component={Announcement} />\r\n    <Route path={ROUTE_CREATE_FRONTDESK_USER} component={CreateFrontdeskUser} />\r\n    <Route path={ROUTE_VIEW_FRONTDESK_USER} component={ViewFrontdeskUser} />\r\n    <Route path={ROUTE_VIEW_BOOKINGS} component={ViewBookings} />\r\n    <Route path={ROUTE_VIEW_BOOKING_DETAIL} component={ViewBookingDetail}  />\r\n    <Route path={ROUTE_CUSTOMER_CARE} component={CustomerCare}  />\r\n    <Route path={ROUTE_SETTINGS} component={Settings} />\r\n  </Switch>\r\n);\r\n\r\nconst wrappedRoutes = () => (\r\n  <div>\r\n    <Layout />\r\n    <div className='container__wrap' style={{height: '100%'}}>\r\n      <Route path='/pages' component={Pages} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Router = () => (\r\n  <MainWrapper>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={LogIn} />\r\n        <Route exact path='/log_in' component={LogIn} />\r\n        <Route path='/' component={wrappedRoutes} />\r\n      </Switch>\r\n    </main>\r\n  </MainWrapper>\r\n);\r\n\r\nexport default Router;\r\n","import {\r\n  CHANGE_THEME_TO_DARK,\r\n  CHANGE_THEME_TO_LIGHT,\r\n} from '../actions/themeActions';\r\n\r\nconst initialState = {\r\n  className: 'theme-light',\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_THEME_TO_DARK:\r\n      return { className: 'theme-dark' };\r\n    case CHANGE_THEME_TO_LIGHT:\r\n      return { className: 'theme-light' };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHANGE_SIDEBAR_VISIBILITY,\r\n  CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n} from '../actions/sidebarActions';\r\n\r\nconst initialState = {\r\n  show: false,\r\n  collapse: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_SIDEBAR_VISIBILITY:\r\n      return { ...state, collapse: !state.collapse };\r\n    case CHANGE_MOBILE_SIDEBAR_VISIBILITY:\r\n      return { ...state, show: !state.show };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { reducer as reduxFormReducer } from \"redux-form\";\r\nimport {\r\n  sidebarReducer,\r\n  themeReducer,\r\n  doctorReducer,\r\n  hospitalReducer,\r\n  userReducer,\r\n  scheduleReducer,\r\n  fdUserReducer\r\n} from \"../../redux/reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducer = combineReducers({\r\n  form: reduxFormReducer, // mounted under \"form\",\r\n  theme: themeReducer,\r\n  sidebar: sidebarReducer,\r\n  doctor: doctorReducer,\r\n  hospital: hospitalReducer,\r\n  user: userReducer,\r\n  schedule: scheduleReducer,\r\n  fduser: fdUserReducer\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'RESPONSE_DOCTORLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SPECIALIZATIONLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspecialization: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_DOCTORDETAIL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorDetail: action.data\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t case 'RESPONSE_HOSPITALLIST':\n\t\treturn {\n\t\t\t...state,\n\t\t hospitalList: action.data,\n\t\t}\n\t\tcase 'RESPONSE_HOSPITALDETAIL':\n\t\treturn {\n\t\t\t...state,\n\t\t hospitalDetail: action.data,\n\t\t}\n\t\t\n\t default:\n\t\treturn state\n\t}\n}\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t case 'RESPONSE_CUSTOMERLIST':\n\t\treturn {\n\t\t\t...state,\n\t\t customerList: action.data,\n\t\t}\n\t default:\n\t\treturn state\n\t}\n}\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'RESPONSE_DOCTOR_MASTERLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorMasterList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_HOSPITAL_MASTERLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thospitalMasterList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SCHEDULE_LIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduleList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SCHEDULE_DETAIL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduleDetail: action.data\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"RESPONSE_FRONTDESK_USER_LIST\":\n      return {\n        ...state,\n        fdUserList: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App/App';\r\n\r\nrender(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n","export const CHANGE_THEME_TO_DARK = 'CHANGE_THEME_TO_DARK';\r\nexport const CHANGE_THEME_TO_LIGHT = 'CHANGE_THEME_TO_LIGHT';\r\n\r\nexport function changeThemeToDark() {\r\n  return {\r\n    type: CHANGE_THEME_TO_DARK,\r\n  };\r\n}\r\n\r\nexport function changeThemeToLight() {\r\n  return {\r\n    type: CHANGE_THEME_TO_LIGHT,\r\n  };\r\n}\r\n","export const CHANGE_SIDEBAR_VISIBILITY = 'CHANGE_SIDEBAR_VISIBILITY';\r\nexport const CHANGE_MOBILE_SIDEBAR_VISIBILITY = 'CHANGE_MOBILE_SIDEBAR_VISIBILITY';\r\n\r\nexport function changeSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n\r\nexport function changeMobileSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n"],"sourceRoot":""}