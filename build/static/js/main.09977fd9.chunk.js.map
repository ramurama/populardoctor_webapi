{"version":3,"sources":["containers/App/App.jsx","containers/App/ScrollToTop.jsx","containers/Layout/topbar/TopbarSidebarButton.jsx","redux/actions/fetch.js","redux/actions/endpoints.js","containers/Layout/topbar/TopbarMenuLink.jsx","redux/actions/loginActions.js","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarCategory.jsx","constants/strings.js","containers/Layout/sidebar/SidebarContent.jsx","constants/routes.js","shared/prop-types/ReducerProps.js","containers/Layout/sidebar/Sidebar.jsx","containers/Layout/index.jsx","containers/App/MainWrapper.jsx","containers/LogIn/components/LogInForm.jsx","containers/LogIn/index.jsx","components/containers/Tables/MaterialTable/components/MatTableHead.jsx","constants/utils.js","components/containers/Tables/MaterialTable/components/MatTable.jsx","components/containers/Tables/MaterialTable/index.jsx","components/user/userBlockToggle.js","redux/actions/userActions.js","containers/UserManagement/ViewUsers/container/ViewUsersContainer.jsx","containers/UserManagement/ViewUsers/index.jsx","redux/actions/doctorActions.js","components/Form/FormValidation/components/validate.js","containers/DoctorManagement/CreateDoctor/constants/doctorForm.js","components/shared/components/form/Select.jsx","components/shared/components/form/DatePicker.jsx","components/shared/components/form/DropZone.jsx","containers/DoctorManagement/CreateDoctor/components/ProfileImageUploadForm.jsx","containers/DoctorManagement/CreateDoctor/components/CreateDoctorCard.jsx","containers/DoctorManagement/CreateDoctor/index.jsx","containers/DoctorManagement/CreateDoctor/editDoctor.jsx","containers/DoctorManagement/ViewDoctors/container/ViewDoctorsContainer.jsx","containers/DoctorManagement/ViewDoctors/index.jsx","containers/HospitalManagement/CreateHospital/constants/hospitalForm.js","containers/HospitalManagement/CreateHospital/components/CreateHospitalCard.jsx","redux/actions/hospitalActions.js","containers/HospitalManagement/CreateHospital/index.jsx","containers/HospitalManagement/CreateHospital/editHospital.js","containers/HospitalManagement/ViewHospitals/container/ViewHospitalsContainer.jsx","containers/HospitalManagement/ViewHospitals/index.jsx","containers/ScheduleManagement/CreateSchedule/constants/AddScheduleConfig.js","redux/actions/scheduleActions.js","components/shared/components/form/TimePicker.jsx","components/shared/components/form/ToggleButton.jsx","containers/ScheduleManagement/CreateSchedule/components/CreateScheduleCard.jsx","containers/ScheduleManagement/CreateSchedule/index.jsx","containers/ScheduleManagement/CreateSchedule/editSchedule.jsx","containers/ScheduleManagement/ViewSchedule/container/ViewSchedulesContainer.jsx","containers/ScheduleManagement/ViewSchedule/index.jsx","containers/Announcement/components/commons.js","containers/Announcement/components/AnnouncementForm.jsx","containers/Announcement/components/AnnouncementsTable.jsx","containers/Announcement/index.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/components/CreateFrontdeskUserForm.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/components/LinkFrontdeskUserForm.jsx","containers/FrontdeskUsers/CreateFrontdeskUser/index.jsx","containers/FrontdeskUsers/ViewFrontdeskUser/components/FrontdeskUsersTable.jsx","containers/FrontdeskUsers/ViewFrontdeskUser/index.jsx","containers/Bookings/ViewBookings/components/ViewBookingsTable.jsx","containers/Bookings/ViewBookings/index.jsx","components/custom/TextInputDisabled.jsx","containers/Bookings/ViewBookingDetail/components/BookingDetailCard.jsx","containers/Bookings/ViewBookingDetail/components/UserDetailsCard.jsx","containers/Bookings/ViewBookingDetail/components/DoctorDetailsCard.jsx","containers/Bookings/ViewBookingDetail/components/HospitalDetailsCard.jsx","containers/Bookings/ViewBookingDetail/index.jsx","containers/CustomerCare/components/CustomerCareForm.jsx","containers/CustomerCare/index.jsx","containers/SettingsManagement/components/ChangePasswordCard.jsx","containers/SettingsManagement/index.jsx","containers/App/Router.jsx","redux/reducers/themeReducer.js","redux/reducers/sidebarReducer.js","containers/App/store.js","redux/reducers/doctorReducer.js","redux/reducers/hospitalReducers.js","redux/reducers/userReducer.js","redux/reducers/scheduleReducers.js","index.jsx","redux/actions/themeActions.js","redux/actions/sidebarActions.js"],"names":["App","_this","Object","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_logurvp_Documents_GitHub_local_populardoctor_web_v2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","loading","loaded","_this2","window","addEventListener","setState","setTimeout","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_redux__WEBPACK_IMPORTED_MODULE_7__","store","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_ScrollToTop__WEBPACK_IMPORTED_MODULE_13__","react__WEBPACK_IMPORTED_MODULE_5__","className","concat","fill","d","_Router__WEBPACK_IMPORTED_MODULE_11__","Component","hot","module","ScrollToTop","prevProps","props","location","pathname","scrollTo","children","PureComponent","withRouter","icon","process","TopbarSidebarButton","_this$props","changeMobileSidebarVisibility","changeSidebarVisibility","react_default","type","onClick","src","alt","post","url","body","fetch","headers","Accept","Content-Type","method","JSON","stringify","put","get","endpoints","login","loginStatus","logout","sendOTP","doctorList","createDoctor","updateDoctor","uploadProfileImage","deleteProfileImage","getSpecializations","createHospital","updateHospital","createSchedule","getDoctorMasterList","getHospitalMasterList","getFrontdeskUsersMasterList","createFrontdeskUser","getDoctorFrontdeskUser","linkFrontdeskUser","getCustomerList","getScheduleList","getScheduleDetail","blockUser","unblockUser","getHospitalList","getHospitalDetail","getDoctorDetail","getScheduleDoctors","getScheduleHospitals","sendAnnouncement","getAnnouncements","getBookings","getBookingDetail","getSupportDetails","setSupportDetails","changePassword","updateSchedule","deleteSchedule","TopbarMenuLinks","_handleLogout","Endpoint","then","response","json","data","console","log","title","path","Link","to","Ava","TopbarProfile","classCallCheck","possibleConstructorReturn","getPrototypeOf","toggle","prevState","collapse","ChevronDownIcon_default","Collapse","isOpen","TopbarMenuLink_TopbarMenuLinks","Topbar","topbar_TopbarSidebarButton","style","alignSelf","TopbarProfile_TopbarProfile","SidebarLink","_ref","newLink","route","NavLink","activeClassName","Badge","defaultProps","SidebarCategory","isNew","categoryClass","classNames","sidebar__category-wrap","sidebar__category-wrap--open","SidebarContent","hideSidebar","SidebarCategory_SidebarCategory","sidebar_SidebarLink","position","bottom","string","PropTypes","shape","Sidebar","show","bool","changeToDark","changeToLight","sidebar","sidebarClass","sidebar--show","sidebar--collapse","react_smooth_scrollbar_default","sidebar_SidebarContent","Layout","dispatch","changeThemeToDark","changeThemeToLight","layoutClass","layout","layout--collapse","topbar_Topbar","sidebar_Sidebar","connect","materialTheme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","MainWrapper","theme","styles","LogInForm","showPassword","e","preventDefault","_handleSubmit","saveData","username","password","res","context","router","history","push","status","_this3","handleSubmit","onSubmit","AccountOutlineIcon_default","Field","name","component","placeholder","KeyVariantIcon_default","EyeIcon_default","href","Button","contextTypes","func","isRequired","reduxForm","form","LogIn","components_LogInForm","MatTableHead","createSortHandler","property","event","onRequestSort","onSelectAllClick","order","orderBy","numSelected","rowCount","columns","showCheckbox","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","onChange","map","row","key","id","align","numeric","sortDirection","TableSortLabel_default","active","direction","whiteSpace","label","UNDERSCORE","require","tableBody","overflow","height","MatTable","selected","page","rowsPerPage","handleRequestSort","stateOrderBy","stateOrder","handleSelectAllClick","n","handleClick","selectedIndex","indexOf","newSelected","slice","length","handleChangePage","handleChangeRowsPerPage","target","value","handleDeleteSelected","copyData","toConsumableArray","_loop","i","filter","obj","isSelected","_this$state2","_data","sortBy","chain","reverse","getSort","Table_default","MatTableHead_MatTableHead","TableBody_default","classes","_id","role","aria-checked","tabIndex","scope","render","TableFooter_default","TablePagination_default","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","MaterialTable","MatTable_MatTable","React","UserBlockToggle","_handleToggle","userId","loadData","toolText","color","Tooltip_default","Switch_default","Action","ViewUsersContainer","_onLoad","getUserList","_handleNotification","objectSpread","_renderToggle","userBlockToggle","afterToggle","userDataList","disablePadding","text","Col","md","Card","CardBody","Tables_MaterialTable","object","userState","user","customerList","isEmpty","users","totalCount","totalRecords","endpoint","ViewUsersPage","Container","Row","container_ViewUsersContainer","getSpecialization","validate","values","errors","email","test","select","emptyField","addDoctor","fullName","errorText","degree","mobile","latitude","longitude","yearsOfExperience","profileContent","SelectField","handleChange","selectedOption","setIdWithValue","list","forEach","options","optionList","renderId","react_select_esm","clearable","classNamePrefix","RenderSelectField","input","meta","width","Select_SelectField","assign","touched","error","DatePickerField","build_default","dateFormat","date","renderDatePickerField","DatePicker_DatePickerField","DropZoneField","onDrop","bind","assertThisInitialized","file","fl","preview","URL","createObjectURL","index","val","_this$props2","customHeight","files","react_dropzone_dist_es","accept","multiple","fileToUpload","getRootProps","getInputProps","Array","isArray","removeFile","renderDropZoneField","DropZone_DropZoneField","ProfileImageUploadForm","profileImage","formData","FormData","append","doctorPdNumber","EndPoints","reset","onUploadComplete","catch","err","onRef","undefined","ReactDOM","findDOMNode","dispatchEvent","Event","ref","element","withTranslation","renderField","disabled","_ref$meta","CreateDoctorCard","_handleChange","_ref2","_ref2$fullName","_ref2$mobile","_ref2$yearsOfExperien","_ref2$degree","_ref2$dateOfBirth","dateOfBirth","_ref2$specialization","specialization","_ref2$gender","gender","_ref2$profileContent","editValue","initialValues","keys","validateTextData","validateOtherFields","_mobileNumberValidate","SubmissionError","isUpdate","doctorId","pdNumber","toastMessage","message","displayToast","disableButtonActions","profileImageUploader","upload","toString","_parseList","dataList","handleDOBChange","_handleClose","doProfileImageUpload","showProfileImageUploader","pathName","includes","split","clearDoctorDetail","pristine","submitting","specializations","sm","renderDatePicker","renderSelectField","float","ButtonToolbar","flexDirection","justifyContent","paddingLeft","resizeMode","Endpoints","alert","marginTop","components_ProfileImageUploadForm","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","open","ContentProps","aria-describedby","onClose","enableReinitialize","destroyOnUnmount","doctorState","doctor","defaultData","doctorDetail","CreateDoctorPage","components_CreateDoctorCard","EditDoctor","ViewDoctorsContainer","getDoctorList","renderDoctorNameCell","display","doctorDetails","_handleEditHospital","class","doctors","ExamplePage","container_ViewDoctorsContainer","addHospital","streetName","building","address","landmark","pincode","CreateHospitalCard","_ref2$name","_ref2$streetName","_ref2$building","_ref2$location","_ref2$landmark","_ref2$pincode","_ref2$latitude","_ref2$longitude","_validatePincode","latLng","hospitalPdNumber","update","save","hospitalId","clearHospitalDetail","snapshot","size","ContentSaveIcon_default","hospitalState","hospital","hospitalDetail","parse","CreateHospitalPage","components_CreateHospitalCard","EditHospitalPage","ViewHospitalsContainer","_renderOperation","hospitalList","hospitals","ViewHospitalPage","container_ViewHospitalsContainer","addSchedule","weekday","fromTime","dbKey","toTime","scheduleId","TimePickerField","setOpen","toggleOpen","enableTime","noCalendar","renderTimePickerField","timeMode","TimePicker_TimePickerField","ToggleButtonField","defaultChecked","renderToggleButtonField","ToggleButton_ToggleButtonField","moment","weekDays","TokenType","fastrack","number","time","emptyToken","startTime","endTime","showSnackBar","snackBarMessage","CreateScheduleCard","_decodeTokenList","tokenList","isFastrack","isEqual","_ref2$doctor","_ref2$hospital","_ref2$weekday","_ref2$isFastrack","_ref2$fromTime","_ref2$toTime","_updateSchedule","_addSchedule","deleteTokens","token","addTokens","_parseToken","_validateScheduleFields","_validateTokens","tokens","errorToken","format","findIdInList","parseInt","_handleAddToken","tokenNo","tokenType","tokenTime","_handleDelete","result","_handleDeleteToken","updatedToken","_handleTokenChange","_handleExistDeleteToken","existTokens","_handleFastrack","renderTokenList","_this$state3","outline","setEmptyData","column","_handleSnackBarClose","updated","clearScheduleDetail","_this$_decodeTokenLis","renderTimeField","nextProps","scheduleState","schedule","scheduleDetail","doctorMasterList","hospitalMasterList","scheduleList","CreateSchedulePage","components_CreateScheduleCard","EditSchedulePage","ViewSchedulesContainer","tooltext","handleToggle","handleSelect","clearScheduleList","Select","ViewSchedulesPage","container_ViewSchedulesContainer","sendPushMessage","callback","_renderTitleInput","_renderMessageInput","_ref2$meta","AnnouncementForm","_ref3","httpStatus","afterPush","displayMessage","lg","AnnouncementsTable","onResendClick","SendIcon_default","AnnouncementPage","announcements","_fetchAnnouncements","_","announcementsData","announcement","Moment","tz","components_AnnouncementForm","_displayToast","components_AnnouncementsTable","renderTextInput","CreateFrontdeskUserCard","onResponse","MODE","VIEW","PREEDIT","EDIT","doctorsListPromise","Promise","resolve","reject","hospitalListPromise","LinkFrontdeskUserForm","_handleViewSubmit","isNull","showFrontdeskUserField","mode","initialize","frontdeskUser","_handlePreEditSubmit","_handleEditSubmit","frontdeskUserId","_resetForm","doctorsList","hospitalsList","frontdeskUsersList","_fetchData","all","_this4","frontdeskUsersPromise","CreateFrontdeskUsersPage","frontdeskUsers","_fetchFrontdeskUsers","fdu","CreateFrontdeskUserForm","components_LinkFrontdeskUserForm","FrontdeskUsersTable","refreshTable","onActionComplete","ViewFrontdeskUsersPage","getFrontdeskList","components_FrontdeskUsersTable","_onActionComplete","ViewBookingsTable","CloseCircleIcon_default","TicketPercentIcon_default","CheckIcon_default","bookingId","ViewBookingsTablePage","bookings","destructedBookings","booking","hospitalDetails","userDetails","tokenDate","doctorName","hospitalName","components_ViewBookingsTable","TextInputDisabled","BookingDetailCard","_props$data","bookedTimeStamp","statusColor","textAlign","UserDetailCard","DoctorDetailCard","HospitalDetailCard","ViewBookingDetailPage","bookingDetail","components_BookingDetailCard","UserDetailsCard","DoctorDetailsCard","HospitalDetailsCard","CustomerCareForm","contactNumber","contactEmail","_updateSupportDetails","_handleEdit","isEditMode","_fetchSupportDetails","minLength","maxLength","CustomerCarePage","components_CustomerCareForm","ChangePassword","currentPassword","newPassword","SettingsPage","ChangePasswordCard","Pages","Switch","Route","ViewUsers","CreateDoctor","ViewDoctors","CreateHospital","ViewHospitals","CreateSchedule","ViewSchedules","Announcement","CreateFrontdeskUser","ViewFrontdeskUser","ViewBookings","ViewBookingDetail","CustomerCare","Settings","wrappedRoutes","containers_Layout","Router","App_MainWrapper","exact","initialState","reducer","combineReducers","reduxFormReducer","arguments","CHANGE_THEME_TO_DARK","CHANGE_THEME_TO_LIGHT","CHANGE_SIDEBAR_VISIBILITY","CHANGE_MOBILE_SIDEBAR_VISIBILITY","action","createStore","applyMiddleware","thunk","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_dom__WEBPACK_IMPORTED_MODULE_1__","_containers_App_App__WEBPACK_IMPORTED_MODULE_2__","document","getElementById"],"mappings":"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","file":"static/js/main.09977fd9.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { hot } from 'react-hot-loader';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../scss/app.scss';\r\nimport Router from './Router';\r\nimport store from './store';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', () => {\r\n      this.setState({ loading: false });\r\n      setTimeout(() => this.setState({ loaded: true }), 500);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loaded, loading } = this.state;\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <ScrollToTop>\r\n            <Fragment>\r\n              {!loaded\r\n              && (\r\n              <div className={`load${loading ? '' : ' loaded'}`}>\r\n                <div className=\"load__icon-wrap\">\r\n                  <svg className=\"load__icon\">\r\n                    <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              )\r\n              }\r\n              <div>\r\n                <Router />\r\n              </div>\r\n            </Fragment>\r\n          </ScrollToTop>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ScrollToTop extends PureComponent {\r\n  static propTypes = {\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }).isRequired,\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    if (location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\r\n\r\nclass TopbarSidebarButton extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" className=\"topbar__button topbar__button--desktop\" onClick={changeSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n        <button type=\"button\" className=\"topbar__button topbar__button--mobile\" onClick={changeMobileSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopbarSidebarButton;\r\n","export function post (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}\nexport function put (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}\nexport function get (url) {\n\treturn fetch(url);\n}\nexport function del (url, body) {\n\treturn fetch(url, {\n\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\t\t\tmethod: \"DELETE\",\n\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n}","const endpoints = {\n\tlogin: '/api/v1/auth/admin',\n\tloginStatus: '/api/v1/auth/admin/loginstatus',\n\tlogout: '/api/v1/admin/logout',\n\tsendOTP: '/api/v1/sendOTP',\n  \n\tdoctorList: '/api/v1/admin/getDoctors/',\n\tcreateDoctor: '/api/v1/admin/createDoctor',\n\tupdateDoctor: '/api/v1/admin/updateDoctor',\n\tuploadProfileImage: '/api/v1/admin/uploadDoctorProfileImage',\n\tdeleteProfileImage: '/api/v1/admin/deleteDoctorProfileImage/',\n\tgetSpecializations: '/api/v1/admin/getSpecializations',\n\t\n\tcreateHospital: '/api/v1/admin/createHospital',\n\tupdateHospital: '/api/v1/admin/updateHospital',\n  \n\tcreateSchedule: '/api/v1/admin/createSchedule',\n\tgetDoctorMasterList: '/api/v1/admin/getMasterDoctors',\n\tgetHospitalMasterList: '/api/v1/admin/getMasterHospitals',\n\t\n\tgetFrontdeskUsersMasterList: '/api/v1/admin/getMasterFrontdeskUsers',\n\tcreateFrontdeskUser: '/api/v1/admin/createFrontdeskUser/',\n\tgetDoctorFrontdeskUser: '/api/v1/admin/getDoctorFrontdeskUser/',\n\tlinkFrontdeskUser: '/api/v1/admin/linkFrontdeskUser',\n  \n\tgetCustomerList: '/api/v1/admin/getCustomers/',\n\tgetScheduleList: '/api/v1/admin/getSchedules/',\n\tgetScheduleDetail: '/api/v1/admin/getScheduleDetails/',\n\t\n\tblockUser: '/api/v1/admin/blockUser',\n\tunblockUser: '/api/v1/admin/unblockUser',\n  \n\tgetHospitalList: '/api/v1/admin/getHospitals/',\n\tgetHospitalDetail : '/api/v1/admin/getHospitalDetails/',\n\t\n\tgetDoctorDetail : '/api/v1/admin/getDoctorDetails/',\n\n\tgetScheduleDoctors: '/api/v1/admin/getScheduleDoctors/',\n\tgetScheduleHospitals: '/api/v1/admin/getScheduleHospitals',\n  \n\tsendAnnouncement: '/api/v1/messages/push',\n\tgetAnnouncements: '/api/v1/admin/getAnnouncements',\n  \n\tgetBookings: '/api/v1/admin/getBookingHistory',\n\tgetBookingDetail: '/api/v1/admin/getBookingHistoryDetail',\n  \n\tgetSupportDetails: '/api/v1/user/getSupportDetails',\n\tsetSupportDetails: '/api/v1/admin/setSupportDetails',\n  \n\tchangePassword: '/api/v1/admin/changePassword',\n\n\tupdateSchedule: `/api/v1/admin/updateSchedule/`,\n\tdeleteSchedule: `/api/v1/admin/deleteSchedule/`,\n  };\n  \n  export default endpoints;\n  ","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Action from '../../../redux/actions/loginActions';\r\n\r\nexport default class TopbarMenuLinks extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n  };\r\n\r\n\t_handleLogout = () => {\r\n\t\treturn Action.logout()\r\n\t\t.then ((response) => response.json())\r\n\t\t.then(data=> console.log('logout success'))\r\n\t}\r\n\r\n  render() {\r\n    const { title, icon, path } = this.props;\r\n\r\n    return (\r\n      <Link className=\"topbar__link\" onClick={() => this._handleLogout()} to={path}>\r\n        <span className={`topbar__link-icon lnr lnr-${icon}`} />\r\n        <p className=\"topbar__link-title\">{title}</p>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import { post, get } from './fetch';\nimport Endpoint from './endpoints';\n\nexport function login(saveData){\n\treturn post(Endpoint.login, saveData);\n}\nexport  function loginSatus () {\n\treturn get(Endpoint.loginStatus);\n};\nexport function logout(){\n\treturn get(Endpoint.logout);\n}","import React, { PureComponent } from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { Collapse } from 'reactstrap';\r\nimport TopbarMenuLink from './TopbarMenuLink';\r\n\r\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\r\n\r\nexport default class TopbarProfile extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\r\n  };\r\n\r\n  render() {\r\n    const { collapse } = this.state;\r\n\r\n    return (\r\n      <div className=\"topbar__profile\">\r\n        <button type=\"button\" className=\"topbar__avatar\" onClick={this.toggle}>\r\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\r\n          <DownIcon className=\"topbar__icon\" />\r\n        </button>\r\n        {collapse && <button type=\"button\" className=\"topbar__back\" onClick={this.toggle} />}\r\n        <Collapse isOpen={collapse} className=\"topbar__menu-wrap\">\r\n          <div className=\"topbar__menu\">\r\n            <TopbarMenuLink title=\"Log Out\" icon=\"exit\" path=\"/\" />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TopbarSidebarButton from './TopbarSidebarButton';\r\nimport TopbarProfile from './TopbarProfile';\r\n\r\nclass Topbar extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div className=\"topbar\">\r\n        <div className=\"topbar__wrapper\">\r\n          <div className=\"topbar__left\">\r\n            <TopbarSidebarButton\r\n              changeMobileSidebarVisibility={changeMobileSidebarVisibility}\r\n              changeSidebarVisibility={changeSidebarVisibility}\r\n            />\r\n            <h4 style={{ alignSelf: 'center' }}>Popular Doctor</h4>\r\n          </div>\r\n          <div className=\"topbar__right\">\r\n            <TopbarProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidebarLink = ({\r\n  title, icon, newLink, route, onClick,\r\n}) => (\r\n  <NavLink\r\n    to={route}\r\n    onClick={onClick}\r\n    activeClassName=\"sidebar__link-active\"\r\n  >\r\n    <li className=\"sidebar__link\">\r\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n      <p className=\"sidebar__link-title\">\r\n        {title}\r\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\r\n      </p>\r\n    </li>\r\n  </NavLink>\r\n);\r\n\r\nSidebarLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  newLink: PropTypes.bool,\r\n  route: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nSidebarLink.defaultProps = {\r\n  icon: '',\r\n  newLink: false,\r\n  route: '/',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SidebarLink;\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class SidebarCategory extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string,\r\n    isNew: PropTypes.bool,\r\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    icon: '',\r\n    isNew: false,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title, icon, isNew, children,\r\n    } = this.props;\r\n    const { collapse } = this.state;\r\n    const categoryClass = classNames({\r\n      'sidebar__category-wrap': true,\r\n      'sidebar__category-wrap--open': collapse,\r\n    });\r\n\r\n    return (\r\n      <div className={categoryClass}>\r\n        <button type=\"button\" className=\"sidebar__link sidebar__category\" onClick={this.toggle}>\r\n          {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n          <p className=\"sidebar__link-title\">{title}\r\n            {isNew && <span className=\"sidebar__category-new\" />}\r\n          </p>\r\n          <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\r\n        </button>\r\n        <Collapse isOpen={collapse} className=\"sidebar__submenu-wrap\">\r\n          <ul className=\"sidebar__submenu\">\r\n            <div>\r\n              {children}\r\n            </div>\r\n          </ul>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const USER_MANAGEMENT = 'Users';\nexport const VIEW_USERS = 'View Users';\nexport const DOCTOR_MANAGEMENT = 'Doctors';\nexport const CREATE_DOCTOR = 'Create Doctor';\nexport const EDIT_DOCTOR = 'Edit Doctor';\nexport const VIEW_DOCTORS = 'View Doctors';\nexport const HOSPITAL_MANAGEMENT = 'Hospitals';\nexport const CREATE_HOSPITAL = 'Create Hospital';\nexport const EDIT_HOSPITAL = 'Edit Hospital';\nexport const VIEW_HOSPITALS = 'View Hospitals';\nexport const SCHEDULE_MANAGEMENT = 'Schedules';\nexport const CREATE_SCHEDULE = 'Create Schedule';\nexport const EDIT_SCHEDULE = 'Edit Schedule';\nexport const VIEW_SCHDULES = 'View Schedules';\nexport const SETTINGS = 'Settings';\nexport const ANNOUNCEMENT = 'Announcement';\nexport const FRONTDESK_USERS = 'Front-Desk Users';\nexport const CREATE_USER = 'Create User';\nexport const LINK_USER = 'Link User';\nexport const BOOKINGS = 'Bookings';\nexport const BOOKING_DETAIL = 'Booking Detail';\nexport const CUSTOMER_CARE = 'Customer Care';\nexport const CHANGE_PASSWORD = 'Change Password';\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarLink from './SidebarLink';\r\nimport SidebarCategory from './SidebarCategory';\r\nimport {\r\n  CREATE_DOCTOR,\r\n  VIEW_DOCTORS,\r\n  DOCTOR_MANAGEMENT,\r\n  HOSPITAL_MANAGEMENT,\r\n  USER_MANAGEMENT,\r\n  VIEW_USERS,\r\n  CREATE_HOSPITAL,\r\n  VIEW_HOSPITALS,\r\n  SCHEDULE_MANAGEMENT,\r\n  CREATE_SCHEDULE,\r\n  VIEW_SCHDULES,\r\n  SETTINGS,\r\n  FRONTDESK_USERS,\r\n  CREATE_USER,\r\n  ANNOUNCEMENT,\r\n  BOOKINGS,\r\n  CUSTOMER_CARE\r\n} from '../../../constants/strings';\r\nimport {\r\n  ROUTE_CREATE_DOCTOR,\r\n  ROUTE_VIEW_DOCTORS,\r\n  ROUTE_CREATE_HOSPITAL,\r\n  ROUTE_VIEW_HOSPITALS,\r\n  ROUTE_CREATE_SCHEDULE,\r\n  ROUTE_VIEW_SCHEDULES,\r\n  ROUTE_VIEW_USERS,\r\n  ROUTE_CREATE_FRONTDESK_USER,\r\n  ROUTE_VIEW_FRONTDESK_USER,\r\n  ROUTE_ANNOUNCEMENT,\r\n  ROUTE_VIEW_BOOKINGS,\r\n  ROUTE_CUSTOMER_CARE,\r\n  ROUTE_SETTINGS\r\n} from '../../../constants/routes';\r\n\r\nclass SidebarContent extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n  };\r\n\r\n  hideSidebar = () => {\r\n    const { onClick } = this.props;\r\n    onClick();\r\n  };\r\n\r\n  render() {\r\n\t\t\r\n\t\treturn (\r\n      <div className='sidebar__content'>\r\n        <ul className='sidebar__block'>\r\n          <SidebarCategory title={USER_MANAGEMENT} icon='users'>\r\n            <SidebarLink\r\n              title={VIEW_USERS}\r\n              route={ROUTE_VIEW_USERS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={DOCTOR_MANAGEMENT} icon='heart-pulse'>\r\n            <SidebarLink\r\n              title={CREATE_DOCTOR}\r\n              route={ROUTE_CREATE_DOCTOR}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_DOCTORS}\r\n              route={ROUTE_VIEW_DOCTORS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={HOSPITAL_MANAGEMENT} icon='apartment'>\r\n            <SidebarLink\r\n              title={CREATE_HOSPITAL}\r\n              route={ROUTE_CREATE_HOSPITAL}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_HOSPITALS}\r\n              route={ROUTE_VIEW_HOSPITALS}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={SCHEDULE_MANAGEMENT} icon='clock'>\r\n            <SidebarLink\r\n              title={CREATE_SCHEDULE}\r\n              route={ROUTE_CREATE_SCHEDULE}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_SCHDULES}\r\n              route={ROUTE_VIEW_SCHEDULES}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarCategory title={FRONTDESK_USERS} icon='screen'>\r\n            <SidebarLink\r\n              title={CREATE_USER}\r\n              route={ROUTE_CREATE_FRONTDESK_USER}\r\n              onClick={this.hideSidebar}\r\n            />\r\n            <SidebarLink\r\n              title={VIEW_USERS}\r\n              route={ROUTE_VIEW_FRONTDESK_USER}\r\n              onClick={this.hideSidebar}\r\n            />\r\n          </SidebarCategory>\r\n          <SidebarLink\r\n            title={ANNOUNCEMENT}\r\n            route={ROUTE_ANNOUNCEMENT}\r\n            onClick={this.hideSidebar}\r\n            icon='bullhorn'\r\n          />\r\n          <SidebarLink\r\n            title={BOOKINGS}\r\n            route={ROUTE_VIEW_BOOKINGS}\r\n            onClick={this.hideSidebar}\r\n            icon='tag'\r\n          />\r\n          <SidebarLink\r\n            title={CUSTOMER_CARE}\r\n            route={ROUTE_CUSTOMER_CARE}\r\n            onClick={this.hideSidebar}\r\n            icon='phone-handset'\r\n          />\r\n          <div style={{ position: 'absolute', bottom: 8 }}>\r\n            <SidebarLink\r\n              title={SETTINGS}\r\n              route={ROUTE_SETTINGS}\r\n              onClick={this.hideSidebar}\r\n              icon='cog'\r\n            />\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarContent;\r\n","export const ROUTE_VIEW_USERS = '/pages/userManagement/viewUsers';\nexport const ROUTE_CREATE_DOCTOR = '/pages/doctorManagement/createDoctor';\nexport const ROUTE_EDIT_DOCTOR = '/pages/doctorManagement/editDoctor/:doctorId';\nexport const ROUTE_VIEW_DOCTORS = '/pages/doctorManagement/viewDoctors';\nexport const ROUTE_CREATE_HOSPITAL = '/pages/hospitalManagement/createHospital';\nexport const ROUTE_EDIT_HOSPITAL = '/pages/hospitalManagement/editHospital/:hospitalId';\nexport const ROUTE_VIEW_HOSPITALS = '/pages/hospitalManagement/viewHospitals';\nexport const ROUTE_CREATE_SCHEDULE = '/pages/scheduleManagement/createSchedule';\nexport const ROUTE_EDIT_SCHEDULE = '/pages/scheduleManagement/editSchedule';\nexport const ROUTE_VIEW_SCHEDULES = '/pages/scheduleManagement/viewSchedules';\nexport const ROUTE_ANNOUNCEMENT = '/pages/announcement';\nexport const ROUTE_CREATE_FRONTDESK_USER =\n  '/pages/frontdeskUsers/createFrontdeskUser';\nexport const ROUTE_VIEW_FRONTDESK_USER =\n  '/pages/frontdeskUsers/viewFrontdeskUsers';\nexport const ROUTE_VIEW_BOOKINGS = '/pages/bookings/viewBookings';\nexport const ROUTE_VIEW_BOOKING_DETAIL = '/pages/bookings/viewBookingDetail';\nexport const ROUTE_CUSTOMER_CARE = '/pages/customerCare';\nexport const ROUTE_SETTINGS = '/pages/settings';\n","import PropTypes from 'prop-types';\r\n\r\nconst {\r\n  string, shape,\r\n} = PropTypes;\r\n\r\nexport const SidebarProps = shape({\r\n  show: PropTypes.bool,\r\n  collapse: PropTypes.bool,\r\n});\r\n\r\nexport const ThemeProps = shape({\r\n  className: string,\r\n});\r\n","import React from 'react';\r\nimport Scrollbar from 'react-smooth-scrollbar';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarContent from './SidebarContent';\r\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\r\n\r\nconst Sidebar = ({\r\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\r\n}) => {\r\n  const sidebarClass = classNames({\r\n    sidebar: true,\r\n    'sidebar--show': sidebar.show,\r\n    'sidebar--collapse': sidebar.collapse,\r\n  });\r\n\r\n  return (\r\n    <div className={sidebarClass}>\r\n      <button type=\"button\" className=\"sidebar__back\" onClick={changeMobileSidebarVisibility} />\r\n      <Scrollbar className=\"sidebar__scroll scroll\">\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\r\n          <SidebarContent\r\n            onClick={() => {}}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\r\n          <SidebarContent\r\n            onClick={changeMobileSidebarVisibility}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n      </Scrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  sidebar: SidebarProps.isRequired,\r\n  changeToDark: PropTypes.func.isRequired,\r\n  changeToLight: PropTypes.func.isRequired,\r\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Topbar from './topbar/Topbar';\r\nimport Sidebar from './sidebar/Sidebar';\r\n\r\nimport { changeThemeToDark, changeThemeToLight } from '../../redux/actions/themeActions';\r\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\r\nimport { SidebarProps } from '../../shared/prop-types/ReducerProps';\r\n\r\nclass Layout extends Component {\r\n  static propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    sidebar: SidebarProps.isRequired,\r\n  };\r\n\r\n  changeSidebarVisibility = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeSidebarVisibility());\r\n  };\r\n\r\n  changeMobileSidebarVisibility = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeMobileSidebarVisibility());\r\n  };\r\n\r\n  changeToDark = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeThemeToDark());\r\n  };\r\n\r\n  changeToLight = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(changeThemeToLight());\r\n  };\r\n\r\n  render() {\r\n    const { sidebar } = this.props;\r\n\r\n    const layoutClass = classNames({\r\n      layout: true,\r\n      'layout--collapse': sidebar.collapse,\r\n    });\r\n\r\n    return (\r\n      <div className={layoutClass}>\r\n        <Topbar\r\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n          changeSidebarVisibility={this.changeSidebarVisibility}\r\n        />\r\n        <Sidebar\r\n          sidebar={sidebar}\r\n          changeToDark={this.changeToDark}\r\n          changeToLight={this.changeToLight}\r\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(state => ({\r\n  sidebar: state.sidebar,\r\n}))(Layout));\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeProps } from \"../../shared/prop-types/ReducerProps\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst materialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#fff\",\r\n      main: \"rgb(23, 105, 170)\",\r\n      dark: \"#000\"\r\n    },\r\n    secondary: {\r\n      main: \"#f44336\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nclass MainWrapper extends PureComponent {\r\n  static propTypes = {\r\n    theme: ThemeProps.isRequired,\r\n    children: PropTypes.element.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { theme, children } = this.props;\r\n\r\n    return (\r\n      <div className={theme.className}>\r\n        <MuiThemeProvider theme={materialTheme}>\r\n          <div className=\"wrapper\">{children}</div>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  theme: state.theme\r\n}))(MainWrapper);\r\n","import React, { PureComponent } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport EyeIcon from 'mdi-react/EyeIcon';\r\nimport KeyVariantIcon from 'mdi-react/KeyVariantIcon';\r\nimport AccountOutlineIcon from 'mdi-react/AccountOutlineIcon';\r\nimport PropTypes from 'prop-types';\r\nimport * as Actions from '../../../redux/actions/loginActions';\r\n\r\nclass LogInForm extends PureComponent {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPassword: false\r\n    };\r\n  }\r\n\r\n\tcomponentDidMount () {\r\n\t\tActions.loginSatus()\r\n\t\t.then(response => response.json())\r\n\t\t.then( data =>  {\r\n\t\t\tif(data.status === 'SUCCESS'){\r\n\t\t\t\tthis.context.router.history.push('/pages/userManagement/viewUsers');\r\n\t\t\t}else{\r\n\t\t\t\tthis.context.router.history.push('/');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n  showPassword = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  };\r\n\r\n  _handleSubmit = ({ username, password }) => {\r\n\t\t\tActions.login({ username, password })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.context.router.history.push('/pages/userManagement/viewUsers');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    const { showPassword } = this.state;\r\n\r\n    return (\r\n      <form className='form' onSubmit={handleSubmit(this._handleSubmit)}>\r\n        <div className='form__form-group'>\r\n          <span className='form__form-group-label'>Username</span>\r\n          <div className='form__form-group-field'>\r\n            <div className='form__form-group-icon'>\r\n              <AccountOutlineIcon />\r\n            </div>\r\n            <Field\r\n              name='username'\r\n              component='input'\r\n              type='text'\r\n              placeholder='Name'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form__form-group'>\r\n          <span className='form__form-group-label'>Password</span>\r\n          <div className='form__form-group-field'>\r\n            <div className='form__form-group-icon'>\r\n              <KeyVariantIcon />\r\n            </div>\r\n            <Field\r\n              name='password'\r\n              component='input'\r\n              type={showPassword ? 'text' : 'password'}\r\n              placeholder='Password'\r\n            />\r\n            <button\r\n              className={`form__form-group-button${\r\n                showPassword ? ' active' : ''\r\n              }`}\r\n              onClick={e => this.showPassword(e)}\r\n              type='button'\r\n            >\r\n              <EyeIcon />\r\n            </button>\r\n          </div>\r\n          <div className='account__forgot-password'>\r\n            <a href='/'>Forgot a password?</a>\r\n          </div>\r\n        </div>\r\n        <div className='form__form-group'>\r\n          {/* <div className=\"form__form-group-field\">\r\n            <Field\r\n              name=\"remember_me\"\r\n              component={renderCheckBoxField}\r\n              label=\"Remember me\"\r\n            />\r\n          </div> */}\r\n        </div>\r\n        <Button\r\n          type='submit'\r\n          className='btn btn-primary account__btn account__btn--small'\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nLogInForm.contextTypes = {\r\n  router: PropTypes.func.isRequired\r\n }\r\n\r\nexport default reduxForm({\r\n  form: 'log_in_form'\r\n})(LogInForm);\r\n","import React from 'react';\r\nimport LogInForm from './components/LogInForm';\r\n\r\nconst LogIn = () => (\r\n  <div className=\"account\">\r\n    <div className=\"account__wrapper\">\r\n      <div className=\"account__card\">\r\n        {/* <div className=\"account__head\">\r\n          <h3 className=\"account__title\">Welcome to\r\n            <span className=\"account__logo\"> Easy\r\n              <span className=\"account__logo-accent\">DEV</span>\r\n            </span>\r\n          </h3>\r\n        </div> */}\r\n        <LogInForm onSubmit />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LogIn;\r\n\r\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\r\n// four lines in /scss/components/form.scss to add styles\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\n\r\nexport default class MatTableHead extends PureComponent {\r\n  static propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  createSortHandler = property => (event) => {\r\n    const { onRequestSort } = this.props;\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSelectAllClick, order, orderBy, numSelected, rowCount, columns, showCheckbox\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n\t\t\t\t\t{ showCheckbox && <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              className={`material-table__checkbox ${numSelected === rowCount && 'material-table__checkbox--checked'}`}\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>}\r\n          {columns.map(row => (\r\n            <TableCell\r\n              className=\"material-table__cell material-table__cell--sort\"\r\n              key={row.id}\r\n\t\t\t\t\t\t\talign={row.numeric ? 'rigth' : 'left'}\r\n\t\t\t\t\t\t\tpadding={'default'}\r\n              sortDirection={orderBy === row.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === row.id}\r\n                direction={order}\r\n                onClick={this.createSortHandler(row.id)}\r\n                className=\"material-table__sort-label\"\r\n              >\r\n                <div style={{ whiteSpace: 'nowrap'}}>{row.label}</div>\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ), this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n","const underscore = require('underscore');\n\nexport const UNDERSCORE = underscore;","import React, { PureComponent } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MatTableHead from './MatTableHead';\r\nimport { UNDERSCORE } from '../../../../../constants/utils';\r\n\r\nfunction getSort(value, order, orderBy) {\r\n  return order === 'desc'\r\n    ? UNDERSCORE.sortBy(value, orderBy)\r\n    : UNDERSCORE.chain(value)\r\n        .sortBy('user.age')\r\n        .reverse()\r\n        .value();\r\n}\r\n\r\nconst style = {\r\n  tableBody: {\r\n    overflow: 'scroll',\r\n    height: '100%'\r\n  }\r\n};\r\nexport default class MatTable extends PureComponent {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: '_id',\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n    const { orderBy: stateOrderBy, order: stateOrder } = this.state;\r\n\r\n    if (stateOrderBy === property && stateOrder === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = (event, checked) => {\r\n    if (checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleDeleteSelected = () => {\r\n    const { data } = this.state;\r\n    let copyData = [...data];\r\n    const { selected } = this.state;\r\n\r\n    for (let i = 0; i < selected.length; i += 1) {\r\n      copyData = copyData.filter(obj => obj.id !== selected[i]);\r\n    }\r\n\r\n    this.setState({ data: copyData, selected: [] });\r\n  };\r\n\r\n  isSelected = id => {\r\n    const { selected } = this.state;\r\n    return selected.indexOf(id) !== -1;\r\n  };\r\n\r\n  render() {\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const { columns, showCheckbox, data } = this.props;\r\n    let _data = [];\r\n    if (data && data.length !== 0) {\r\n      _data = getSort(data, order, orderBy).slice(\r\n        page * rowsPerPage,\r\n        page * rowsPerPage + rowsPerPage\r\n      );\r\n    }\r\n\r\n    return (\r\n        <div className='material-table__wrap' >\r\n          <Table className='material-table'>\r\n            <MatTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              columns={this.props.columns}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody classes={style.tableBody}>\r\n              {_data.map(d => {\r\n                const isSelected = this.isSelected(d._id);\r\n                return (\r\n                  <TableRow\r\n                    className='material-table__row'\r\n                    role='checkbox'\r\n                    onClick={event => this.handleClick(event, d._id)}\r\n                    aria-checked={isSelected}\r\n                    tabIndex={-1}\r\n                    key={d._id}\r\n                    selected={isSelected}\r\n                  >\r\n                    {showCheckbox && (\r\n                      <TableCell\r\n                        className='material-table__cell'\r\n                        padding='checkbox'\r\n                      >\r\n                        <Checkbox\r\n                          checked={isSelected}\r\n                          className='material-table__checkbox'\r\n                        />\r\n                      </TableCell>\r\n                    )}\r\n                    {columns.map(key => {\r\n                      return (\r\n                        <TableCell component='th' scope='row' padding='default'>\r\n                          {key.render ? key.render(d) : d[key.id]}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n\t\t\t\t\t\t<TableFooter>\r\n            <TableRow>\r\n\t\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\tclassName='material-table__pagination'\r\n\t\t\t\t\t\t\t\tcount={data.length}\r\n\t\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\tbackIconButtonProps={{ 'aria-label': 'Previous Page' }}\r\n\t\t\t\t\t\t\t\tnextIconButtonProps={{ 'aria-label': 'Next Page' }}\r\n\t\t\t\t\t\t\t\tonChangePage={this.handleChangePage}\r\n\t\t\t\t\t\t\t\tonChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\t\trowsPerPageOptions={[100, 75, 50, 25, 5]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableFooter>\r\n          </Table>\r\n        </div>\r\n    );\t\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MatTable from './components/MatTable';\r\n\r\nclass  MaterialTable extends React.Component {\r\n\t\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t\t\t\t<MatTable {...this.props}/>\r\n\t\t);\r\n\t}\r\n\r\n};\r\n\r\nexport default MaterialTable;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as Action from '../../redux/actions/userActions';\n\nclass UserBlockToggle extends React.Component{\n\n\t_handleToggle = (status) => {\n\t\tconst { id } = this.props;\n\t\tif(status === 'ACTIVE') {\n\t\t\treturn this.props.blockUser({userId: id})\n\t\t\t.then(() => {\n\t\t\t\tthis.props.loadData();\n\t\t\t});\n\t\t}else{\n\t\t\treturn this.props.unblockUser({userId: id})\n\t\t\t.then(() => {\n\t\t\t\tthis.props.loadData();\n\t\t\t});\n\t\t}\n\t}\n\n\trender(){\n\t\tconst { status } = this.props;\n\t\tconst toolText = status === 'ACTIVE' ? 'block' : 'unblock';\n\t\tconst color = status === 'ACTIVE' ? true: false;\n\t\treturn (\n\t\t\t<Tooltip title={toolText}>\n\t\t\t\t<Switch\n\t\t\t\t\tchecked={color}\n\t\t\t\t\tonChange={()=> this._handleToggle(status)}\n\t\t\t\t\tvalue=\"checkedB\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\nfunction mapStateToProps(state){\n\treturn {\n\t};\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    blockUser: (userId) => {\n      return Action.blockUser(userId);\n\t\t},\n\t\tunblockUser: (userId) => {\n      return Action.unblockUser(userId);\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBlockToggle);\n","import { post, get } from './fetch';\nimport Endpoint from './endpoints';\n\nexport  function getCustomerList (pageNo, size) {\n\tconst endpoint = `${Endpoint.getCustomerList}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_CUSTOMERLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\n\n\nexport function blockUser(userId){\n\treturn post(Endpoint.blockUser, userId);\n}\nexport function unblockUser(userId){\n\treturn post(Endpoint.unblockUser, userId);\n}\n","import React from \"react\";\r\nimport { Card, CardBody, Col } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/userActions\";\r\nimport UserBlockToggle from \"../../../../components/user/userBlockToggle\";\r\n\r\nclass ViewUsersContainer extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this._onLoad();\r\n  }\r\n\r\n\t_onLoad = () => {\r\n\t\tthis.props.getUserList();\r\n\t} \r\n\r\n\t_handleNotification = (value) =>{\r\n\t\tthis.setState({...value});\r\n\t}\r\n\r\n\t_renderToggle = (row) => {\r\n\t\treturn (\r\n\t\t\t<UserBlockToggle\r\n\t\t\t\tdata={row}\r\n\t\t\t\tstatus={row.status}\r\n\t\t\t\tid={row._id}\r\n\t\t\t\tloadData={this._onLoad}\r\n\t\t\t\tafterToggle={(value) => this._handleNotification(value)}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n  render() {\r\n    const { userDataList } = this.props;\r\n    const columns = [\r\n      { id: 'fullName', numeric: false, disablePadding: true, label: 'Name' },\r\n      { id: 'username', numeric: false, disablePadding: true, label: 'Contact' },\r\n      { id: 'gender', numeric: false, disablePadding: true, label: 'Gender' },\r\n      { id: 'action', label: 'Block/Unblock', render : (text) => this._renderToggle(text)},\r\n\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={userDataList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state){\r\n\tconst userState = state.user ? state.user.customerList : [];\r\n\treturn {\r\n\t\tuserDataList: !UNDERSCORE.isEmpty(userState) ? userState.users : [],\r\n\t\ttotalCount: !UNDERSCORE.isEmpty(userState) ? userState.totalRecords : 0,\r\n\t};\r\n}\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    getUserList: () => {\r\n      dispatch(Action.getCustomerList());\r\n    }\r\n  }\r\n}\r\n\r\n\r\nViewUsersContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewUsersContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewUsersContainer from './container/ViewUsersContainer';\r\nimport { VIEW_USERS } from '../../../constants/strings';\r\n\r\nconst ViewUsersPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_USERS}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewUsersContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewUsersPage;\r\n","import { post, get, put } from './fetch';\nimport Endpoint from './endpoints';\n\nexport  function getDoctorList () {\n\tconst doctor =  `${Endpoint.doctorList}`;\n\treturn function (dispatch){\n\t\treturn get(doctor)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_DOCTORLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\nexport  function getSpecialization() {\n\treturn function (dispatch){\n\t\treturn get(Endpoint.getSpecializations)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_SPECIALIZATIONLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\nexport function getDoctorDetail(pdNumber){\n\tconst endpoint = `${Endpoint.getDoctorDetail}${pdNumber}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_DOCTORDETAIL',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n}\n\nexport function clearDoctorDetail(){\n\treturn {\n\t\ttype: 'RESPONSE_DOCTORDETAIL',\n\t\tdata:[]\n\t}\n}\nexport function save(saveData){\n\treturn post(Endpoint.createDoctor, saveData);\n}\nexport function update(saveData, id){\n\treturn put(`${Endpoint.updateDoctor}/${id}`, saveData);\n}","const validate = (values) => {\r\n  const errors = {};\r\n  if (!values.username) {\r\n    errors.username = 'Username field shouldn’t be empty';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Email field shouldn’t be empty';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Password field shouldn’t be empty';\r\n  } else if (values.password !== 'dragon') {\r\n    errors.password = 'The password is incorrect';\r\n  }\r\n  if (!values.select) {\r\n    errors.select = 'Please select the option';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","export const emptyField = 'Please select the above value';\n\nexport const addDoctor = {\n\tfullName: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tdegree: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tmobile: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tlatitude: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tlongitude: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 10,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tyearsOfExperience: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 2,\n\t\terrorText: 'Enter valid mobile number it should be 10 digit'\n\t},\n\tprofileContent: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 300,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t}\n}\n","import React, { PureComponent } from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        value: PropTypes.string,\r\n        label: PropTypes.string\r\n      })\r\n    ),\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        value: PropTypes.string,\r\n        label: PropTypes.string\r\n      })\r\n    ]).isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: \"\",\r\n    options: []\r\n  };\r\n\r\n  handleChange = selectedOption => {\r\n\t\tconst { onChange } = this.props;\r\n    onChange(selectedOption);\r\n  };\r\n\r\n\tsetIdWithValue = (list) =>{\r\n\t\tlist.forEach(data => {data.label = `${data.label} (${data.value}) `})\r\n\t\treturn list;\r\n\t}\r\n\r\n  render() {\r\n\t\tconst { value, name, placeholder, options, renderId } = this.props;\r\n\t\tlet optionList = [];\r\n\t\tif(renderId){\r\n\t\t\toptionList = this.setIdWithValue(options);\r\n\t\t}else{\r\n\t\t\toptionList = options; \r\n\t\t}\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={value}\r\n        onChange={e => this.handleChange(e)}\r\n        options={optionList}\r\n        clearable={false}\r\n        className=\"react-select\"\r\n        placeholder={placeholder}\r\n        classNamePrefix=\"react-select\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderSelectField = props => {\r\n  const { input, meta, options, placeholder, width, renderId, filter, onChange } = props;\r\n  if (filter) {\r\n    return (\r\n      <div style={{ width: width }}>\r\n        <SelectField\r\n          {...input}\r\n          options={options}\r\n          placeholder={placeholder}\r\n\t\t\t\t\trenderId={renderId}\r\n\t\t\t\t\tonChange={onChange}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form__form-group-input-wrap\">\r\n        <div style={{ width: width }}>\r\n          <SelectField\r\n            {...input}\r\n            options={options}\r\n            placeholder={placeholder}\r\n            renderId={renderId}\r\n          />\r\n        </div>\r\n        {meta.touched && meta.error && (\r\n          <span style={{ width: width }} className=\"form__form-group-error\">\r\n            {meta.error}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nRenderSelectField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  }),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string,\r\n      label: PropTypes.string\r\n    })\r\n  ),\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nRenderSelectField.defaultProps = {\r\n  meta: null,\r\n  options: [],\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default RenderSelectField;\r\n","import React, { PureComponent } from 'react';\r\nimport 'flatpickr/dist/themes/material_green.css'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DatePickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n\t\tconst { value, onChange } = this.props;\r\n    return (\r\n      <Flatpickr\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder=\"Date of Birth\"\r\n\t\t\t\tdateFormat= \"Y-m-d\"\r\n        onChange={date => {onChange(date) }} />\r\n    )\r\n  }\r\n}\r\n\r\nconst renderDatePickerField = (props) => {\r\n\tconst {  input, meta, width } = props;\r\n\treturn (<div>\r\n     \t<DatePickerField {...input}  width={width}/>\r\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\r\n    </div>\r\n  );\r\n   \r\n};\r\n\r\nrenderDatePickerField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default renderDatePickerField;\r\n","import React, { PureComponent } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DropZoneField extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    customHeight: PropTypes.bool,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string,\r\n      })),\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    customHeight: false,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  onDrop(file) {\r\n    const { onChange } = this.props;\r\n    onChange(file.map(fl => Object.assign(fl, {\r\n      preview: URL.createObjectURL(fl),\r\n    })));\r\n  }\r\n\r\n  removeFile(index, e) {\r\n    const { onChange, value } = this.props;\r\n    e.preventDefault();\r\n    onChange(value.filter((val, i) => i !== index));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value, customHeight, name,\r\n    } = this.props;\r\n\r\n    const files = value;\r\n\r\n    return (\r\n      <div className={`dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`}>\r\n        <Dropzone\r\n          accept=\"image/jpeg, image/png\"\r\n          name={name}\r\n          multiple={false}\r\n          onDrop={(fileToUpload) => {\r\n            this.onDrop(fileToUpload);\r\n          }}\r\n        >\r\n          {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className=\"dropzone__input\">\r\n              {(!files || files.length === 0)\r\n              && (\r\n              <div className=\"dropzone__drop-here\">\r\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\r\n              </div>\r\n              )}\r\n              <input {...getInputProps()} />\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        {files && Array.isArray(files) && files.length > 0\r\n        && (\r\n        <aside className=\"dropzone__img\">\r\n          <img src={files[0].preview} alt=\"drop-img\" />\r\n          <p className=\"dropzone__img-name\">{files[0].name}</p>\r\n          <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => this.removeFile(0, e)}>\r\n            Remove\r\n          </button>\r\n        </aside>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderDropZoneField = (props) => {\r\n  const { input, customHeight } = props;\r\n  return (\r\n    <DropZoneField\r\n      {...input}\r\n      customHeight={customHeight}\r\n    />\r\n  );\r\n};\r\n\r\nrenderDropZoneField.propTypes = {\r\n  input: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n  }).isRequired,\r\n  customHeight: PropTypes.bool,\r\n};\r\n\r\nrenderDropZoneField.defaultProps = {\r\n  customHeight: false,\r\n};\r\n\r\nexport default renderDropZoneField;\r\n","import React, { PureComponent } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport ReactDOM from 'react-dom';\nimport { Card, CardBody } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport renderDropZoneField from '../../../../components/shared/components/form/DropZone';\nimport EndPoints from '../../../../redux/actions/endpoints';\nimport { UNDERSCORE } from '../../../../constants/utils';\n\nclass ProfileImageUploadForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctorPdNumber: null\n    };\n    this.form = null;\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  upload(doctorPdNumber) {\n    console.log('upload called');\n    this.setState({ doctorPdNumber }, () =>\n      ReactDOM.findDOMNode(this.form).dispatchEvent(new Event('submit'))\n    );\n  }\n\n  _handleSubmit = ({ profileImage }) => {\n\t\tif(UNDERSCORE.isEmpty(profileImage)){\n\t\t\treturn;\n\t\t}\n    const formData = new FormData();\n    formData.append(\n      'profileImage',\n      profileImage[0],\n      this.state.doctorPdNumber + '.png'\n    );\n\n    fetch(EndPoints.uploadProfileImage + '/' + this.state.doctorPdNumber, {\n      method: 'POST',\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.props.reset();\n        this.props.onUploadComplete(res.status);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <Card style={{ height: 150 }}>\n        <CardBody>\n          <div className='card__title'>\n            <h5 className='subhead'>Profile Image</h5>\n          </div>\n          <form\n            ref={element => (this.form = element)}\n            className='form'\n            onSubmit={handleSubmit(this._handleSubmit)}\n          >\n            <Field name='profileImage' component={renderDropZoneField} />\n          </form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'doctorPofileImageUpload'\n})(withTranslation('common')(ProfileImageUploadForm));\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  ButtonToolbar,\r\n  Row,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport { withRouter } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport * as Action from \"../../../../redux/actions/doctorActions\";\r\nimport { CREATE_DOCTOR, EDIT_DOCTOR } from \"../../../../constants/strings\";\r\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\r\nimport { addDoctor, emptyField } from \"../constants/doctorForm\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport renderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport renderDatePicker from \"../../../../components/shared/components/form/DatePicker\";\r\nimport ProfileImageUploadForm from \"./ProfileImageUploadForm\";\r\nimport Endpoints from \"../../../../redux/actions/endpoints\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  placeholder,\r\n  type,\r\n  disabled,\r\n  meta: { touched, error }\r\n}) => (\r\n  <div className=\"form__form-group-input-wrap \">\r\n    <input\r\n      {...input}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      disabled={disabled}\r\n    />\r\n    {touched && error && (\r\n      <span className=\"form__form-group-error\">{error}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nrenderField.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  })\r\n};\r\n\r\nrenderField.defaultProps = {\r\n  placeholder: \"\",\r\n  meta: null,\r\n  type: \"text\"\r\n};\r\n\r\nclass CreateDoctorCard extends PureComponent {\r\n  static propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    pristine: PropTypes.bool.isRequired,\r\n    submitting: PropTypes.bool.isRequired\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPassword: false,\r\n      displayToast: false,\r\n      dateOfBirth: \"\",\r\n      toastMessage: \"\",\r\n      errorText: {},\r\n      doProfileImageUpload: false,\r\n      doctorPdNumber: null,\r\n      disableButtonActions: false,\r\n      showProfileImageUploader: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    if (pathName.includes(\"edit\")) {\r\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n      this.props.getDoctorDetail(pdNumber);\r\n    } else {\r\n      this.props.clearDoctorDetail();\r\n    }\r\n    this.props.getSpecialization();\r\n    if (UNDERSCORE.isEmpty(this.props.initialValues.profileImage)) {\r\n      this.setState({ showProfileImageUploader: true });\r\n    }\r\n  }\r\n  _handleChange = (key, event) => {\r\n    const { saveData } = this.state;\r\n    saveData[key] = event.target.value;\r\n    this.setState({ saveData });\r\n  };\r\n\r\n  _handleSubmit = ({\r\n    fullName = \"\",\r\n    mobile = \"\",\r\n    yearsOfExperience = 0,\r\n    degree = \"\",\r\n    dateOfBirth = \"\",\r\n    specialization = \"\",\r\n    gender = \"\",\r\n    profileContent = \"\"\r\n  }) => {\r\n    const editValue = {\r\n      fullName,\r\n      mobile,\r\n      yearsOfExperience,\r\n      degree,\r\n      dateOfBirth: !UNDERSCORE.isEmpty(dateOfBirth) ? dateOfBirth : \"\",\r\n      specialization: specialization.label,\r\n      gender: gender.label,\r\n      profileContent\r\n    };\r\n    const errorText = {};\r\n    editValue.password = editValue.mobile;\r\n    editValue.profileImage = this.props.initialValues.profileImage;\r\n    Object.keys(editValue).forEach(key =>\r\n      this.validateTextData(editValue[key], key, editValue, errorText)\r\n    );\r\n    this.validateOtherFields(editValue, errorText);\r\n    this._mobileNumberValidate(editValue.mobile, errorText);\r\n    this.setState({ errorText });\r\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\r\n    if (error === 0) {\r\n      this.setState({ active: true });\r\n      if (this.props.isUpdate) {\r\n        const id = this.props.initialValues.doctorId;\r\n        const pdNumber = this.props.initialValues.doctorPdNumber;\r\n        Action.update(editValue, id)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.status) {\r\n              this.setState({\r\n                toastMessage: res.message\r\n                // displayToast: true\r\n                // disableButtonActions: true\r\n              });\r\n              this.props.getDoctorDetail(pdNumber);\r\n            } else {\r\n              //else display a toast with the returned message\r\n              this.setState({\r\n                displayToast: true,\r\n                toastMessage: res.message\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        Action.save(editValue)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.status) {\r\n              //if data saved successfully, upload the profile image with the returned doctorPdNumber\r\n              this.setState(\r\n                { toastMessage: res.message, disableButtonActions: true },\r\n                () => this.profileImageUploader.upload(res.doctorPdNumber)\r\n              );\r\n            } else {\r\n              //else display a toast with the returned message\r\n              this.setState({\r\n                displayToast: true,\r\n                toastMessage: res.message\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      throw new SubmissionError(errorText);\r\n    }\r\n  };\r\n\r\n  validateTextData = (value, key, editValue, errorText) => {\r\n    const type = addDoctor[key] ? addDoctor[key].type : \"other\";\r\n    switch (type) {\r\n      case \"number\":\r\n        if (UNDERSCORE.isEmpty(value.toString())) {\r\n          editValue[key] = value;\r\n          errorText[key] = addDoctor[key].emptyField;\r\n          return;\r\n        }\r\n        errorText[key] = null;\r\n        editValue[key] = value;\r\n        break;\r\n      case \"text\":\r\n        if (UNDERSCORE.isEmpty(value)) {\r\n          editValue[key] = value;\r\n          errorText[key] = addDoctor[key].emptyField;\r\n          return;\r\n        }\r\n        if (value.length <= addDoctor[key].length) {\r\n          errorText[key] = null;\r\n          editValue[key] = value;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  validateOtherFields = (editValue, errorText) => {\r\n    if (!editValue[\"dateOfBirth\"] && UNDERSCORE.isEmpty(editValue[\"dateOfBirth\"])) {\r\n      errorText[\"dateOfBirth\"] = emptyField;\r\n    }\r\n    if (UNDERSCORE.isEmpty(editValue[\"gender\"])) {\r\n      errorText[\"gender\"] = emptyField;\r\n    }\r\n    if (UNDERSCORE.isEmpty(editValue[\"specialization\"])) {\r\n      errorText[\"specialization\"] = emptyField;\r\n    }\r\n  };\r\n\r\n  _mobileNumberValidate = (value, errorText) => {\r\n    if (value && value.length !== 0 && value.length !== 10) {\r\n      errorText[\"mobile\"] = addDoctor[\"mobile\"].errorText;\r\n    }\r\n  };\r\n\r\n  _parseList = dataList => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data.name,\r\n          label: data.name\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  handleDOBChange = date => {\r\n    this.setState({ dateOfBirth: date });\r\n  };\r\n  _handleClose = () => {\r\n    this.setState({ displayToast: false });\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit, isUpdate } = this.props;\r\n    const specializations = this._parseList(this.props.specializations);\r\n    const title = isUpdate ? EDIT_DOCTOR : CREATE_DOCTOR;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={6} sm={12}>\r\n                <form\r\n                  className=\"form form--horizontal\"\r\n                  onSubmit={handleSubmit(this._handleSubmit)}\r\n                >\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Full Name</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"fullName\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        placeholder=\"Full Name\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Mobile</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"mobile\"\r\n                        component={renderField}\r\n                        type=\"number\"\r\n                        placeholder=\"Mobile\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Date of Birth\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"dateOfBirth\"\r\n                        component={renderDatePicker}\r\n                        placeholder=\"Date of Birth\"\r\n                        onChange={this.handleDOBChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Gender</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"gender\"\r\n                        component={renderSelectField}\r\n                        type=\"text\"\r\n                        placeholder=\"Gender\"\r\n                        width={150}\r\n                        options={[\r\n                          { value: \"male\", label: \"MALE\" },\r\n                          { value: \"female\", label: \"FEMALE\" }\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Specialization\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"specialization\"\r\n                        component={renderSelectField}\r\n                        type=\"text\"\r\n                        placeholder=\"Specialization\"\r\n                        width={200}\r\n                        options={specializations}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Degree</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"degree\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        placeholder=\"Degree\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">\r\n                      Years Of Experience\r\n                    </span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"yearsOfExperience\"\r\n                        component={renderField}\r\n                        type=\"number\"\r\n                        placeholder=\"Years Of Experience\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\">Description</span>\r\n                    <div className=\"form__form-group-field\">\r\n                      <Field\r\n                        name=\"profileContent\"\r\n                        component=\"textarea\"\r\n                        placeholder=\"Description\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <ButtonToolbar className=\"form__button-toolbar\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={\r\n                          pristine ||\r\n                          submitting ||\r\n                          this.state.disableButtonActions\r\n                        }\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={reset}\r\n                        disabled={\r\n                          pristine ||\r\n                          submitting ||\r\n                          this.state.disableButtonActions\r\n                        }\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </ButtonToolbar>\r\n                  </div>\r\n                </form>\r\n              </Col>\r\n              <Col md={6} sm={12}>\r\n                <Row\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"flex-start\",\r\n                    paddingLeft: \"5%\"\r\n                  }}\r\n                >\r\n                  {!UNDERSCORE.isEmpty(this.props.initialValues.profileImage) &&\r\n                    !this.state.showProfileImageUploader && (\r\n                      <div>\r\n                        <Row>\r\n                          <img\r\n                            src={this.props.initialValues.profileImage}\r\n                            style={{\r\n                              height: \"40%\",\r\n                              width: \"40%\",\r\n                              resizeMode: \"contain\"\r\n                            }}\r\n                          />\r\n                        </Row>\r\n                        <Row>\r\n                          <Button\r\n                            onClick={() => {\r\n                              fetch(\r\n                                Endpoints.deleteProfileImage +\r\n                                  this.props.initialValues.doctorPdNumber,\r\n                                {\r\n                                  method: \"DELETE\"\r\n                                }\r\n                              )\r\n                                .then(res => res.json())\r\n                                .then(res => {\r\n                                  alert(res);\r\n                                });\r\n                            }}\r\n                            color=\"danger\"\r\n                            type=\"button\"\r\n                            // disabled={pristine || submitting}\r\n                            style={{ marginTop: \"2%\" }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Row>\r\n                      </div>\r\n                    )}\r\n                </Row>\r\n                {this.state.showProfileImageUploader && (\r\n                  <div>\r\n                    <Row>\r\n                      <Button\r\n                        onClick={() =>\r\n                          this.profileImageUploader.upload(\r\n                            this.props.initialValues.doctorPdNumber\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        // disabled={pristine || submitting}\r\n                      >\r\n                        Change\r\n                      </Button>\r\n                    </Row>\r\n                    <Row>\r\n                      <ProfileImageUploadForm\r\n                        onRef={ref => (this.profileImageUploader = ref)}\r\n                        onUploadComplete={status =>\r\n                          this.setState(\r\n                            {\r\n                              displayToast: true,\r\n                              toastMessage:\r\n                                \"Profile image updated successfully.\",\r\n                              disableButtonActions: false\r\n                            },\r\n                            () => this.props.reset()\r\n                          )\r\n                        }\r\n                      />\r\n                    </Row>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            onClose={this._handleClose}\r\n            message={<span id=\"message-id\">{this.state.toastMessage}</span>}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getSpecialization: () => {\r\n      dispatch(Action.getSpecialization());\r\n    },\r\n    getDoctorDetail: pdNumber => {\r\n      dispatch(Action.getDoctorDetail(pdNumber));\r\n    },\r\n    clearDoctorDetail: () => {\r\n      dispatch(Action.clearDoctorDetail());\r\n    }\r\n  };\r\n}\r\nfunction mapStateToProps(state) {\r\n  const doctorState = state.doctor;\r\n  const defaultData =\r\n    !UNDERSCORE.isEmpty(doctorState) &&\r\n    !UNDERSCORE.isEmpty(doctorState.doctorDetail)\r\n      ? doctorState.doctorDetail\r\n      : {};\r\n  return {\r\n    specializations: !UNDERSCORE.isEmpty(doctorState)\r\n      ? doctorState.specialization\r\n      : [],\r\n    initialValues: {\r\n      ...defaultData\r\n    },\r\n    isUpdate: !UNDERSCORE.isEmpty(defaultData)\r\n  };\r\n}\r\nCreateDoctorCard.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nCreateDoctorCard = reduxForm({\r\n  form: \"doctor\",\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: true,\r\n  validate\r\n})(withTranslation(\"common\")(CreateDoctorCard));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateDoctorCard));\r\n","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport CreateDoctorCard from './components/CreateDoctorCard';\r\n\r\nconst CreateDoctorPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <CreateDoctorCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateDoctorPage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateDoctorCard from './components/CreateDoctorCard';\n\nconst EditDoctor = () => (\n  <Container className=\"dashboard\">\n    <Row>\n      <CreateDoctorCard />\n    </Row>\n  </Container>\n);\n\nexport default EditDoctor;\n","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/doctorActions\";\r\nimport UserBlockToggle from \"../../../../components/user/userBlockToggle\";\r\n\r\nclass ViewDoctorsContainer extends React.Component {\r\n  componentWillMount() {\r\n    this._onLoad();\r\n    this.props.getSpecialization();\r\n  }\r\n\r\n  _onLoad = () => {\r\n    this.props.getDoctorList();\r\n  };\r\n\r\n  renderDoctorNameCell = text => (\r\n    <div style={{ display: \"flex\", width: 200 }}>\r\n      <strong>{text.doctorDetails.fullName}</strong>\r\n    </div>\r\n  );\r\n\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/doctorManagement/editDoctor/${data.doctorPdNumber}`\r\n    );\r\n  };\r\n\r\n  _renderToggle = row => {\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button\r\n          className=\"icon\"\r\n          id=\"TooltipBottom\"\r\n          color=\"primary\"\r\n          onClick={() => this._handleEditHospital(row)}\r\n        >\r\n          <span class=\"lnr lnr-pencil\" />\r\n        </Button>\r\n        <UserBlockToggle\r\n          data={row}\r\n          status={row.doctorDetails.status}\r\n          id={row.userId}\r\n          loadData={this._onLoad}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { doctorList } = this.props;\r\n    const columns = [\r\n      {\r\n        id: \"name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Name\",\r\n        render: text => this.renderDoctorNameCell(text)\r\n      },\r\n      {\r\n        id: \"doctorPdNumber\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Doctor Id\",\r\n        render: text => text.doctorPdNumber\r\n      },\r\n      {\r\n        id: \"specialization\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Specialization\"\r\n      },\r\n      {\r\n        id: \"phone\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Contact\",\r\n        render: text => text.doctorDetails.username\r\n      },\r\n      {\r\n        id: \"degree\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Education\",\r\n        render: text => text.degree\r\n      },\r\n      {\r\n        id: \"action\",\r\n        label: \"Operation\",\r\n        render: text => this._renderToggle(text)\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={doctorList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const doctorState = state.doctor;\r\n  return {\r\n    specializations: !UNDERSCORE.isEmpty(doctorState)\r\n      ? doctorState.specialization\r\n      : [],\r\n    doctorList:\r\n      !UNDERSCORE.isEmpty(doctorState) &&\r\n      !UNDERSCORE.isEmpty(doctorState.doctorList)\r\n        ? doctorState.doctorList.doctors\r\n        : [],\r\n    totalCount:\r\n      !UNDERSCORE.isEmpty(doctorState) &&\r\n      !UNDERSCORE.isEmpty(doctorState.doctorList)\r\n        ? doctorState.doctorList.totalRecords\r\n        : 0\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getSpecialization: () => {\r\n      dispatch(Action.getSpecialization());\r\n    },\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    }\r\n  };\r\n}\r\n\r\nViewDoctorsContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewDoctorsContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewDoctorsContainer from './container/ViewDoctorsContainer';\r\n\r\nconst ExamplePage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Doctor Management</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewDoctorsContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ExamplePage;\r\n","export const emptyField = 'Please select the above value';\n\nexport const addHospital = {\n\tname: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tlocation: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tstreetName: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tbuilding: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\taddress: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 240,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tlandmark: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 40,\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tpincode: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t\tlength: 6,\n\t\terrorText: 'Enter valid mobile number it should be 6 digit'\n\t},\n}\n","import React, { PureComponent } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Button,\n  ButtonToolbar,\n  Container\n} from \"reactstrap\";\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SaveIcon from 'mdi-react/ContentSaveIcon'\nimport { save, update } from \"../../../../redux/actions/hospitalActions\";\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\nimport { addHospital } from \"../constants/hospitalForm\";\nimport { UNDERSCORE } from \"../../../../constants/utils\";\nimport * as Action from \"../../../../redux/actions/hospitalActions\";\n\nconst renderField = ({\n  input,\n  placeholder,\n  type,\n  meta: { touched, error }\n}) => (\n  <div className=\"form__form-group-input-wrap form__form-group-input-wrap--error-above\">\n    <input {...input} placeholder={placeholder} type={type} />\n    {touched && error && (\n      <span className=\"form__form-group-error\">{error}</span>\n    )}\n  </div>\n);\n\nrenderField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\n\nrenderField.defaultProps = {\n  placeholder: \"\",\n  meta: null,\n  type: \"text\"\n};\n\nclass CreateHospitalCard extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      showPassword: false,\n      saveData: {\n        name: \"\",\n        address: \"\",\n        location: \"\",\n        pincode: \"\",\n        landmark: \"\"\n      },\n      hospitalId: \"\",\n      displayToast: false,\n      toastMessage: \"\",\n      errorText: {}\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const pathName = location.pathname;\n    if (pathName.includes(\"edit\")) {\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\n      this.props.getHospitalDetail(pdNumber);\n    } else {\n      this.props.clearHospitalDetail();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, initialValues } = prevProps;\n    const pathName = location.pathname;\n    if (!pathName.includes(\"edit\") && !UNDERSCORE.isEmpty(initialValues)) {\n      this.props.clearHospitalDetail();\n    }\n  }\n  _handleChange = (key, event) => {\n    const { saveData } = this.state;\n    saveData[key] = event.target.value;\n    this.setState({ saveData });\n  };\n\n  _handleSubmit = ({\n    name = \"\",\n    streetName = \"\",\n    building = \"\",\n    location = \"\",\n    landmark = \"\",\n    pincode = 0,\n    latitude = 0,\n    longitude = 0\n  }) => {\n    const saveData = {\n      name,\n      streetName,\n      building,\n      location,\n      landmark,\n      pincode,\n      latitude,\n      longitude\n    };\n    const errorText = {};\n    Object.keys(saveData).forEach(key =>\n      this.validateTextData(saveData[key], key, saveData, errorText)\n    );\n    this._validatePincode(saveData.pincode, errorText);\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\n    if (error !== 0) {\n      throw new SubmissionError(errorText);\n    }\n    const data = {\n      name: saveData.name,\n      address: JSON.stringify({\n        streetName: saveData.streetName,\n        building: saveData.building\n      }),\n      location: saveData.location,\n      landmark: saveData.landmark,\n      pincode: saveData.pincode,\n      latLng: [latitude, longitude]\n    };\n    if (this.props.isUpdate) {\n      const id = this.props.initialValues._id;\n      const pdNumber = this.props.initialValues.hospitalPdNumber;\n      update(data, id)\n        .then(res => res.json())\n        .then(res => {\n          this.setState(\n            { displayToast: true, toastMessage: res.message },\n            () => {\n              if (res.status) {\n                this.props.getHospitalDetail(pdNumber);\n              }\n            }\n          );\n        });\n    } else {\n      save(data)\n        .then(res => res.json())\n        .then(res => {\n          this.setState(\n            { displayToast: true, toastMessage: res.message },\n            () => {\n              if (res.status) {\n                this.props.reset();\n              }\n            }\n          );\n        });\n    }\n  };\n\n  validateTextData = (value, key, editValue, errorText) => {\n    const type = addHospital[key] ? addHospital[key].type : \"other\";\n    if (type !== \"other\") {\n      if (UNDERSCORE.isEmpty(value)) {\n        editValue[key] = value;\n        errorText[key] = addHospital[key].emptyField;\n        return;\n      }\n      if (value.length <= addHospital[key].length) {\n        errorText[key] = null;\n        editValue[key] = value;\n      }\n    }\n  };\n  _validatePincode = (value, errorText) => {\n    if (\n      value &&\n      value.length !== 0 &&\n      value.length !== addHospital[\"pincode\"].length\n    ) {\n      errorText[\"pincode\"] = addHospital[\"pincode\"].errorText;\n    }\n  };\n  _handleClose = () => {\n    this.setState({ displayToast: false });\n  };\n\n  render() {\n    const { reset, handleSubmit } = this.props;\n\n    return (\n      <Container>\n        <Card>\n          <CardBody>\n            <form\n              className=\"form form--horizontal\"\n              onSubmit={handleSubmit(this._handleSubmit)}\n            >\n              <Col>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Hospital Name</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"name\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Hospital Name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Street name</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"streetName\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Street name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Building</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"building\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Building\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Location</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"location\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Location\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Latitude</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"latitude\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"latitude\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Longitude</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"longitude\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"Longitude\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Pincode</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"pincode\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"Pincode\"\n                      onChange={value => this._handleChange(\"pincode\", value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form__form-group\">\n                  <span className=\"form__form-group-label\">Landmark</span>\n                  <div className=\"form__form-group-field\">\n                    <Field\n                      name=\"landmark\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Landmark\"\n                    />\n                  </div>\n                </div>\n              </Col>\n              <Col >\n                <ButtonToolbar className=\"form__button-toolbar\">\n                  <Button className=\"icon\" size=\"sm\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t<SaveIcon/>\n                    Save\n                  </Button>\n                  <Button type=\"button\" size=\"sm\" onClick={reset}>\n                    Cancel\n                  </Button>\n                </ButtonToolbar>\n              </Col>\n            </form>\n          </CardBody>\n        </Card>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          autoHideDuration={3000}\n          open={this.state.displayToast}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          onClose={this._handleClose}\n          message={<span id=\"message-id\">{this.state.toastMessage}</span>}\n        />\n      </Container>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const hospitalState = state.hospital;\n  let isUpdate = false;\n  const defaultData =\n    !UNDERSCORE.isEmpty(hospitalState) &&\n    !UNDERSCORE.isEmpty(hospitalState.hospitalDetail)\n      ? hospitalState.hospitalDetail\n      : {};\n  if (!UNDERSCORE.isEmpty(defaultData)) {\n    isUpdate = true;\n    const address = JSON.parse(defaultData.address);\n    defaultData.latitude = defaultData.latLng[0];\n    defaultData.longitude = defaultData.latLng[1];\n    defaultData.streetName = address.streetName;\n    defaultData.building = address.building;\n  }\n  return {\n    initialValues: { ...defaultData },\n    isUpdate\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getHospitalDetail: pdNumber => {\n      dispatch(Action.getHospitalDetail(pdNumber));\n    },\n    clearHospitalDetail: () => {\n      dispatch(Action.clearHospitalDetail());\n    }\n  };\n}\nCreateHospitalCard = reduxForm({\n  form: \"hospital\", // a unique identifier for this form\n  enableReinitialize: true,\n  validate\n})(withTranslation(\"common\")(CreateHospitalCard));\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(CreateHospitalCard));\n","import { post, get, put } from './fetch';\nimport Endpoint from './endpoints';\n\nexport function save(saveData){\n\treturn post(Endpoint.createHospital, saveData);\n}\nexport function update(saveData, id){\n\treturn put(`${Endpoint.updateHospital}/${id}`, saveData);\n}\nexport  function getHospitalList (location) {\n\tconst endpoint = `${Endpoint.getHospitalList}${location}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_HOSPITALLIST',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n};\n\nexport function getHospitalDetail(pdNumber){\n\tconst endpoint = `${Endpoint.getHospitalDetail}${pdNumber}`;\n\treturn function (dispatch){\n\t\treturn get(endpoint)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESPONSE_HOSPITALDETAIL',\n\t\t\t\tdata\n\t\t\t});\n\t\t});\n\t};\n}\nexport function clearHospitalDetail () {\n\treturn{\n\t\ttype: 'RESPONSE_HOSPITALDETAIL',\n\t\tdata:[],\n\t}\n}","import React from \"react\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport CreateHospitalCard from \"./components/CreateHospitalCard\";\r\n\r\nconst CreateHospitalPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Create Hospital</h3>\r\n      </Col>\r\n\t\t\t<CreateHospitalCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateHospitalPage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateHospitalCard from './components/CreateHospitalCard';\n\n\nconst EditHospitalPage = () => (\n  <Container className='dashboard'>\n    <Row>\n      <CreateHospitalCard />\n    </Row>\n  </Container>\n);\n\nexport default EditHospitalPage;\n","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/hospitalActions\";\r\n\r\nclass ViewHospitalsContainer extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getHospitalList(\"all\");\r\n  }\r\n\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/hospitalManagement/editHospital/${data.hospitalPdNumber}`\r\n    );\r\n  };\r\n\r\n  _renderOperation = data => {\r\n    return (\r\n      <Button className=\"icon\" color=\"primary\" onClick={() => this._handleEditHospital(data)}>\r\n        <span class=\"lnr lnr-pencil\" />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { hospitalList } = this.props;\r\n    const columns = [\r\n      {\r\n        id: \"hospitalPdNumber\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Hospital Id\",\r\n        render: text => text.hospitalPdNumber\r\n      },\r\n      {\r\n        id: \"name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Hospital Name\"\r\n      },\r\n      {\r\n        id: \"location\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Location\"\r\n      },\r\n      {\r\n        id: \"pincode\",\r\n        label: \"Pincode\",\r\n        numeric: false,\r\n        disablePadding: true\r\n      },\r\n      {\r\n        id: \"landmark\",\r\n        label: \"Landmark\",\r\n        numeric: false,\r\n        disablePadding: true\r\n      },\r\n      { label: \"Action\", render: text => this._renderOperation(text) }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <MaterialTable columns={columns} data={hospitalList} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const hospitalState = state.hospital;\r\n  return {\r\n    hospitalList:\r\n      !UNDERSCORE.isEmpty(hospitalState) &&\r\n      !UNDERSCORE.isEmpty(hospitalState.hospitalList)\r\n        ? hospitalState.hospitalList.hospitals\r\n        : [],\r\n    totalCount:\r\n      !UNDERSCORE.isEmpty(hospitalState) &&\r\n      !UNDERSCORE.isEmpty(hospitalState.hospitalList)\r\n        ? hospitalState.hospitalList.totalRecords\r\n        : 0\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getHospitalList: location => {\r\n      dispatch(Action.getHospitalList(location));\r\n    }\r\n  };\r\n}\r\n\r\nViewHospitalsContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewHospitalsContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewHospitalsContainer from './container/ViewHospitalsContainer';\r\nimport { VIEW_HOSPITALS } from '../../../constants/strings';\r\n\r\nconst ViewHospitalPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_HOSPITALS}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewHospitalsContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewHospitalPage;\r\n","export const emptyField = 'Atleast add one token for the schedule';\n\nexport const addSchedule = {\n\thospital: {\n\t\ttype: 'select',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tdoctor: {\n\t\ttype: 'select',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\tweekday: {\n\t\ttype: 'text',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\tfromTime: {\n\t\ttype: 'date',\n\t\tdbKey: 'startTime',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t},\n\ttoTime: {\n\t\ttype: 'date',\n\t\tdbKey: 'endTime',\n\t\temptyField: 'Field cannot be empty',\n\t\terrorText: 'Numbers and special characters are not allowed'\n\t}\n}\n\nexport const addToken = {\n\tstartTime: {\n\t\ttype: 'date',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\tendTime: {\n\t\ttype: 'date',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\ttype: {\n\t\ttype: 'select',\n\t\tdbKey: 'tokenType',\n\t\temptyField: 'Field cannot be empty',\n\t},\n\ttokenNo: {\n\t\ttype: 'number',\n\t\temptyField: 'Field cannot be empty',\n\t}\n}","import {\n\tpost,\n\tget,\n\tput,\n\tdel\n} from './fetch';\nimport Endpoint from './endpoints';\n\nexport function getDoctorList() {\n\treturn function (dispatch) {\n\t\treturn get(Endpoint.getDoctorMasterList)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_DOCTOR_MASTERLIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function getHospitalList() {\n\treturn function (dispatch) {\n\t\treturn get(Endpoint.getHospitalMasterList)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_HOSPITAL_MASTERLIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function getScheduleList(doctorId) {\n\tconst endpoint = `${Endpoint.getScheduleList}${doctorId}`;\n\treturn function (dispatch) {\n\t\treturn get(endpoint)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_SCHEDULE_LIST',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\nexport function clearScheduleList() {\n\treturn {\n\t\ttype: 'RESPONSE_SCHEDULE_LIST',\n\t\tdata: [],\n\t};\n};\n\nexport function getScheduleDetail(id) {\n\tconst endpoint = `${Endpoint.getScheduleDetail}${id}`;\n\treturn function (dispatch) {\n\t\treturn get(endpoint)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport function clearScheduleDetail(dispatch) {\n\t// return () => {\n\t// \treturn new Promise((resolve) => { \n\t// \t\t\tdispatch({\n\t// \t\t\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t// \t\t\t\tdata: [],\n\t// \t\t\t});\n\t// \t\t\tresolve();\n\t// \t});\n\t// }\n\treturn {\n\t\ttype: 'RESPONSE_SCHEDULE_DETAIL',\n\t\tdata: [],\n\t}\n};\n\nexport function save(saveData) {\n\treturn post(Endpoint.createSchedule, saveData);\n}\n\nexport function updateSchedule(data, scheduleId) {\n\tconst endpoint = `${Endpoint.updateSchedule}${scheduleId}`;\n\treturn put(endpoint, data);\n}\nexport function deleteSchedule(scheduleId) {\n\tconst endpoint = `${Endpoint.deleteSchedule}${scheduleId}`;\n\treturn del(endpoint);\n}","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\n\r\nclass TimePickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    timeMode: PropTypes.bool.isRequired\r\n  };\r\n\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  setOpen = ({ open }) => {\r\n    this.setState({ open });\r\n  };\r\n\r\n  toggleOpen = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ open: !prevState.open }));\r\n  };\r\n\r\n  render() {\r\n\t\tconst { value, onChange, placeholder } = this.props;\r\n\t\tconst data = UNDERSCORE.isEmpty(value) ? { value : UNDERSCORE.isEmpty(value)} : {};\r\n    return (\r\n      <Flatpickr\r\n\t\t\t\toptions={{enableTime: true, noCalendar: true, dateFormat: \"H:i\"}}\r\n\t\t\t\tplaceholder={placeholder}\r\n        onChange={date => {\r\n          onChange(date);\r\n\t\t\t\t}}\r\n\t\t\t\t{...data}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst renderTimePickerField = props => {\r\n  const { input, meta, timeMode, width } = props;\r\n  return (\r\n    <div className=\"form__form-group-input-wrap\">\r\n      <div style={{ width: width }}>\r\n        <TimePickerField {...input} timeMode={timeMode} />\r\n      </div>\r\n      {meta.touched && meta.error && (\r\n        <span className=\"form__form-group-error\" style={{ width: width }}>\r\n          {meta.error}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTimePickerField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  timeMode: PropTypes.bool\r\n};\r\n\r\nrenderTimePickerField.defaultProps = {\r\n  timeMode: false\r\n};\r\n\r\nexport default renderTimePickerField;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ToggleButtonField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    defaultChecked: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.bool,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultChecked: false,\r\n\t\tdisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { onChange, defaultChecked } = this.props;\r\n    onChange(defaultChecked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name, disabled, value, onChange,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"toggle-btn\">\r\n        <input\r\n          className=\"toggle-btn__input\"\r\n          type=\"checkbox\"\r\n          name={name}\r\n          onChange={onChange}\r\n          checked={value}\r\n          disabled={disabled}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"toggle-btn__input-label\"\r\n          onClick={() => onChange(!value)}\r\n        >Toggle\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderToggleButtonField = (props) => {\r\n\tconst { input, defaultChecked, disabled } = props;\r\n  return (\r\n    <ToggleButtonField\r\n      {...input}\r\n      defaultChecked={defaultChecked}\r\n\t\t\tdisabled={disabled}\r\n    />\r\n  );\r\n};\r\n\r\nrenderToggleButtonField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n\t\tname: PropTypes.string,\r\n\t\tvalue: PropTypes.bool,\r\n  }).isRequired,\r\n  defaultChecked: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nrenderToggleButtonField.defaultProps = {\r\n  defaultChecked: false,\r\n  disabled: false,\r\n};\r\n\r\nexport default renderToggleButtonField;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  ButtonToolbar\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { addSchedule, emptyField } from \"../constants/AddScheduleConfig\";\r\nimport { CREATE_SCHEDULE, EDIT_SCHEDULE } from \"../../../../constants/strings\";\r\nimport * as Action from \"../../../../redux/actions/scheduleActions\";\r\nimport validate from \"../../../../components/Form/FormValidation/components/validate\";\r\nimport RenderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport renderTimePickerField from \"../../../../components/shared/components/form/TimePicker\";\r\nimport renderToggleButtonField from \"../../../../components/shared/components/form/ToggleButton\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst moment = require(\"moment\");\r\nconst weekDays = [\r\n  {\r\n    value: \"Mon\",\r\n    label: \"MON\"\r\n  },\r\n  {\r\n    value: \"Tue\",\r\n    label: \"TUE\"\r\n  },\r\n  {\r\n    value: \"Wed\",\r\n    label: \"WED\"\r\n  },\r\n  {\r\n    value: \"Thu\",\r\n    label: \"THU\"\r\n  },\r\n  {\r\n    value: \"Fri\",\r\n    label: \"FRI\"\r\n  },\r\n  {\r\n    value: \"Sat\",\r\n    label: \"SAT\"\r\n  },\r\n  {\r\n    value: \"Sun\",\r\n    label: \"SUN\"\r\n  }\r\n];\r\nconst TokenType = [\r\n  {\r\n    label: \"PREMIUM\",\r\n    value: \"PREMIUM\"\r\n  },\r\n  {\r\n    label: \"REGULAR\",\r\n    value: \"REGULAR\"\r\n  }\r\n];\r\n\r\nconst fastrack = {\r\n  number: 0,\r\n  type: \"FASTTRACK\",\r\n  time: \"Can visit on your arival\"\r\n};\r\n\r\nconst emptyToken = {\r\n  id: 0,\r\n  number: \"\",\r\n  type: {},\r\n  time: \"\",\r\n  startTime: null,\r\n  endTime: null,\r\n  showSnackBar: false,\r\n  snackBarMessage: \"\"\r\n};\r\n\r\nconst renderField = ({\r\n  input,\r\n  placeholder,\r\n  type,\r\n  width,\r\n  disabled,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <div className=\"form__form-group-input-wrap form__form-group-input-wrap--error-above\">\r\n      <div style={{ width: width }}>\r\n        <input\r\n          {...input}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          disabled={disabled}\r\n        />\r\n        {touched && error && (\r\n          <span className=\"form__form-group-error\">{error}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass CreateScheduleCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tokenList: [emptyToken],\r\n      isFastrack: false,\r\n      existTokens: [],\r\n      updated: false,\r\n      deleteTokens: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    this.props.getDoctorList();\r\n    this.props.getHospitalList();\r\n    if (pathName.includes(\"edit\")) {\r\n      const pdNumber = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n      this.props.getScheduleDetail(pdNumber);\r\n    } else {\r\n      this.props.clearScheduleDetail();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.isUpdate &&\r\n      UNDERSCORE.isEmpty(prevState.existTokens) &&\r\n      !prevState.updated\r\n    ) {\r\n      return { existTokens: nextProps.initialValues.tokens };\r\n    } else return null;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isUpdate && !prevState.updated) {\r\n      const { isFastrack, dataList } = this._decodeTokenList(\r\n        this.props.initialValues.tokens\r\n\t\t\t);\r\n\t\t\tthis._handleFastrack(isFastrack);\r\n      this.setState({ isFastrack, existTokens: dataList, updated: true });\r\n\t\t}\r\n  }\r\n  _decodeTokenList = tokenList => {\r\n    let isFastrack = false;\r\n    const dataList = [];\r\n    tokenList &&\r\n      tokenList.forEach((map, index) => {\r\n        if (UNDERSCORE.isEqual(map, fastrack)) {\r\n          isFastrack = true;\r\n        }\r\n        if (!UNDERSCORE.isEqual(map, fastrack)) {\r\n          dataList.push({\r\n            id: index,\r\n            number: map.number,\r\n            type: map.type,\r\n            startTime: map.time.split(\" - \")[0],\r\n            endTime: map.time.split(\" - \")[1]\r\n          });\r\n        }\r\n      });\r\n    return {\r\n      isFastrack,\r\n      dataList\r\n    };\r\n  };\r\n  _handleSubmit = ({\r\n    doctor = \"\",\r\n    hospital = \"\",\r\n    weekday = \"\",\r\n    isFastrack = false,\r\n    fromTime = \"\",\r\n    toTime = \"\"\r\n  }) => {\r\n    const editValue = {\r\n      doctor,\r\n      hospital,\r\n      weekday,\r\n      fromTime,\r\n      toTime\r\n    };\r\n    if (this.props.isUpdate) {\r\n      return this._updateSchedule();\r\n    } else {\r\n      return this._addSchedule(editValue, isFastrack);\r\n    }\r\n  };\r\n  _updateSchedule = () => {\r\n    const { deleteTokens, tokenList, isFastrack } = this.state;\r\n    // const errorText = {};\r\n    const addTokens = this._parseToken(tokenList, false);\r\n    const token = {\r\n      deleteTokens,\r\n      addTokens\r\n    };\r\n    if (this.props.initialValues.isFastrack !== isFastrack) {\r\n      if (isFastrack) {\r\n        // const addTokenList = addTokens.push(fastrack)\r\n        token.addTokens.push(fastrack);\r\n      } else {\r\n        deleteTokens.push(0);\r\n      }\r\n    }\r\n\r\n    const { location } = this.props;\r\n    const pathName = location.pathname;\r\n    const scheduleId = pathName.split(\"/\")[pathName.split(\"/\").length - 1];\r\n    if (\r\n      UNDERSCORE.isEmpty(token.addTokens) &&\r\n      UNDERSCORE.isEmpty(token.deleteTokens)\r\n    ) {\r\n      return;\r\n    }\r\n    Action.updateSchedule(token, scheduleId)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.props.getScheduleDetail(scheduleId);\r\n        this.setState({\r\n          showSnackBar: true,\r\n          snackBarMessage: response.message\r\n        });\r\n      });\r\n  };\r\n  _addSchedule = (editValue, isFastrack) => {\r\n    const { tokenList } = this.state;\r\n    const errorText = {};\r\n    Object.keys(editValue).forEach(key =>\r\n      this._validateScheduleFields(key, editValue[key], errorText)\r\n    );\r\n    this._validateTokens(this._parseToken(tokenList, isFastrack), errorText);\r\n    const error = Object.keys(errorText).filter(key => !!errorText[key]).length;\r\n    if (error !== 0) {\r\n      if (!UNDERSCORE.isEmpty(errorText.tokens)) {\r\n        this.setState({ errorToken: errorText.tokens });\r\n      } else {\r\n        this.setState({ errorToken: \"\" });\r\n      }\r\n      throw new SubmissionError(errorText);\r\n    }\r\n    // this._validateTokens(this._parseToken(tokenList, fastrack));\r\n    editValue.tokens = this._parseToken(tokenList, fastrack);\r\n    editValue.startTime = moment(editValue.fromTime[0]).format(\"hh:mm A\");\r\n    editValue.endTime = moment(editValue.toTime[0]).format(\"hh:mm A\");\r\n    editValue.hospitalId = this.findIdInList(\r\n      editValue.hospital.value,\r\n      this.props.hospitalList,\r\n      \"hospitalId\"\r\n    );\r\n    editValue.doctorId = this.findIdInList(\r\n      editValue.doctor.value,\r\n      this.props.doctorList,\r\n      \"doctorId\"\r\n    );\r\n    editValue.weekday = editValue.weekday.value;\r\n    this.setState({ active: true });\r\n    Action.save(editValue)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.setState({\r\n          showSnackBar: true,\r\n          snackBarMessage: response.message\r\n        });\r\n      });\r\n  };\r\n  findIdInList = (value, list, key) => {\r\n    return list.filter(data => data.pdNumber === value)[0][key];\r\n  };\r\n  _parseList = (dataList, key, id) => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data[key],\r\n          label: data.name,\r\n          id: data[id]\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  _parseToken = (tokenList, fastrack) => {\r\n    const dataList = [];\r\n    tokenList.forEach(token => {\r\n      if (\r\n        !UNDERSCORE.isEmpty(token.number) &&\r\n        !UNDERSCORE.isEmpty(token.type) &&\r\n        !UNDERSCORE.isEmpty(token.startTime) &&\r\n        !UNDERSCORE.isEmpty(token.endTime)\r\n      ) {\r\n        const startTime = moment(token.startTime).format(\"hh:mm A\");\r\n        const endTime = moment(token.endTime).format(\"hh:mm A\");\r\n        const data = {\r\n          number: parseInt(token.number),\r\n          type: token.type,\r\n          time: `${startTime} - ${endTime}`\r\n        };\r\n        dataList.push(data);\r\n      }\r\n    });\r\n    if (fastrack) {\r\n      dataList.push({\r\n        number: 0,\r\n        type: \"FASTTRACK\",\r\n        time: \"Can visit on your arival\"\r\n      });\r\n    }\r\n    return dataList;\r\n  };\r\n\r\n  _validateScheduleFields = (key, value, errorText) => {\r\n    if (UNDERSCORE.isEmpty(value)) {\r\n      errorText[key] = addSchedule[key].emptyField;\r\n      if (addSchedule[key].type === \"date\" && !!value) {\r\n        errorText[key] = \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  _validateTokens = (tokenList, errorText) => {\r\n    if (tokenList.length === 0) {\r\n      errorText.tokens = emptyField;\r\n    }\r\n  };\r\n\r\n  _handleAddToken = index => {\r\n    const { tokenList } = this.state;\r\n    tokenList.push({\r\n      id: index,\r\n      tokenNo: \"\",\r\n      tokenType: \"\",\r\n      tokenTime: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    this.setState({\r\n      tokenList\r\n    });\r\n  };\r\n\r\n  _handleDelete = () => {\r\n    const id = this.props.initialValues.id;\r\n    Action.deleteSchedule(id).then(result => {\r\n      if (result) {\r\n        this.context.router.history.push(\r\n          `/pages/scheduleManagement/viewSchedules`\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  _handleDeleteToken = value => {\r\n    const { tokenList } = this.state;\r\n    if (tokenList.length === 1) {\r\n      return;\r\n    }\r\n    const updatedToken = tokenList.filter(\r\n      data => !UNDERSCORE.isEqual(data, value)\r\n    );\r\n    this.setState({ tokenList: updatedToken });\r\n  };\r\n\r\n  _handleTokenChange = (index, key, event) => {\r\n    const { tokenList } = this.state;\r\n    tokenList.forEach(token => {\r\n      if (token.id === index) {\r\n        token[key] = event;\r\n      }\r\n    });\r\n  };\r\n  _handleExistDeleteToken = data => {\r\n    const { existTokens, deleteTokens } = this.state;\r\n    deleteTokens.push(data.number);\r\n    const dataList = existTokens.filter(map => !UNDERSCORE.isEqual(data, map));\r\n    this.setState({\r\n      deleteTokens,\r\n      existTokens: dataList\r\n    });\r\n  };\r\n\r\n  _handleFastrack = value => {\r\n    this.setState({\r\n      isFastrack: value\r\n    });\r\n  };\r\n\r\n  renderTokenList = () => {\r\n\t\tconst { tokenList, existTokens } = this.state;\r\n\t\tconsole.log('tokenList')\r\n\t\tconsole.log(tokenList)\r\n\t\tconsole.log(existTokens)\r\n    return (\r\n      <div>\r\n        {existTokens &&\r\n          existTokens.map(\r\n            data =>\r\n              data.number !== 0 && (\r\n                <div>\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.type}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 100, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.number}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.startTime}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                      <input\r\n                        width={100}\r\n                        value={data.endTime}\r\n                        type=\"text\"\r\n                        disabled={this.props.isUpdate}\r\n                      />\r\n                    </div>\r\n\r\n                    <Button\r\n                      className=\"icon btn-danger\"\r\n                      onClick={() => this._handleExistDeleteToken(data)}\r\n                    >\r\n                      <span class=\"lnr lnr-trash text-white\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )\r\n          )}\r\n        {tokenList &&\r\n          tokenList.map((data, index) => (\r\n            <div>\r\n              <div>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name={\"type\" + index}\r\n                      component={RenderSelectField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(index, \"type\", event.value)\r\n                      }\r\n                      type=\"text\"\r\n                      placeholder=\"Type\"\r\n                      width={100}\r\n                      options={TokenType}\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 100, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name={\"number\" + index}\r\n                      component={renderField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"number\",\r\n                          event.target.value\r\n                        )\r\n                      }\r\n                      type=\"number\"\r\n                      value={data.number}\r\n                      placeholder=\"Token No\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name=\"startTime\"\r\n                      placeholder=\"Start Time\"\r\n                      component={renderTimePickerField}\r\n                      value={data.startTime}\r\n                      onChange={event => {\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"startTime\",\r\n                          moment(event[0])\r\n                        );\r\n                      }}\r\n                      width={100}\r\n                      timeMode\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: 120, padding: \"0px 8px\" }}>\r\n                    <Field\r\n                      name=\"endTime\"\r\n                      component={renderTimePickerField}\r\n                      onChange={event =>\r\n                        this._handleTokenChange(\r\n                          index,\r\n                          \"endTime\",\r\n                          moment(event[0])\r\n                        )\r\n                      }\r\n                      placeholder=\"End time\"\r\n                      width={100}\r\n                      timeMode\r\n                    />\r\n                  </div>\r\n\r\n                  <Button\r\n                    className=\"icon btn-danger\"\r\n                    onClick={() => this._handleDeleteToken(data)}\r\n                  >\r\n                    <span class=\"lnr lnr-trash text-white\" />\r\n                  </Button>\r\n                  {tokenList.length - 1 === index && (\r\n                    <Button\r\n                      className=\"icon btn-primary\"\r\n                      outline\r\n                      onClick={() => this._handleAddToken(index + 1)}\r\n                    >\r\n                      <span class=\"lnr lnr-plus-circle text-white\" />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  setEmptyData = columns => {\r\n    const data = [];\r\n    const obj = {};\r\n    columns.forEach(column => (obj[column.id] = \"\"));\r\n    data.push(obj);\r\n    return data;\r\n  };\r\n\r\n  _handleSnackBarClose = () => {\r\n    this.setState({ showSnackBar: false });\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit, isUpdate } = this.props;\r\n    const { errorToken } = this.state;\r\n    const doctorList = this._parseList(\r\n      this.props.doctorList,\r\n      \"pdNumber\",\r\n      \"doctorId\"\r\n    );\r\n    const hospitalList = this._parseList(\r\n      this.props.hospitalList,\r\n      \"pdNumber\",\r\n      \"hospitalid\"\r\n    );\r\n    const renderTimeField = isUpdate ? renderField : renderTimePickerField;\r\n    const renderSelectField = isUpdate ? renderField : RenderSelectField;\r\n    const title = isUpdate ? EDIT_SCHEDULE : CREATE_SCHEDULE;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n          </Col>\r\n        </Row>\r\n        <form\r\n          className=\"form form--horizontal\"\r\n          onSubmit={handleSubmit(this._handleSubmit)}\r\n        >\r\n          <Card>\r\n            <CardBody>\r\n              {!isUpdate && (\r\n                <div className=\"form__form-group\">\r\n                  <h5 className=\"bold-text\">Add Schedule</h5>\r\n                </div>\r\n              )}\r\n              <Row>\r\n                <Col md={12} sm={12}>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <ButtonToolbar className=\"form__button-toolbar\">\r\n                      {isUpdate && (\r\n                        <Button\r\n                          className=\"icon\"\r\n                          onClick={() => this._handleDelete()}\r\n                        >\r\n                          <span class=\"lnr lnr-trash\" /> Delete\r\n                        </Button>\r\n                      )}\r\n                      <Button color=\"primary\" type=\"submit\" size=\"sm\">\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        onClick={reset}\r\n                        disabled={pristine || submitting}\r\n                      >\r\n                        Clear\r\n                      </Button>\r\n                    </ButtonToolbar>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <div>\r\n                  <Col md={6} sm={12}>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Doctor</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"doctor\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          placeholder=\"Doctor\"\r\n                          width={240}\r\n                          options={doctorList}\r\n                          disabled={this.props.isUpdate}\r\n                          renderId={true}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Hospital</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"hospital\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          renderId={true}\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"Hospital\"\r\n                          width={240}\r\n                          options={hospitalList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Weekday</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"weekday\"\r\n                          component={renderSelectField}\r\n                          type=\"text\"\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"Weekday\"\r\n                          width={120}\r\n                          options={weekDays}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Start time</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"fromTime\"\r\n                          component={renderTimeField}\r\n                          placeholder=\"Start time\"\r\n                          disabled={this.props.isUpdate}\r\n                          timeMode\r\n                          width={120}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">End time</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"toTime\"\r\n                          component={renderTimeField}\r\n                          disabled={this.props.isUpdate}\r\n                          placeholder=\"End time\"\r\n                          timeMode\r\n                          width={120}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </div>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div>\r\n                    <div className=\"form__form-group\">\r\n                      <h5 className=\"bold-text\">Add Token</h5>\r\n                      {errorToken && (\r\n                        <span className=\"form__form-group-error\">\r\n                          {errorToken}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form__form-group\">\r\n                      <span className=\"form__form-group-label\">Fastrack</span>\r\n                      <div className=\"form__form-group-field\">\r\n                        <Field\r\n                          name=\"isFastrack\"\r\n                          component={renderToggleButtonField}\r\n                          placeholder=\"Fastrack\"\r\n                          value={this.state.isFastrack}\r\n                          onChange={this._handleFastrack}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {this.renderTokenList()}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              autoHideDuration={3000}\r\n              open={this.state.showSnackBar}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              onClose={this._handleSnackBarClose}\r\n              message={\r\n                <span id=\"message-id\">{this.state.snackBarMessage}</span>\r\n              }\r\n            />\r\n          </Card>\r\n        </form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const scheduleState = state.schedule;\r\n  const defaultData =\r\n    !UNDERSCORE.isEmpty(scheduleState) &&\r\n    !UNDERSCORE.isEmpty(scheduleState.scheduleDetail)\r\n      ? scheduleState.scheduleDetail\r\n      : {};\r\n\r\n  return {\r\n    doctorList: scheduleState.doctorMasterList,\r\n    hospitalList: scheduleState.hospitalMasterList,\r\n    scheduleList:\r\n      !UNDERSCORE.isEmpty(scheduleState) &&\r\n      !UNDERSCORE.isEmpty(scheduleState.scheduleList)\r\n        ? scheduleState.scheduleList\r\n        : [],\r\n    initialValues: { ...defaultData },\r\n    isUpdate: !UNDERSCORE.isEmpty(defaultData)\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    },\r\n    getHospitalList: () => {\r\n      dispatch(Action.getHospitalList());\r\n    },\r\n    getScheduleList: doctorId => {\r\n      dispatch(Action.getScheduleList(doctorId));\r\n    },\r\n    getScheduleDetail: doctorId => {\r\n      dispatch(Action.getScheduleDetail(doctorId));\r\n    },\r\n    clearScheduleDetail: () => {\r\n      dispatch(Action.clearScheduleDetail());\r\n    }\r\n  };\r\n}\r\nCreateScheduleCard.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\nCreateScheduleCard = reduxForm({\r\n  form: \"doctor\",\r\n  validate,\r\n  enableReinitialize: true\r\n})(withTranslation(\"common\")(CreateScheduleCard));\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateScheduleCard));\r\n","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport CreateScheduleCard from './components/CreateScheduleCard';\r\n\r\n\r\nconst CreateSchedulePage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <CreateScheduleCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CreateSchedulePage;\r\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport CreateScheduleCard from './components/CreateScheduleCard';\n\n\nconst EditSchedulePage = () => (\n  <Container className='dashboard'>\n    <Row>\n      <CreateScheduleCard />\n    </Row>\n  </Container>\n);\n\nexport default EditSchedulePage;","import React from \"react\";\r\nimport { Card, CardBody, Col, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MaterialTable from \"../../../../components/containers/Tables/MaterialTable\";\r\nimport RenderSelectField from \"../../../../components/shared/components/form/Select\";\r\nimport { UNDERSCORE } from \"../../../../constants/utils\";\r\nimport * as Action from \"../../../../redux/actions/scheduleActions\";\r\n\r\nclass ViewSchedulesContainer extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getDoctorList();\r\n    this.props.getHospitalList();\r\n    this.props.clearScheduleList();\r\n  }\r\n\r\n  _renderToggle = text => {\r\n    const color = text.status === \"ACTIVE\" ? false : true;\r\n    const tooltext = text.status === \"ACTIVE\" ? \"Block\" : \"Unblock\";\r\n    return (\r\n      <Tooltip title={tooltext}>\r\n        <Switch\r\n          checked={color}\r\n          onChange={() => this.handleToggle(text)}\r\n          value=\"checkedB\"\r\n          color=\"primary\"\r\n        />\r\n      </Tooltip>\r\n    );\r\n  };\r\n  _parseList = (dataList, key, id) => {\r\n    return dataList\r\n      ? dataList.map(data => ({\r\n          value: data[key],\r\n          label: data.name,\r\n          id: data[id]\r\n        }))\r\n      : [];\r\n  };\r\n\r\n  handleSelect = value => {\r\n    this.setState({ doctorId: value.id });\r\n    this.props.getScheduleList(value.id);\r\n  };\r\n  _handleEditHospital = data => {\r\n    this.context.router.history.push(\r\n      `/pages/scheduleManagement/editSchedule/${data._id}`\r\n    );\r\n  };\r\n\r\n  _renderOperation = data => {\r\n    return (\r\n      <Button\r\n        className=\"icon\"\r\n        color=\"primary\"\r\n        onClick={() => this._handleEditHospital(data)}\r\n      >\r\n        <span class=\"lnr lnr-pencil\" />\r\n      </Button>\r\n    );\r\n  };\r\n  render() {\r\n    const { scheduleList } = this.props;\r\n    const doctorList = this._parseList(\r\n      this.props.doctorList,\r\n      \"pdNumber\",\r\n      \"doctorId\"\r\n    );\r\n    const columns = [\r\n      {\r\n        label: \"Hospital Name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        render: text => text.hospital.name\r\n      },\r\n      { label: \"Weekday\", numeric: false, disablePadding: true, id: \"weekday\" },\r\n      {\r\n        label: \"Starttime\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        id: \"startTime\"\r\n      },\r\n      { label: \"Endtime\", numeric: false, disablePadding: true, id: \"endTime\" },\r\n      { label: \"Action\", render: text => this._renderOperation(text) }\r\n    ];\r\n\r\n    return (\r\n      <Col md={12}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"card__title\">\r\n              <div style={{ width: 200 }}>\r\n                <RenderSelectField\r\n                  name=\"doctor\"\r\n                  type=\"text\"\r\n                  placeholder=\"Doctor\"\r\n                  width={240}\r\n                  options={doctorList}\r\n                  renderId={true}\r\n                  onChange={value => this.handleSelect(value)}\r\n                  filter={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <MaterialTable columns={columns} data={scheduleList} />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const scheduleState = state.schedule;\r\n  return {\r\n    doctorList: scheduleState.doctorMasterList,\r\n    scheduleList:\r\n      !UNDERSCORE.isEmpty(scheduleState) &&\r\n      !UNDERSCORE.isEmpty(scheduleState.scheduleList)\r\n        ? scheduleState.scheduleList\r\n        : []\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDoctorList: () => {\r\n      dispatch(Action.getDoctorList());\r\n    },\r\n    getHospitalList: () => {\r\n      dispatch(Action.getHospitalList());\r\n    },\r\n    getScheduleList: doctorId => {\r\n      dispatch(Action.getScheduleList(doctorId));\r\n    },\r\n    clearScheduleList: () => {\r\n      dispatch(Action.clearScheduleList());\r\n    }\r\n  };\r\n}\r\n\r\nViewSchedulesContainer.contextTypes = {\r\n  router: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ViewSchedulesContainer));\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewSchedulesContainer from './container/ViewSchedulesContainer';\r\nimport { VIEW_SCHDULES } from '../../../constants/strings';\r\n\r\nconst ViewSchedulesPage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{VIEW_SCHDULES}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ViewSchedulesContainer />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default ViewSchedulesPage;\r\n","import Endpoints from '../../../redux/actions/endpoints'\n\nexport const sendPushMessage = (title, body, callback) => {\n  fetch(Endpoints.sendAnnouncement, {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify({ title, body })\n  }).then(res => callback(res.status));\n};\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { ButtonToolbar, Button } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { withTranslation } from 'react-i18next';\nimport { sendPushMessage } from './commons';\nimport PropTypes from 'prop-types';\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Title shouldn't be empty\";\n  }\n  if (!values.message) {\n    errors.message = \"Message shouldn't be empty\";\n  }\n  return errors;\n};\n\nconst _renderTitleInput = ({ input, meta: { touched, error }, label }) => (\n  <div className='form__form-group'>\n    <span className='form__form-group-label'>{label}</span>\n    <div className='form__form-group-field'>\n      <div className='form__form-group-input-wrap'>\n        <input {...input} />\n        {error && touched && (\n          <span className='form__form-group-error'>{error}</span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\n_renderTitleInput.propTypes = {\n  input: PropTypes.shape().isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  label: PropTypes.string.isRequired\n};\n\nconst _renderMessageInput = ({ input, meta: { touched, error }, label }) => (\n  <div className='form__form-group'>\n    <span className='form__form-group-label'>{label}</span>\n    <div className='form__form-group-field'>\n      <div className='form__form-group-input-wrap'>\n        <textarea {...input} />\n        {error && touched && (\n          <span className='form__form-group-error'>{error}</span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\n_renderMessageInput.propTypes = {\n  input: PropTypes.shape().isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  label: PropTypes.string.isRequired\n};\n\nclass AnnouncementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayToast: false,\n      displayMessage: ''\n    };\n  }\n\n  _handleSubmit = ({ title, message }) => {\n    sendPushMessage(title, message, httpStatus => {\n      this.props.reset();\n      this.props.afterPush(httpStatus);\n    });\n  };\n\n  render() {\n    const { pristine, reset, submitting, handleSubmit } = this.props;\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <form\n              className='form form--horizontal'\n              onSubmit={handleSubmit(this._handleSubmit)}\n            >\n              <Field name='title' label='Title' component={_renderTitleInput} />\n              <Field\n                name='message'\n                label='Message'\n                component={_renderMessageInput}\n              />\n              <ButtonToolbar className='form__button-toolbar'>\n                <Button\n                  color='primary'\n                  type='submit'\n                  disabled={pristine || submitting}\n                >\n                  Send\n                </Button>\n                <Button\n                  type='button'\n                  onClick={reset}\n                  disabled={pristine || submitting}\n                >\n                  Clear\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({ form: 'announcement_form', validate })(\n  withTranslation('common')(AnnouncementForm)\n);\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport MaterialTable from '../../../components/containers/Tables/MaterialTable';\nimport SendIcon from 'mdi-react/SendIcon';\n\nconst AnnouncementsTable = props => {\n  const columns = [\n    {\n      id: 'date',\n      label: 'Date'\n    },\n    {\n      id: 'title',\n      label: 'Title'\n    },\n    {\n      id: 'body',\n      label: 'Message'\n    },\n    {\n      id: 'action',\n      label: 'Action',\n      render: row => {\n        return (\n          <a onClick={() => props.onResendClick(row.title, row.body)}>\n            <SendIcon color=\"#304ffe\" />\n          </a>\n        );\n      }\n    }\n  ];\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Previous Announcements</h5>\n          </div>\n          <MaterialTable columns={columns} data={props.data} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default AnnouncementsTable;\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport AnnouncementForm from './components/AnnouncementForm';\r\nimport { ANNOUNCEMENT } from '../../constants/strings';\r\nimport AnnouncementsTable from './components/AnnouncementsTable';\r\nimport Endpoint from '../../redux/actions/endpoints';\r\nimport Moment from 'moment-timezone';\r\nimport { sendPushMessage } from './components/commons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport _ from 'underscore';\r\n\r\nclass AnnouncementPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this._fetchAnnouncements();\r\n  }\r\n\r\n  _displayToast(httpStatus) {\r\n    if (_.isEqual(httpStatus, 200)) {\r\n      this.setState({\r\n        displayToast: true,\r\n        displayMessage: 'Message sent successfully'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        displayToast: true,\r\n        displayMessage: 'Error sending message!'\r\n      });\r\n    }\r\n  }\r\n\r\n  _fetchAnnouncements() {\r\n    fetch(Endpoint.getAnnouncements)\r\n      .then(res => res.json())\r\n      .then(announcementsData => {\r\n        const announcements = announcementsData.map(announcement => {\r\n          const date = Moment.tz(announcement.date, 'Asia/Calcutta').format(\r\n            'DD-MMM-YYYY HH:mm:ss'\r\n          );\r\n          return {\r\n            ...announcement,\r\n            date\r\n          };\r\n        });\r\n        this.setState({ announcements });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{ANNOUNCEMENT}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <AnnouncementForm\r\n            afterPush={httpStatus => {\r\n              this._displayToast(httpStatus);\r\n            }}\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <AnnouncementsTable\r\n            data={this.state.announcements}\r\n            onResendClick={(title, body) => {\r\n              sendPushMessage(title, body, httpStatus => {\r\n                this._displayToast(httpStatus);\r\n              });\r\n            }}\r\n          />\r\n        </Row>\r\n        {this.state.displayToast && (\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id'\r\n            }}\r\n            onClose={() => this.setState({ displayToast: false })}\r\n            message={<span id=\"message-id\">{this.state.displayMessage}</span>}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementPage;\r\n","import React from 'react';\r\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Endpoints from '../../../../redux/actions/endpoints';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst renderTextInput = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  type,\r\n  placeholder\r\n}) => (\r\n  <div className='form__form-group'>\r\n    <span className='form__form-group-label'>{label}</span>\r\n    <div className='form__form-group-field'>\r\n      <div className='form__form-group-input-wrap'>\r\n        <input {...input} type={type} placeholder={placeholder} />\r\n        {error && touched && (\r\n          <span className='form__form-group-error'>{error}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nrenderTextInput.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string\r\n  }),\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired\r\n};\r\n\r\nconst _validateForm = values => {\r\n  const errors = {};\r\n  if (!values.mobile) {\r\n    errors.mobile = \"Mobile number can't be empty\";\r\n  }\r\n  if (!values.fullName) {\r\n    errors.fullName = \"Name can't be empty\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nclass CreateFrontdeskUserCard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  _handleSubmit = ({ mobile, fullName }) => {\r\n    const password = mobile;\r\n    fetch(Endpoints.createFrontdeskUser, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({ mobile, password, fullName })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const { reset, onResponse } = this.props;\r\n        if (res.status) {\r\n          reset();\r\n        }\r\n        onResponse(res);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit } = this.props;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>Create Front-Desk User</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={handleSubmit(this._handleSubmit)}\r\n            >\r\n              <Field\r\n                name='mobile'\r\n                type='text'\r\n                placeholder='Mobile'\r\n                label='Mobile'\r\n                component={renderTextInput}\r\n              />\r\n              <Field\r\n                name='fullName'\r\n                type='text'\r\n                placeholder='Full Name'\r\n                label='Full Name'\r\n                component={renderTextInput}\r\n              />\r\n\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button\r\n                  color='primary'\r\n                  type='submit'\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Create\r\n                </Button>\r\n                <Button\r\n                  type='button'\r\n                  onClick={reset}\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </ButtonToolbar>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'create_frontdeskuser_form',\r\n  validate: _validateForm\r\n})(withTranslation('common')(CreateFrontdeskUserCard));\r\n","import React from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { withTranslation } from 'react-i18next';\nimport renderSelectField from '../../../../components/shared/components/form/Select';\nimport Endpoints from '../../../../redux/actions/endpoints';\nimport _ from 'underscore';\n\nconst MODE = {\n  VIEW: 1,\n  PREEDIT: 2,\n  EDIT: 3\n};\n\nconst _validateForm = values => {\n  const errors = {};\n  if (!values.doctorId) {\n    errors.doctorId = 'Select a doctor';\n  }\n  if (!values.hospitalId) {\n    errors.hospitalId = 'Select a hospital';\n  }\n  if (!values.frontdeskUserId) {\n    errors.frontdeskUserId = 'Select a front-desk user';\n  }\n  return errors;\n};\n\nconst doctorsListPromise = new Promise((resolve, reject) => {\n  fetch(Endpoints.getDoctorMasterList)\n    .then(res => res.json())\n    .then(res => resolve(res))\n    .catch(err => reject(err));\n});\n\nconst hospitalListPromise = new Promise((resolve, reject) => {\n  fetch(Endpoints.getHospitalMasterList)\n    .then(res => res.json())\n    .then(res => resolve(res))\n    .catch(err => reject(err));\n});\n\nclass LinkFrontdeskUserForm extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctorsList: [],\n      hospitalsList: [],\n      frontdeskUsersList: [],\n      mode: MODE.VIEW,\n      showFrontdeskUserField: false\n    };\n  }\n\n  componentDidMount() {\n    this._fetchData();\n  }\n\n  _fetchData() {\n    Promise.all([doctorsListPromise, hospitalListPromise])\n      .then(data => {\n        const doctorsList = data[0].map(doctor => {\n          const { pdNumber, doctorId, name } = doctor;\n          return { label: `${name}(${pdNumber})`, value: doctorId };\n        });\n        const hospitalsList = data[1].map(hospital => {\n          const { pdNumber, name, hospitalId } = hospital;\n          return { label: ` ${name}(${pdNumber})`, value: hospitalId };\n        });\n        this.setState({ doctorsList, hospitalsList });\n      })\n      .catch(err => console.error(err));\n  }\n\n  _handleViewSubmit = ({ doctor, hospital }) => {\n    const doctorId = doctor.value;\n    const hospitalId = hospital.value;\n    fetch(Endpoints.getDoctorFrontdeskUser + `/${doctorId}/${hospitalId}`)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        if (!_.isNull(res) && !_.isEmpty(res)) {\n          //set mode to pre edit\n          const frontdeskUser = `${res.fullName}(${res.mobile})`;\n          // const frontdeskUser = res.userId  ;\n          this.setState(\n            { showFrontdeskUserField: true, mode: MODE.PREEDIT },\n            () =>\n              this.props.initialize({\n                doctor,\n                hospital,\n                frontdeskUser\n              })\n          );\n        } else {\n          //no frontdeskuser available for the selected combination\n          //set mode to edit\n          this.setState({ showFrontdeskUserField: true, mode: MODE.EDIT }, () =>\n            this.props.initialize({\n              doctor,\n              hospital\n            })\n          );\n        }\n      })\n      .catch(err => console.error(err));\n  };\n\n  _handlePreEditSubmit = ({ doctor, hospital, frontdeskUser }) => {\n    this.setState({ mode: MODE.EDIT }, () => {\n      this.props.initialize({ doctor, hospital, frontdeskUser });\n    });\n  };\n\n  _handleEditSubmit = ({ doctor, hospital, frontdeskUser }) => {\n    const doctorId = doctor.value;\n    const hospitalId = hospital.value;\n    const frontdeskUserId = frontdeskUser.value;\n    fetch(Endpoints.linkFrontdeskUser, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ doctorId, hospitalId, frontdeskUserId })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status) {\n          this._resetForm();\n        }\n        this.props.onResponse(res);\n      })\n      .catch(err => console.error(err));\n  };\n\n  _resetForm() {\n    this.setState({ mode: MODE.VIEW, showFrontdeskUserField: false }, () =>\n      this.props.initialize({ doctor: '', hospital: '' })\n    );\n  }\n\n  render() {\n    const { mode } = this.state;\n    const { pristine, submitting, handleSubmit } = this.props;\n    let _handleSubmit = undefined;\n    if (_.isEqual(mode, MODE.VIEW)) {\n      _handleSubmit = this._handleViewSubmit;\n    } else if (_.isEqual(mode, MODE.PREEDIT)) {\n      _handleSubmit = this._handlePreEditSubmit;\n    } else if (_.isEqual(mode, MODE.EDIT)) {\n      _handleSubmit = this._handleEditSubmit;\n    }\n    return (\n      <Col md={6}>\n        <Card>\n          <CardBody>\n            <div className='card__title'>\n              <h5 className='bold-text'>Link Front-Desk User</h5>\n            </div>\n            <form\n              className='form form--horizontal'\n              onSubmit={handleSubmit(_handleSubmit)}\n            >\n              <div className='form__form-group'>\n                <span className='form__form-group-label'>Doctor</span>\n                <div className='form__form-group-field'>\n                  <Field\n                    name='doctor'\n                    component={renderSelectField}\n                    options={this.state.doctorsList}\n                  />\n                </div>\n              </div>\n              <div className='form__form-group'>\n                <span className='form__form-group-label'>Hospital</span>\n                <div className='form__form-group-field'>\n                  <Field\n                    name='hospital'\n                    component={renderSelectField}\n                    options={this.state.hospitalsList}\n                  />\n                </div>\n              </div>\n              {this.state.showFrontdeskUserField && (\n                <div className='form__form-group'>\n                  <span className='form__form-group-label'>\n                    Front-desk User\n                  </span>\n                  <div className='form__form-group-field'>\n                    {_.isEqual(mode, MODE.EDIT) && (\n                      <Field\n                        name='frontdeskUser'\n                        component={renderSelectField}\n                        options={this.props.frontdeskUsersList}\n                      />\n                    )}\n                    {_.isEqual(mode, MODE.VIEW) ||\n                      (_.isEqual(mode, MODE.PREEDIT) && (\n                        <Field\n                          name='frontdeskUser'\n                          component='input'\n                          type='text'\n                          disabled={true}\n                        />\n                      ))}\n                  </div>\n                </div>\n              )}\n\n              <ButtonToolbar className='form__button-toolbar'>\n                <Button\n                  color='primary'\n                  type='submit'\n                  disabled={\n                    (!_.isEqual(mode, MODE.PREEDIT) && pristine) || submitting\n                  }\n                >\n                  {_.isEqual(mode, MODE.VIEW) && 'Check'}\n                  {_.isEqual(mode, MODE.PREEDIT) && 'Edit'}\n                  {_.isEqual(mode, MODE.EDIT) && 'Link'}\n                </Button>\n                <Button\n                  type='button'\n                  onClick={() => this._resetForm()}\n                  disabled={\n                    (!_.isEqual(mode, MODE.PREEDIT) &&\n                      (!_.isEqual(mode, MODE.EDIT) && pristine)) ||\n                    submitting\n                  }\n                >\n                  Clear\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'link_frontdeskuser_form',\n  validate: _validateForm\n})(withTranslation('common')(LinkFrontdeskUserForm));\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CreateFrontdeskUserForm from './components/CreateFrontdeskUserForm';\r\nimport LinkFrontdeskUserForm from './components/LinkFrontdeskUserForm';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\n\r\nconst frontdeskUsersPromise = new Promise((resolve, reject) => {\r\n  fetch(Endpoints.getFrontdeskUsersMasterList)\r\n    .then(res => res.json())\r\n    .then(res => resolve(res))\r\n    .catch(err => reject(err));\r\n});\r\n\r\nclass CreateFrontdeskUsersPage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayToast: false,\r\n      toastMessage: '',\r\n      frontdeskUsers: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchFrontdeskUsers();\r\n  }\r\n\r\n  _fetchFrontdeskUsers() {\r\n    Promise.all([frontdeskUsersPromise])\r\n      .then(data => {\r\n        const frontdeskUsers = data[0].map(fdu => {\r\n          const { frontdeskUserId, name, mobile } = fdu;\r\n          return { label: `${mobile} - ${name}`, value: frontdeskUserId };\r\n        });\r\n        this.setState({ frontdeskUsers });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  _displayToast = toastMessage => {\r\n    this.setState({\r\n      displayToast: true,\r\n      toastMessage\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className='dashboard'>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className='page-title'>Front-Desk User</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <CreateFrontdeskUserForm\r\n            onResponse={res => {\r\n              this._displayToast(res.message);\r\n              //refresh frontdesk users\r\n              if (res.status) {\r\n                //for populating the select field in LinkFrontdeskUser form\r\n                const frontdeskUsers = res.frontdeskUsers.map(fdu => {\r\n                  const { frontdeskUserId, name, mobile } = fdu;\r\n                  return {\r\n                    label: `${name}(${mobile})`,\r\n                    value: frontdeskUserId\r\n                  };\r\n                });\r\n                this.setState({ frontdeskUsers });\r\n              }\r\n            }}\r\n          />\r\n          <LinkFrontdeskUserForm\r\n            frontdeskUsersList={this.state.frontdeskUsers}\r\n            onResponse={res => {\r\n              if (res.status) {\r\n                this._displayToast('Linked successfully');\r\n              }\r\n            }}\r\n          />\r\n        </Row>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          autoHideDuration={3000}\r\n          open={this.state.displayToast}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id'\r\n          }}\r\n          onClose={() => this.setState({ displayToast: false })}\r\n          message={<span id='message-id'>{this.state.toastMessage}</span>}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateFrontdeskUsersPage;\r\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport MaterialTable from '../../../../components/containers/Tables/MaterialTable';\nimport UserBlockToggle from '../../../../components/user/userBlockToggle';\n\nconst FrontdeskUsersTable = props => {\n  const columns = [\n    { id: 'fullName', numeric: false, disablePadding: true, label: 'Name' },\n    { id: 'username', numeric: false, disablePadding: true, label: 'Contact' },\n    {\n      id: 'action',\n      label: 'Block/Unblock',\n      render: row => (\n        <UserBlockToggle\n          data={row}\n          status={row.status}\n          id={row._id}\n          loadData={() => props.refreshTable()}\n          afterToggle={value => props.onActionComplete(value)}\n        />\n      )\n    }\n  ];\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          {/* <div className=\"card__title\">\n            <h5 className=\"bold-text\">Previous Announcements</h5>\n          </div> */}\n          <MaterialTable columns={columns} data={props.data} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default FrontdeskUsersTable;\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport FrontdeskUsersTable from './components/FrontdeskUsersTable';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass ViewFrontdeskUsersPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      frontdeskUsersList: [],\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchData();\r\n  }\r\n\r\n  _fetchData() {\r\n    fetch(Endpoints.getFrontdeskList)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({ frontdeskUsersList: res.users });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  _onActionComplete(displayMessage) {\r\n    console.log(displayMessage)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">Front-Desk Users</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <FrontdeskUsersTable\r\n            data={this.state.frontdeskUsersList}\r\n            refreshTable={() => this._fetchData()}\r\n            onActionComplete={value => this._onActionComplete(value)}\r\n          />\r\n        </Row>\r\n        {this.state.displayToast && (\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            autoHideDuration={3000}\r\n            open={this.state.displayToast}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id'\r\n            }}\r\n            onClose={() => this.setState({ displayToast: false })}\r\n            message={<span id=\"message-id\">{this.state.displayMessage}</span>}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewFrontdeskUsersPage;\r\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport MaterialTable from '../../../../components/containers/Tables/MaterialTable';\nimport CloseCircleIcon from 'mdi-react/CloseCircleIcon';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport TicketConfirmation from 'mdi-react/TicketPercentIcon';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport { Link } from 'react-router-dom';\nimport { ROUTE_VIEW_BOOKING_DETAIL } from '../../../../constants/routes';\n\nconst ViewBookingsTable = props => {\n  const columns = [\n    {\n      id: 'bookingId',\n      label: 'Booking ID'\n    },\n    {\n      id: 'tokenDate',\n      label: 'Date'\n    },\n\n    {\n      id: 'status',\n      label: 'Status',\n      render: row => {\n        let icon = null;\n        switch (row.status) {\n          case 'CANCELLED':\n            icon = <CloseCircleIcon color=\"#ff1744\" />;\n            break;\n          case 'BOOKED':\n            icon = <TicketConfirmation color=\"#f57f17\" />;\n            break;\n          case 'VISITED':\n            icon = <CheckIcon color=\"#2e7d32\" />;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\tbreak;\n        }\n        return icon;\n      }\n    },\n    {\n      id: 'username',\n      label: 'Username'\n    },\n    {\n      id: 'doctorName',\n      label: 'Doctor Name'\n    },\n    {\n      id: 'location',\n      label: 'Location'\n    },\n    {\n      id: 'bookingId',\n      label: 'View',\n      render: row => {\n        return (\n          <Link\n            to={{\n              pathname: ROUTE_VIEW_BOOKING_DETAIL,\n              state: { bookingId: row.bookingId }\n            }}\n          >\n            <EyeIcon color=\"#304ffe\" />\n          </Link>\n        );\n      }\n    }\n  ];\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <MaterialTable columns={columns} data={props.data} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default ViewBookingsTable;\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ViewBookingsTable from './components/ViewBookingsTable';\r\nimport { BOOKINGS } from '../../../constants/strings';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Moment from 'moment-timezone';\r\n\r\nclass ViewBookingsTablePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookings: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchData();\r\n  }\r\n\r\n  _fetchData() {\r\n    fetch(Endpoints.getBookings)\r\n      .then(res => res.json())\r\n      .then(bookings => {\r\n        const destructedBookings = bookings.map(booking => {\r\n          const {\r\n            doctorDetails,\r\n            hospitalDetails,\r\n            userDetails,\r\n            tokenDate\r\n          } = booking;\r\n          return {\r\n            ...booking,\r\n            doctorName: doctorDetails.fullName,\r\n            specialization: doctorDetails.specialization,\r\n            hospitalName: hospitalDetails.name,\r\n            location: hospitalDetails.location,\r\n            username: userDetails.fullName,\r\n            tokenDate: Moment(tokenDate)\r\n              .tz('Asia/Calcutta')\r\n              .format('DD-MM-YYYY')\r\n          };\r\n        });\r\n        this.setState({ bookings: destructedBookings });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.bookings);\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"page-title\">{BOOKINGS}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <ViewBookingsTable\r\n            data={this.state.bookings}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewBookingsTablePage\r\n","import React from 'react';\n\nexport default props => (\n  <div className=\"form__form-group\">\n    <span className=\"form__form-group-label\">{props.label}</span>\n    <div className=\"form__form-group-field\">\n      <input type=\"text\" value={props.value} disabled />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\nimport Moment from 'moment-timezone';\nimport _ from 'underscore';\n\nconst BookingDetailCard = props => {\n  const { tokenDate, token, bookedTimeStamp, status } = props.data;\n  let statusColor = 'green';\n  switch (status) {\n    case 'CANCELLED':\n      statusColor = 'red';\n      break;\n    case 'BOOKED':\n      statusColor = 'orange';\n      break;\n    case 'VISITED':\n      statusColor = 'green';\n\t\t\tbreak;\n\t\tdefault: \n\t\t\tbreak;\n  }\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Booking Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled\n                label=\"Token Date\"\n                value={Moment(tokenDate).format('DD-MM-YYYY')}\n              />\n              {!_.isEqual(token.number, 0) && (\n                <TextInputDisabled label=\"Token Number\" value={token.number} />\n              )}\n              <TextInputDisabled label=\"Token Type\" value={token.type} />\n              {!_.isEqual(token.number, 0) && (\n                <TextInputDisabled label=\"Token Time\" value={token.time} />\n              )}\n              <TextInputDisabled\n                label=\"Booked Time\"\n                value={Moment(bookedTimeStamp)\n                  .tz('Asia/Calcutta')\n                  .format('DD-MM-YYYY HH:mm:ss')}\n              />\n              <div style={{ width: '100%', textAlign: 'center' }}>\n                <h3 className=\"bold-text\" style={{ color: statusColor }}>\n                  {status}\n                </h3>\n              </div>\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default BookingDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\nimport Moment from 'moment';\n\nconst UserDetailCard = props => {\n  const { fullName, username, dateOfBirth, gender } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">User Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Username\" value={fullName} />\n              <TextInputDisabled label=\"Mobile\" value={username} />\n              <TextInputDisabled\n                label=\"DOB\"\n                value={Moment(dateOfBirth).format('DD-MM-YYYY')}\n              />\n              <TextInputDisabled label=\"Gender\" value={gender} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default UserDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\n\nconst DoctorDetailCard = props => {\n  const {\n    fullName,\n    specialization,\n    yearsOfExperience,\n    degree,\n    username,\n    gender\n  } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Doctor Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Doctor Name\" value={fullName} />\n              <TextInputDisabled\n                label=\"Specialization\"\n                value={specialization}\n              />\n              <TextInputDisabled\n                label=\"Years of Experience\"\n                value={yearsOfExperience}\n              />\n              <TextInputDisabled label=\"Degree\" value={degree} />\n              <TextInputDisabled label=\"Mobile\" value={username} />\n              <TextInputDisabled label=\"Gender\" value={gender} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default DoctorDetailCard;\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport TextInputDisabled from '../../../../components/custom/TextInputDisabled';\n\nconst HospitalDetailCard = props => {\n  const { name, address, location, pincode } = props.data;\n  return (\n    <Col md={6} lg={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">Hospital Details</h5>\n          </div>\n          <div>\n            <form className=\"form form--horizontal\">\n              <TextInputDisabled label=\"Hospital Name\" value={name} />\n              <TextInputDisabled label=\"Address\" value={address} />\n              <TextInputDisabled label=\"Location\" value={location} />\n              <TextInputDisabled label=\"Pin Code\" value={pincode} />\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default HospitalDetailCard;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport BookingDetailCard from './components/BookingDetailCard';\nimport UserDetailCard from './components/UserDetailsCard';\nimport DoctorDetailCard from './components/DoctorDetailsCard';\nimport HospitalDetailCard from './components/HospitalDetailsCard';\nimport Endpoints from '../../../redux/actions/endpoints';\nimport _ from 'underscore';\n\nclass ViewBookingDetailPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookingDetail: null\n    };\n  }\n\n  componentDidMount() {\n    this._fetchData();\n  }\n\n  _fetchData() {\n    fetch(\n      Endpoints.getBookingDetail + '/' + this.props.location.state.bookingId\n    )\n      .then(res => res.json())\n      .then(bookingDetail => {\n        console.log(bookingDetail);\n        this.setState({ bookingDetail });\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    const { bookingDetail } = this.state;\n    return (\n      <Container className=\"dashboard\">\n        <Row>\n          <Col md={12}>\n            <h3 className=\"page-title\">\n              {'Booking ID: ' + this.props.location.state.bookingId}\n            </h3>\n          </Col>\n        </Row>\n        {!_.isNull(this.state.bookingDetail) && (\n          <div>\n            <Row>\n              <BookingDetailCard data={bookingDetail} />\n              <UserDetailCard data={bookingDetail.userDetails} />\n            </Row>\n            <Row>\n              <DoctorDetailCard data={bookingDetail.doctorDetails} />\n              <HospitalDetailCard data={bookingDetail.hospitalDetails} />\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default ViewBookingDetailPage;\n","import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { ButtonToolbar, Button } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass CustomerCareForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditMode: false,\r\n      contactNumber: '',\r\n      contactEmail: '',\r\n      displayToast: false,\r\n      displayMessage: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchSupportDetails();\r\n  }\r\n\r\n  _fetchSupportDetails() {\r\n    fetch(Endpoints.getSupportDetails)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const { contactNumber, contactEmail } = res;\r\n        this.setState({ contactNumber, contactEmail }, () =>\r\n          this.props.initialize({\r\n            contactNumber,\r\n            contactEmail\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  _handleSubmit = ({ contactNumber, contactEmail }) => {\r\n    this._updateSupportDetails(contactNumber, contactEmail);\r\n  };\r\n\r\n  _handleEdit = () => this.setState({ isEditMode: true });\r\n\r\n  _updateSupportDetails(contactNumber, contactEmail) {\r\n    fetch(Endpoints.setSupportDetails, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT',\r\n      body: JSON.stringify({ contactNumber, contactEmail })\r\n    }).then(res => {\r\n      if (res.status) {\r\n        this.setState({\r\n          displayToast: true,\r\n          displayMessage: 'Customer Care details updated successfully',\r\n          isEditMode: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          displayToast: false,\r\n          displayMessage: 'Customer Care details updation failure.'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    const { isEditMode } = this.state;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>Contact Details</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={\r\n                this.state.isEditMode\r\n                  ? handleSubmit(this._handleSubmit)\r\n                  : handleSubmit(this._handleEdit)\r\n              }\r\n            >\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Contact Number</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='contactNumber'\r\n                    component='input'\r\n                    type='text'\r\n                    placeholder='Contact Number'\r\n                    disabled={!isEditMode}\r\n                    minLength={10}\r\n                    maxLength={10}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Contact Email</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='contactEmail'\r\n                    component='input'\r\n                    type='email'\r\n                    placeholder='Contact Email'\r\n                    disabled={!isEditMode}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button color='primary'>\r\n                  {this.state.isEditMode ? 'Save' : 'Edit'}\r\n                </Button>\r\n              </ButtonToolbar>\r\n              {this.state.displayToast && (\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                  autoHideDuration={3000}\r\n                  open={this.state.displayToast}\r\n                  ContentProps={{\r\n                    'aria-describedby': 'message-id'\r\n                  }}\r\n                  onClose={() => this.setState({ displayToast: false })}\r\n                  message={\r\n                    <span id='message-id'>{this.state.displayMessage}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({ form: 'customercare_form' })(\r\n  withTranslation('common')(CustomerCareForm)\r\n);\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport CustomerCareForm from './components/CustomerCareForm';\r\nimport { CUSTOMER_CARE } from '../../constants/strings';\r\n\r\nconst CustomerCarePage = () => (\r\n  <Container className='dashboard'>\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className='page-title'>{CUSTOMER_CARE}</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <CustomerCareForm />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default CustomerCarePage;\r\n","import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { ButtonToolbar, Button } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { CHANGE_PASSWORD } from '../../../constants/strings';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Endpoints from '../../../redux/actions/endpoints';\r\nimport EyeIcon from 'mdi-react/EyeIcon';\r\n\r\nclass ChangePassword extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayToast: false,\r\n      displayMessage: '',\r\n      showPassword: false\r\n    };\r\n  }\r\n\r\n  _handleSubmit = ({ currentPassword, newPassword }) => {\r\n    fetch(Endpoints.changePassword, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT',\r\n      body: JSON.stringify({ currentPassword, newPassword })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState(\r\n          { displayToast: true, displayMessage: res.message },\r\n          () => {\r\n            if (res.status) {\r\n              this.props.reset();\r\n            }\r\n          }\r\n        )\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  showPassword = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  };\r\n\r\n  render() {\r\n    const { pristine, reset, submitting, handleSubmit } = this.props;\r\n    const { showPassword } = this.state;\r\n    return (\r\n      <Col md={6}>\r\n        <Card>\r\n          <CardBody>\r\n            <div className='card__title'>\r\n              <h5 className='bold-text'>{CHANGE_PASSWORD}</h5>\r\n            </div>\r\n            <form\r\n              className='form form--horizontal'\r\n              onSubmit={handleSubmit(this._handleSubmit)}\r\n            >\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>Current Password</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='currentPassword'\r\n                    component='input'\r\n                    type='password'\r\n                    placeholder='Current Password'\r\n                    minLength={6}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='form__form-group'>\r\n                <span className='form__form-group-label'>New Passoword</span>\r\n                <div className='form__form-group-field'>\r\n                  <Field\r\n                    name='newPassword'\r\n                    component='input'\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder='New password'\r\n                    minLength={6}\r\n                  />\r\n                  <button\r\n                    className={`form__form-group-button${\r\n                      showPassword ? ' active' : ''\r\n                    }`}\r\n                    onClick={e => this.showPassword(e)}\r\n                    type='button'\r\n                  >\r\n                    <EyeIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <ButtonToolbar className='form__button-toolbar'>\r\n                <Button color='primary' type='submit'>\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  type='button'\r\n                  onClick={reset}\r\n                  disabled={pristine || submitting}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </ButtonToolbar>\r\n              {this.state.displayToast && (\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                  autoHideDuration={3000}\r\n                  open={this.state.displayToast}\r\n                  ContentProps={{\r\n                    'aria-describedby': 'message-id'\r\n                  }}\r\n                  onClose={() => this.setState({ displayToast: false })}\r\n                  message={\r\n                    <span id='message-id'>{this.state.displayMessage}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({ form: 'change_password_form' })(\r\n  withTranslation('common')(ChangePassword)\r\n);\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport ChangePasswordCard from './components/ChangePasswordCard';\r\n\r\nconst SettingsPage = () => (\r\n  <Container className=\"dashboard\">\r\n    <Row>\r\n      <Col md={12}>\r\n        <h3 className=\"page-title\">Settings</h3>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <ChangePasswordCard />\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Layout from '../Layout/index';\r\nimport MainWrapper from './MainWrapper';\r\n\r\nimport LogIn from '../LogIn/index';\r\nimport ViewUsers from '../UserManagement/ViewUsers/index';\r\nimport CreateDoctor from '../DoctorManagement/CreateDoctor/index';\r\nimport EditDoctor from '../DoctorManagement/CreateDoctor/editDoctor';\r\nimport ViewDoctors from '../DoctorManagement/ViewDoctors/index';\r\nimport CreateHospital from '../HospitalManagement/CreateHospital/index';\r\nimport EditHospitalPage from '../HospitalManagement/CreateHospital/editHospital';\r\nimport ViewHospitals from '../HospitalManagement/ViewHospitals/index';\r\nimport CreateSchedule from '../ScheduleManagement/CreateSchedule/index';\r\nimport EditSchedulePage from '../ScheduleManagement/CreateSchedule/editSchedule';\r\nimport ViewSchedules from '../ScheduleManagement/ViewSchedule/index';\r\nimport Announcement from '../Announcement';\r\nimport CreateFrontdeskUser from '../FrontdeskUsers/CreateFrontdeskUser';\r\nimport ViewFrontdeskUser from '../FrontdeskUsers/ViewFrontdeskUser';\r\nimport ViewBookings from '../Bookings/ViewBookings';\r\nimport ViewBookingDetail from '../Bookings/ViewBookingDetail';\r\nimport CustomerCare from '../CustomerCare';\r\nimport Settings from '../SettingsManagement'\r\n\r\nimport {\r\n\tROUTE_CREATE_DOCTOR,\r\n\tROUTE_EDIT_DOCTOR,\r\n  ROUTE_VIEW_DOCTORS,\r\n\tROUTE_CREATE_HOSPITAL,\r\n\tROUTE_EDIT_HOSPITAL,\r\n  ROUTE_VIEW_HOSPITALS,\r\n  ROUTE_CREATE_SCHEDULE,\r\n  ROUTE_VIEW_SCHEDULES,\r\n  ROUTE_VIEW_USERS,\r\n  ROUTE_ANNOUNCEMENT,\r\n  ROUTE_CREATE_FRONTDESK_USER,\r\n  ROUTE_VIEW_FRONTDESK_USER,\r\n  ROUTE_VIEW_BOOKINGS,\r\n  ROUTE_VIEW_BOOKING_DETAIL,\r\n\tROUTE_CUSTOMER_CARE,\r\n\tROUTE_EDIT_SCHEDULE,\r\n  ROUTE_SETTINGS\r\n} from '../../constants/routes';\r\n\r\nconst Pages = () => (\r\n  <Switch>\r\n    <Route path={ROUTE_VIEW_USERS} component={ViewUsers} />\r\n    <Route path={ROUTE_CREATE_DOCTOR} component={CreateDoctor} />\r\n\t\t<Route path={ROUTE_EDIT_DOCTOR} component={EditDoctor} />\r\n    <Route path={ROUTE_VIEW_DOCTORS} component={ViewDoctors} />\r\n    <Route path={ROUTE_CREATE_HOSPITAL} component={CreateHospital} />\r\n\t\t<Route path={ROUTE_EDIT_HOSPITAL} component={EditHospitalPage} />\r\n    <Route path={ROUTE_VIEW_HOSPITALS} component={ViewHospitals} />\r\n    <Route path={ROUTE_CREATE_SCHEDULE} component={CreateSchedule} />\r\n\t\t<Route path={ROUTE_EDIT_SCHEDULE} component={EditSchedulePage} />\r\n    <Route path={ROUTE_VIEW_SCHEDULES} component={ViewSchedules} />\r\n    <Route path={ROUTE_ANNOUNCEMENT} component={Announcement} />\r\n    <Route path={ROUTE_CREATE_FRONTDESK_USER} component={CreateFrontdeskUser} />\r\n    <Route path={ROUTE_VIEW_FRONTDESK_USER} component={ViewFrontdeskUser} />\r\n    <Route path={ROUTE_VIEW_BOOKINGS} component={ViewBookings} />\r\n    <Route path={ROUTE_VIEW_BOOKING_DETAIL} component={ViewBookingDetail}  />\r\n    <Route path={ROUTE_CUSTOMER_CARE} component={CustomerCare}  />\r\n    <Route path={ROUTE_SETTINGS} component={Settings} />\r\n  </Switch>\r\n);\r\n\r\nconst wrappedRoutes = () => (\r\n  <div>\r\n    <Layout />\r\n    <div className='container__wrap' style={{height: '100%'}}>\r\n      <Route path='/pages' component={Pages} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Router = () => (\r\n  <MainWrapper>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={LogIn} />\r\n        <Route exact path='/log_in' component={LogIn} />\r\n        <Route path='/' component={wrappedRoutes} />\r\n      </Switch>\r\n    </main>\r\n  </MainWrapper>\r\n);\r\n\r\nexport default Router;\r\n","import {\r\n  CHANGE_THEME_TO_DARK,\r\n  CHANGE_THEME_TO_LIGHT,\r\n} from '../actions/themeActions';\r\n\r\nconst initialState = {\r\n  className: 'theme-light',\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_THEME_TO_DARK:\r\n      return { className: 'theme-dark' };\r\n    case CHANGE_THEME_TO_LIGHT:\r\n      return { className: 'theme-light' };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHANGE_SIDEBAR_VISIBILITY,\r\n  CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n} from '../actions/sidebarActions';\r\n\r\nconst initialState = {\r\n  show: false,\r\n  collapse: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_SIDEBAR_VISIBILITY:\r\n      return { ...state, collapse: !state.collapse };\r\n    case CHANGE_MOBILE_SIDEBAR_VISIBILITY:\r\n      return { ...state, show: !state.show };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\nimport { sidebarReducer, themeReducer, doctorReducer, hospitalReducer, userReducer, scheduleReducer } from '../../redux/reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n  form: reduxFormReducer, // mounted under \"form\",\r\n  theme: themeReducer,\r\n\tsidebar: sidebarReducer,\r\n\tdoctor: doctorReducer,\r\n\thospital: hospitalReducer,\r\n\tuser: userReducer,\r\n\tschedule: scheduleReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'RESPONSE_DOCTORLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SPECIALIZATIONLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspecialization: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_DOCTORDETAIL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorDetail: action.data\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t case 'RESPONSE_HOSPITALLIST':\n\t\treturn {\n\t\t\t...state,\n\t\t hospitalList: action.data,\n\t\t}\n\t\tcase 'RESPONSE_HOSPITALDETAIL':\n\t\treturn {\n\t\t\t...state,\n\t\t hospitalDetail: action.data,\n\t\t}\n\t\t\n\t default:\n\t\treturn state\n\t}\n}\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t case 'RESPONSE_CUSTOMERLIST':\n\t\treturn {\n\t\t\t...state,\n\t\t customerList: action.data,\n\t\t}\n\t default:\n\t\treturn state\n\t}\n}\n","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'RESPONSE_DOCTOR_MASTERLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdoctorMasterList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_HOSPITAL_MASTERLIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thospitalMasterList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SCHEDULE_LIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduleList: action.data\n\t\t\t};\n\t\tcase 'RESPONSE_SCHEDULE_DETAIL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduleDetail: action.data\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App/App';\r\n\r\nrender(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n","export const CHANGE_THEME_TO_DARK = 'CHANGE_THEME_TO_DARK';\r\nexport const CHANGE_THEME_TO_LIGHT = 'CHANGE_THEME_TO_LIGHT';\r\n\r\nexport function changeThemeToDark() {\r\n  return {\r\n    type: CHANGE_THEME_TO_DARK,\r\n  };\r\n}\r\n\r\nexport function changeThemeToLight() {\r\n  return {\r\n    type: CHANGE_THEME_TO_LIGHT,\r\n  };\r\n}\r\n","export const CHANGE_SIDEBAR_VISIBILITY = 'CHANGE_SIDEBAR_VISIBILITY';\r\nexport const CHANGE_MOBILE_SIDEBAR_VISIBILITY = 'CHANGE_MOBILE_SIDEBAR_VISIBILITY';\r\n\r\nexport function changeSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n\r\nexport function changeMobileSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n"],"sourceRoot":""}